// Generated by GenerateJson.ts. Do not modify.

import {OpcodeMap, OpcodeVariant} from "./OpcodesTypes.js";

// nop 
const variant_00: OpcodeVariant = {
  "mnemonic": "nop",
  "params": [],
  "tokens": [],
  "opcodes": [
    0
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "00",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "No operation is performed.",
    "instruction": "nop"
  }
};

// ld bc,nnnn
const variant_01_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "bc",
    "nnnn"
  ],
  "tokens": [
    "bc",
    ",",
    "nnnn"
  ],
  "opcodes": [
    1,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "01",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads <var>nn</var> into BC.",
    "instruction": "ld bc,nn"
  }
};

// ld (bc),a
const variant_02: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(bc)",
    "a"
  ],
  "tokens": [
    "(",
    "bc",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    2
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "02",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Stores A into the memory location pointed to by BC.",
    "instruction": "ld (bc),a"
  }
};

// inc bc
const variant_03: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "bc"
  ],
  "tokens": [
    "bc"
  ],
  "opcodes": [
    3
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "03",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Adds one to BC.",
    "instruction": "inc bc"
  }
};

// inc b
const variant_04: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    4
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "04",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to B.",
    "instruction": "inc b"
  }
};

// dec b
const variant_05: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    5
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "05",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from B.",
    "instruction": "dec b"
  }
};

// ld b,nn
const variant_06_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "nn"
  ],
  "tokens": [
    "b",
    ",",
    "nn"
  ],
  "opcodes": [
    6,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "06",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into B.",
    "instruction": "ld b,n"
  }
};

// rlca 
const variant_07: OpcodeVariant = {
  "mnemonic": "rlca",
  "params": [],
  "tokens": [],
  "opcodes": [
    7
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "07",
    "undocumented": false,
    "z180": false,
    "flags": "+0-0--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlca"
  }
};

// ex af,af'
const variant_08: OpcodeVariant = {
  "mnemonic": "ex",
  "params": [
    "af",
    "af'"
  ],
  "tokens": [
    "af",
    ",",
    "af'"
  ],
  "opcodes": [
    8
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "08",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Exchanges the 16-bit contents of AF and AF'.",
    "instruction": "ex af,af'"
  }
};

// add hl,bc
const variant_09: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "hl",
    "bc"
  ],
  "tokens": [
    "hl",
    ",",
    "bc"
  ],
  "opcodes": [
    9
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "09",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The value of BC is added to HL.",
    "instruction": "add hl,bc"
  }
};

// ld a,(bc)
const variant_0A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "(bc)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "bc",
    ")"
  ],
  "opcodes": [
    10
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "0A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads the value pointed to by BC into A.",
    "instruction": "ld a,(bc)"
  }
};

// ld (bc)
const variant_0A_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(bc)"
  ],
  "tokens": [
    "(",
    "bc",
    ")"
  ],
  "opcodes": [
    10
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "0A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads the value pointed to by BC into A.",
    "instruction": "ld a,(bc)"
  }
};

// dec bc
const variant_0B: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "bc"
  ],
  "tokens": [
    "bc"
  ],
  "opcodes": [
    11
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "0B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Subtracts one from BC.",
    "instruction": "dec bc"
  }
};

// inc c
const variant_0C: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    12
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "0C",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to C.",
    "instruction": "inc c"
  }
};

// dec c
const variant_0D: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    13
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "0D",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from C.",
    "instruction": "dec c"
  }
};

// ld c,nn
const variant_0E_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "nn"
  ],
  "tokens": [
    "c",
    ",",
    "nn"
  ],
  "opcodes": [
    14,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "0E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into C.",
    "instruction": "ld c,n"
  }
};

// rrca 
const variant_0F: OpcodeVariant = {
  "mnemonic": "rrca",
  "params": [],
  "tokens": [],
  "opcodes": [
    15
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "0F",
    "undocumented": false,
    "z180": false,
    "flags": "+0-0--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrca"
  }
};

// djnz offset
const variant_10_offset: OpcodeVariant = {
  "mnemonic": "djnz",
  "params": [
    "offset"
  ],
  "tokens": [
    "offset"
  ],
  "opcodes": [
    16,
    "offset"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "10",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 13,
    "without_jump_clock_count": 8,
    "description": "The B register is decremented, and if not zero, the signed value <var>D</var> is added to PC. The jump is measured from the start of the instruction opcode.",
    "instruction": "djnz d"
  }
};

// ld de,nnnn
const variant_11_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "de",
    "nnnn"
  ],
  "tokens": [
    "de",
    ",",
    "nnnn"
  ],
  "opcodes": [
    17,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "11",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads <var>nn</var> into DE.",
    "instruction": "ld de,nn"
  }
};

// ld (de),a
const variant_12: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(de)",
    "a"
  ],
  "tokens": [
    "(",
    "de",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    18
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "12",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Stores A into the memory location pointed to by DE.",
    "instruction": "ld (de),a"
  }
};

// inc de
const variant_13: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "de"
  ],
  "tokens": [
    "de"
  ],
  "opcodes": [
    19
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "13",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Adds one to DE.",
    "instruction": "inc de"
  }
};

// inc d
const variant_14: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    20
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "14",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to D.",
    "instruction": "inc d"
  }
};

// dec d
const variant_15: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    21
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "15",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from D.",
    "instruction": "dec d"
  }
};

// ld d,nn
const variant_16_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "nn"
  ],
  "tokens": [
    "d",
    ",",
    "nn"
  ],
  "opcodes": [
    22,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "16",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into D.",
    "instruction": "ld d,n"
  }
};

// rla 
const variant_17: OpcodeVariant = {
  "mnemonic": "rla",
  "params": [],
  "tokens": [],
  "opcodes": [
    23
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "17",
    "undocumented": false,
    "z180": false,
    "flags": "+0-0--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rla"
  }
};

// jr offset
const variant_18_offset: OpcodeVariant = {
  "mnemonic": "jr",
  "params": [
    "offset"
  ],
  "tokens": [
    "offset"
  ],
  "opcodes": [
    24,
    "offset"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "18",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The signed value <var>D</var> is added to PC. The jump is measured from the start of the instruction opcode.",
    "instruction": "jr d"
  }
};

// add hl,de
const variant_19: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "hl",
    "de"
  ],
  "tokens": [
    "hl",
    ",",
    "de"
  ],
  "opcodes": [
    25
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "19",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The value of DE is added to HL.",
    "instruction": "add hl,de"
  }
};

// ld a,(de)
const variant_1A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "(de)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "de",
    ")"
  ],
  "opcodes": [
    26
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "1A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads the value pointed to by DE into A.",
    "instruction": "ld a,(de)"
  }
};

// ld (de)
const variant_1A_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(de)"
  ],
  "tokens": [
    "(",
    "de",
    ")"
  ],
  "opcodes": [
    26
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "1A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads the value pointed to by DE into A.",
    "instruction": "ld a,(de)"
  }
};

// dec de
const variant_1B: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "de"
  ],
  "tokens": [
    "de"
  ],
  "opcodes": [
    27
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "1B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Subtracts one from DE.",
    "instruction": "dec de"
  }
};

// inc e
const variant_1C: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    28
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "1C",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to E.",
    "instruction": "inc e"
  }
};

// dec e
const variant_1D: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    29
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "1D",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from E.",
    "instruction": "dec e"
  }
};

// ld e,nn
const variant_1E_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "nn"
  ],
  "tokens": [
    "e",
    ",",
    "nn"
  ],
  "opcodes": [
    30,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "1E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into E.",
    "instruction": "ld e,n"
  }
};

// rra 
const variant_1F: OpcodeVariant = {
  "mnemonic": "rra",
  "params": [],
  "tokens": [],
  "opcodes": [
    31
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "1F",
    "undocumented": false,
    "z180": false,
    "flags": "+0-0--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rra"
  }
};

// jr nz,offset
const variant_20_offset: OpcodeVariant = {
  "mnemonic": "jr",
  "params": [
    "nz",
    "offset"
  ],
  "tokens": [
    "nz",
    ",",
    "offset"
  ],
  "opcodes": [
    32,
    "offset"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "20",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 7,
    "description": "If the zero flag is unset, the signed value <var>D</var> is added to PC. The jump is measured from the start of the instruction opcode.",
    "instruction": "jr nz,d"
  }
};

// ld hl,nnnn
const variant_21_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "hl",
    "nnnn"
  ],
  "tokens": [
    "hl",
    ",",
    "nnnn"
  ],
  "opcodes": [
    33,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "21",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads <var>nn</var> into HL.",
    "instruction": "ld hl,nn"
  }
};

// ld (nnnn),hl
const variant_22_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "hl"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "hl"
  ],
  "opcodes": [
    34,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "22",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "Stores HL into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),hl"
  }
};

// inc hl
const variant_23: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "hl"
  ],
  "tokens": [
    "hl"
  ],
  "opcodes": [
    35
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "23",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Adds one to HL.",
    "instruction": "inc hl"
  }
};

// inc h
const variant_24: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    36
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "24",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to H.",
    "instruction": "inc h"
  }
};

// dec h
const variant_25: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    37
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "25",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from H.",
    "instruction": "dec h"
  }
};

// ld h,nn
const variant_26_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "nn"
  ],
  "tokens": [
    "h",
    ",",
    "nn"
  ],
  "opcodes": [
    38,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "26",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into H.",
    "instruction": "ld h,n"
  }
};

// daa 
const variant_27: OpcodeVariant = {
  "mnemonic": "daa",
  "params": [],
  "tokens": [],
  "opcodes": [
    39
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "27",
    "undocumented": false,
    "z180": false,
    "flags": "*-P*++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adjusts A for BCD addition and subtraction operations.",
    "instruction": "daa"
  }
};

// jr z,offset
const variant_28_offset: OpcodeVariant = {
  "mnemonic": "jr",
  "params": [
    "z",
    "offset"
  ],
  "tokens": [
    "z",
    ",",
    "offset"
  ],
  "opcodes": [
    40,
    "offset"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "28",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 7,
    "description": "If the zero flag is set, the signed value <var>D</var> is added to PC. The jump is measured from the start of the instruction opcode.",
    "instruction": "jr z,d"
  }
};

// add hl,hl
const variant_29: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "hl",
    "hl"
  ],
  "tokens": [
    "hl",
    ",",
    "hl"
  ],
  "opcodes": [
    41
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "29",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The value of HL is added to HL.",
    "instruction": "add hl,hl"
  }
};

// ld hl,(nnnn)
const variant_2A_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "hl",
    "(nnnn)"
  ],
  "tokens": [
    "hl",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    42,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "2A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "Loads the value pointed to by <var>nn</var> into HL.",
    "instruction": "ld hl,(nn)"
  }
};

// dec hl
const variant_2B: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "hl"
  ],
  "tokens": [
    "hl"
  ],
  "opcodes": [
    43
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "2B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Subtracts one from HL.",
    "instruction": "dec hl"
  }
};

// inc l
const variant_2C: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    44
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "2C",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to L.",
    "instruction": "inc l"
  }
};

// dec l
const variant_2D: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    45
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "2D",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from L.",
    "instruction": "dec l"
  }
};

// ld l,nn
const variant_2E_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "nn"
  ],
  "tokens": [
    "l",
    ",",
    "nn"
  ],
  "opcodes": [
    46,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "2E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into L.",
    "instruction": "ld l,n"
  }
};

// cpl 
const variant_2F: OpcodeVariant = {
  "mnemonic": "cpl",
  "params": [],
  "tokens": [],
  "opcodes": [
    47
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "2F",
    "undocumented": false,
    "z180": false,
    "flags": "-1-1--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are inverted (one's complement).",
    "instruction": "cpl"
  }
};

// jr nc,offset
const variant_30_offset: OpcodeVariant = {
  "mnemonic": "jr",
  "params": [
    "nc",
    "offset"
  ],
  "tokens": [
    "nc",
    ",",
    "offset"
  ],
  "opcodes": [
    48,
    "offset"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "30",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 7,
    "description": "If the carry flag is unset, the signed value <var>D</var> is added to PC. The jump is measured from the start of the instruction opcode.",
    "instruction": "jr nc,d"
  }
};

// ld sp,nnnn
const variant_31_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sp",
    "nnnn"
  ],
  "tokens": [
    "sp",
    ",",
    "nnnn"
  ],
  "opcodes": [
    49,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "31",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads <var>nn</var> into SP.",
    "instruction": "ld sp,nn"
  }
};

// ld (nnnn),a
const variant_32_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "a"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    50,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "32",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 13,
    "without_jump_clock_count": 13,
    "description": "Stores A into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),a"
  }
};

// inc sp
const variant_33: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "sp"
  ],
  "tokens": [
    "sp"
  ],
  "opcodes": [
    51
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "33",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Adds one to SP.",
    "instruction": "inc sp"
  }
};

// inc (hl)
const variant_34: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    52
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "34",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "Adds one to (HL).",
    "instruction": "inc (hl)"
  }
};

// dec (hl)
const variant_35: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    53
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "35",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "Subtracts one from (HL).",
    "instruction": "dec (hl)"
  }
};

// ld (hl),nn
const variant_36_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "nn"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "nn"
  ],
  "opcodes": [
    54,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "36",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads <var>n</var> into (HL).",
    "instruction": "ld (hl),n"
  }
};

// scf 
const variant_37: OpcodeVariant = {
  "mnemonic": "scf",
  "params": [],
  "tokens": [],
  "opcodes": [
    55
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "37",
    "undocumented": false,
    "z180": false,
    "flags": "10-0--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Sets the carry flag.",
    "instruction": "scf"
  }
};

// jr c,offset
const variant_38_offset: OpcodeVariant = {
  "mnemonic": "jr",
  "params": [
    "c",
    "offset"
  ],
  "tokens": [
    "c",
    ",",
    "offset"
  ],
  "opcodes": [
    56,
    "offset"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "38",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 7,
    "description": "If the carry flag is set, the signed value <var>D</var> is added to PC. The jump is measured from the start of the instruction opcode.",
    "instruction": "jr c,d"
  }
};

// add hl,sp
const variant_39: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "hl",
    "sp"
  ],
  "tokens": [
    "hl",
    ",",
    "sp"
  ],
  "opcodes": [
    57
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "39",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The value of SP is added to HL.",
    "instruction": "add hl,sp"
  }
};

// ld a,(nnnn)
const variant_3A_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "(nnnn)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    58,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "3A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 13,
    "without_jump_clock_count": 13,
    "description": "Loads the value pointed to by <var>nn</var> into A.",
    "instruction": "ld a,(nn)"
  }
};

// ld (nnnn)
const variant_3A_nnnn_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    58,
    "nnnn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "3A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 13,
    "without_jump_clock_count": 13,
    "description": "Loads the value pointed to by <var>nn</var> into A.",
    "instruction": "ld a,(nn)"
  }
};

// dec sp
const variant_3B: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "sp"
  ],
  "tokens": [
    "sp"
  ],
  "opcodes": [
    59
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "3B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Subtracts one from SP.",
    "instruction": "dec sp"
  }
};

// inc a
const variant_3C: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    60
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "3C",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds one to A.",
    "instruction": "inc a"
  }
};

// dec a
const variant_3D: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    61
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "3D",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts one from A.",
    "instruction": "dec a"
  }
};

// ld a,nn
const variant_3E_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    62,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "3E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into A.",
    "instruction": "ld a,n"
  }
};

// ld nn
const variant_3E_nn_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    62,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "3E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Loads <var>n</var> into A.",
    "instruction": "ld a,n"
  }
};

// ccf 
const variant_3F: OpcodeVariant = {
  "mnemonic": "ccf",
  "params": [],
  "tokens": [],
  "opcodes": [
    63
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "3F",
    "undocumented": false,
    "z180": false,
    "flags": "*0-*--",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Inverts the carry flag.",
    "instruction": "ccf"
  }
};

// ld b,b
const variant_40: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "b"
  ],
  "tokens": [
    "b",
    ",",
    "b"
  ],
  "opcodes": [
    64
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "40",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into B.",
    "instruction": "ld b,b"
  }
};

// ld b,c
const variant_41: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "c"
  ],
  "tokens": [
    "b",
    ",",
    "c"
  ],
  "opcodes": [
    65
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "41",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into B.",
    "instruction": "ld b,c"
  }
};

// ld b,d
const variant_42: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "d"
  ],
  "tokens": [
    "b",
    ",",
    "d"
  ],
  "opcodes": [
    66
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "42",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into B.",
    "instruction": "ld b,d"
  }
};

// ld b,e
const variant_43: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "e"
  ],
  "tokens": [
    "b",
    ",",
    "e"
  ],
  "opcodes": [
    67
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "43",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into B.",
    "instruction": "ld b,e"
  }
};

// ld b,h
const variant_44: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "h"
  ],
  "tokens": [
    "b",
    ",",
    "h"
  ],
  "opcodes": [
    68
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "44",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into B.",
    "instruction": "ld b,h"
  }
};

// ld bc,hl
const variant_44_4D_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "bc",
    "hl"
  ],
  "tokens": [
    "bc",
    ",",
    "hl"
  ],
  "opcodes": [
    68,
    77
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "444D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of HL are loaded into BC.",
    "instruction": "ld bc,hl"
  }
};

// ld b,l
const variant_45: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "l"
  ],
  "tokens": [
    "b",
    ",",
    "l"
  ],
  "opcodes": [
    69
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "45",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into B.",
    "instruction": "ld b,l"
  }
};

// ld b,(hl)
const variant_46: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "(hl)"
  ],
  "tokens": [
    "b",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    70
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "46",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into B.",
    "instruction": "ld b,(hl)"
  }
};

// ld b,a
const variant_47: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "a"
  ],
  "tokens": [
    "b",
    ",",
    "a"
  ],
  "opcodes": [
    71
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "47",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into B.",
    "instruction": "ld b,a"
  }
};

// ld c,b
const variant_48: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "b"
  ],
  "tokens": [
    "c",
    ",",
    "b"
  ],
  "opcodes": [
    72
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "48",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into C.",
    "instruction": "ld c,b"
  }
};

// ld c,c
const variant_49: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "c"
  ],
  "tokens": [
    "c",
    ",",
    "c"
  ],
  "opcodes": [
    73
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "49",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into C.",
    "instruction": "ld c,c"
  }
};

// ld c,d
const variant_4A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "d"
  ],
  "tokens": [
    "c",
    ",",
    "d"
  ],
  "opcodes": [
    74
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "4A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into C.",
    "instruction": "ld c,d"
  }
};

// ld c,e
const variant_4B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "e"
  ],
  "tokens": [
    "c",
    ",",
    "e"
  ],
  "opcodes": [
    75
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "4B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into C.",
    "instruction": "ld c,e"
  }
};

// ld c,h
const variant_4C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "h"
  ],
  "tokens": [
    "c",
    ",",
    "h"
  ],
  "opcodes": [
    76
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "4C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into C.",
    "instruction": "ld c,h"
  }
};

// ld c,l
const variant_4D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "l"
  ],
  "tokens": [
    "c",
    ",",
    "l"
  ],
  "opcodes": [
    77
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "4D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into C.",
    "instruction": "ld c,l"
  }
};

// ld c,(hl)
const variant_4E: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "(hl)"
  ],
  "tokens": [
    "c",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    78
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "4E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into C.",
    "instruction": "ld c,(hl)"
  }
};

// ld bc,(hl)
const variant_4E_23_46_2B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "bc",
    "(hl)"
  ],
  "tokens": [
    "bc",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    78,
    35,
    70,
    43
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "4E23462B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 26,
    "without_jump_clock_count": 26,
    "description": "The contents of (HL) are loaded into BC.",
    "instruction": "ld bc,(hl)"
  }
};

// ld c,a
const variant_4F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "a"
  ],
  "tokens": [
    "c",
    ",",
    "a"
  ],
  "opcodes": [
    79
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "4F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into C.",
    "instruction": "ld c,a"
  }
};

// ld d,b
const variant_50: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "b"
  ],
  "tokens": [
    "d",
    ",",
    "b"
  ],
  "opcodes": [
    80
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "50",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into D.",
    "instruction": "ld d,b"
  }
};

// ld de,bc
const variant_50_59_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "de",
    "bc"
  ],
  "tokens": [
    "de",
    ",",
    "bc"
  ],
  "opcodes": [
    80,
    89
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "5059",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of BC are loaded into DE.",
    "instruction": "ld de,bc"
  }
};

// ld d,c
const variant_51: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "c"
  ],
  "tokens": [
    "d",
    ",",
    "c"
  ],
  "opcodes": [
    81
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "51",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into D.",
    "instruction": "ld d,c"
  }
};

// ld d,d
const variant_52: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "d"
  ],
  "tokens": [
    "d",
    ",",
    "d"
  ],
  "opcodes": [
    82
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "52",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into D.",
    "instruction": "ld d,d"
  }
};

// ld d,e
const variant_53: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "e"
  ],
  "tokens": [
    "d",
    ",",
    "e"
  ],
  "opcodes": [
    83
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "53",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into D.",
    "instruction": "ld d,e"
  }
};

// ld d,h
const variant_54: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "h"
  ],
  "tokens": [
    "d",
    ",",
    "h"
  ],
  "opcodes": [
    84
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "54",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into D.",
    "instruction": "ld d,h"
  }
};

// ld de,hl
const variant_54_5D_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "de",
    "hl"
  ],
  "tokens": [
    "de",
    ",",
    "hl"
  ],
  "opcodes": [
    84,
    93
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "545D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of HL are loaded into DE.",
    "instruction": "ld de,hl"
  }
};

// ld d,l
const variant_55: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "l"
  ],
  "tokens": [
    "d",
    ",",
    "l"
  ],
  "opcodes": [
    85
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "55",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into D.",
    "instruction": "ld d,l"
  }
};

// ld d,(hl)
const variant_56: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "(hl)"
  ],
  "tokens": [
    "d",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    86
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "56",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into D.",
    "instruction": "ld d,(hl)"
  }
};

// ld d,a
const variant_57: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "a"
  ],
  "tokens": [
    "d",
    ",",
    "a"
  ],
  "opcodes": [
    87
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "57",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into D.",
    "instruction": "ld d,a"
  }
};

// ld e,b
const variant_58: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "b"
  ],
  "tokens": [
    "e",
    ",",
    "b"
  ],
  "opcodes": [
    88
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "58",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into E.",
    "instruction": "ld e,b"
  }
};

// ld e,c
const variant_59: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "c"
  ],
  "tokens": [
    "e",
    ",",
    "c"
  ],
  "opcodes": [
    89
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "59",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into E.",
    "instruction": "ld e,c"
  }
};

// ld e,d
const variant_5A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "d"
  ],
  "tokens": [
    "e",
    ",",
    "d"
  ],
  "opcodes": [
    90
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "5A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into E.",
    "instruction": "ld e,d"
  }
};

// ld e,e
const variant_5B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "e"
  ],
  "tokens": [
    "e",
    ",",
    "e"
  ],
  "opcodes": [
    91
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "5B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into E.",
    "instruction": "ld e,e"
  }
};

// ld e,h
const variant_5C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "h"
  ],
  "tokens": [
    "e",
    ",",
    "h"
  ],
  "opcodes": [
    92
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "5C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into E.",
    "instruction": "ld e,h"
  }
};

// ld e,l
const variant_5D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "l"
  ],
  "tokens": [
    "e",
    ",",
    "l"
  ],
  "opcodes": [
    93
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "5D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into E.",
    "instruction": "ld e,l"
  }
};

// ld e,(hl)
const variant_5E: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "(hl)"
  ],
  "tokens": [
    "e",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    94
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "5E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into E.",
    "instruction": "ld e,(hl)"
  }
};

// ld e,a
const variant_5F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "a"
  ],
  "tokens": [
    "e",
    ",",
    "a"
  ],
  "opcodes": [
    95
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "5F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into E.",
    "instruction": "ld e,a"
  }
};

// ld h,b
const variant_60: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "b"
  ],
  "tokens": [
    "h",
    ",",
    "b"
  ],
  "opcodes": [
    96
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "60",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into H.",
    "instruction": "ld h,b"
  }
};

// ld hl,bc
const variant_60_69_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "hl",
    "bc"
  ],
  "tokens": [
    "hl",
    ",",
    "bc"
  ],
  "opcodes": [
    96,
    105
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "6069",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of BC are loaded into HL.",
    "instruction": "ld hl,bc"
  }
};

// ld h,c
const variant_61: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "c"
  ],
  "tokens": [
    "h",
    ",",
    "c"
  ],
  "opcodes": [
    97
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "61",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into H.",
    "instruction": "ld h,c"
  }
};

// ld h,d
const variant_62: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "d"
  ],
  "tokens": [
    "h",
    ",",
    "d"
  ],
  "opcodes": [
    98
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "62",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into H.",
    "instruction": "ld h,d"
  }
};

// ld hl,de
const variant_62_6B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "hl",
    "de"
  ],
  "tokens": [
    "hl",
    ",",
    "de"
  ],
  "opcodes": [
    98,
    107
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "626B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of DE are loaded into HL.",
    "instruction": "ld hl,de"
  }
};

// ld h,e
const variant_63: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "e"
  ],
  "tokens": [
    "h",
    ",",
    "e"
  ],
  "opcodes": [
    99
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "63",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into H.",
    "instruction": "ld h,e"
  }
};

// ld h,h
const variant_64: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "h"
  ],
  "tokens": [
    "h",
    ",",
    "h"
  ],
  "opcodes": [
    100
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "64",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into H.",
    "instruction": "ld h,h"
  }
};

// ld h,l
const variant_65: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "l"
  ],
  "tokens": [
    "h",
    ",",
    "l"
  ],
  "opcodes": [
    101
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "65",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into H.",
    "instruction": "ld h,l"
  }
};

// ld h,(hl)
const variant_66: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "(hl)"
  ],
  "tokens": [
    "h",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    102
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "66",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into H.",
    "instruction": "ld h,(hl)"
  }
};

// ld h,a
const variant_67: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "a"
  ],
  "tokens": [
    "h",
    ",",
    "a"
  ],
  "opcodes": [
    103
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "67",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into H.",
    "instruction": "ld h,a"
  }
};

// ld l,b
const variant_68: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "b"
  ],
  "tokens": [
    "l",
    ",",
    "b"
  ],
  "opcodes": [
    104
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "68",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into L.",
    "instruction": "ld l,b"
  }
};

// ld l,c
const variant_69: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "c"
  ],
  "tokens": [
    "l",
    ",",
    "c"
  ],
  "opcodes": [
    105
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "69",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into L.",
    "instruction": "ld l,c"
  }
};

// ld l,d
const variant_6A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "d"
  ],
  "tokens": [
    "l",
    ",",
    "d"
  ],
  "opcodes": [
    106
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "6A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into L.",
    "instruction": "ld l,d"
  }
};

// ld l,e
const variant_6B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "e"
  ],
  "tokens": [
    "l",
    ",",
    "e"
  ],
  "opcodes": [
    107
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "6B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into L.",
    "instruction": "ld l,e"
  }
};

// ld l,h
const variant_6C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "h"
  ],
  "tokens": [
    "l",
    ",",
    "h"
  ],
  "opcodes": [
    108
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "6C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into L.",
    "instruction": "ld l,h"
  }
};

// ld l,l
const variant_6D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "l"
  ],
  "tokens": [
    "l",
    ",",
    "l"
  ],
  "opcodes": [
    109
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "6D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into L.",
    "instruction": "ld l,l"
  }
};

// ld l,(hl)
const variant_6E: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "(hl)"
  ],
  "tokens": [
    "l",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    110
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "6E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into L.",
    "instruction": "ld l,(hl)"
  }
};

// ld l,a
const variant_6F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "a"
  ],
  "tokens": [
    "l",
    ",",
    "a"
  ],
  "opcodes": [
    111
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "6F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into L.",
    "instruction": "ld l,a"
  }
};

// ld (hl),b
const variant_70: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "b"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "b"
  ],
  "opcodes": [
    112
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "70",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of B are loaded into (HL).",
    "instruction": "ld (hl),b"
  }
};

// ld (hl),c
const variant_71: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "c"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "c"
  ],
  "opcodes": [
    113
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "71",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of C are loaded into (HL).",
    "instruction": "ld (hl),c"
  }
};

// ld (hl),bc
const variant_71_23_70_2B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "bc"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "bc"
  ],
  "opcodes": [
    113,
    35,
    112,
    43
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7123702B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 26,
    "without_jump_clock_count": 26,
    "description": "The contents of BC are loaded into (HL).",
    "instruction": "ld (hl),bc"
  }
};

// ld (hl),d
const variant_72: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "d"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "d"
  ],
  "opcodes": [
    114
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "72",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of D are loaded into (HL).",
    "instruction": "ld (hl),d"
  }
};

// ld (hl),e
const variant_73: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "e"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "e"
  ],
  "opcodes": [
    115
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "73",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of E are loaded into (HL).",
    "instruction": "ld (hl),e"
  }
};

// ld (hl),de
const variant_73_23_72_2B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "de"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "de"
  ],
  "opcodes": [
    115,
    35,
    114,
    43
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7323722B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 26,
    "without_jump_clock_count": 26,
    "description": "The contents of DE are loaded into (HL).",
    "instruction": "ld (hl),de"
  }
};

// ld (hl),h
const variant_74: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "h"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "h"
  ],
  "opcodes": [
    116
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "74",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of H are loaded into (HL).",
    "instruction": "ld (hl),h"
  }
};

// ld (hl),l
const variant_75: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "l"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "l"
  ],
  "opcodes": [
    117
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "75",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of L are loaded into (HL).",
    "instruction": "ld (hl),l"
  }
};

// halt 
const variant_76: OpcodeVariant = {
  "mnemonic": "halt",
  "params": [],
  "tokens": [],
  "opcodes": [
    118
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "76",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Suspends CPU operation until an interrupt or reset occurs.",
    "instruction": "halt"
  }
};

// ld (hl),a
const variant_77: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)",
    "a"
  ],
  "tokens": [
    "(",
    "hl",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    119
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "77",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of A are loaded into (HL).",
    "instruction": "ld (hl),a"
  }
};

// ld a,b
const variant_78: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    120
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "78",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into A.",
    "instruction": "ld a,b"
  }
};

// ld b
const variant_78_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    120
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "78",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of B are loaded into A.",
    "instruction": "ld a,b"
  }
};

// ld a,c
const variant_79: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    121
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "79",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into A.",
    "instruction": "ld a,c"
  }
};

// ld c
const variant_79_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    121
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "79",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of C are loaded into A.",
    "instruction": "ld a,c"
  }
};

// ld a,d
const variant_7A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    122
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "7A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into A.",
    "instruction": "ld a,d"
  }
};

// ld d
const variant_7A_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    122
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of D are loaded into A.",
    "instruction": "ld a,d"
  }
};

// ld a,e
const variant_7B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    123
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "7B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into A.",
    "instruction": "ld a,e"
  }
};

// ld e
const variant_7B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    123
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of E are loaded into A.",
    "instruction": "ld a,e"
  }
};

// ld a,h
const variant_7C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    124
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "7C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into A.",
    "instruction": "ld a,h"
  }
};

// ld h
const variant_7C_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    124
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of H are loaded into A.",
    "instruction": "ld a,h"
  }
};

// ld a,l
const variant_7D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    125
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "7D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into A.",
    "instruction": "ld a,l"
  }
};

// ld l
const variant_7D_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    125
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of L are loaded into A.",
    "instruction": "ld a,l"
  }
};

// ld a,(hl)
const variant_7E: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    126
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "7E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into A.",
    "instruction": "ld a,(hl)"
  }
};

// ld (hl)
const variant_7E_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    126
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "The contents of (HL) are loaded into A.",
    "instruction": "ld a,(hl)"
  }
};

// ld a,a
const variant_7F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    127
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "7F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into A.",
    "instruction": "ld a,a"
  }
};

// ld a
const variant_7F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    127
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "7F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "The contents of A are loaded into A.",
    "instruction": "ld a,a"
  }
};

// add a,b
const variant_80: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    128
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "80",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds B to A.",
    "instruction": "add a,b"
  }
};

// add b
const variant_80_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    128
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "80",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds B to A.",
    "instruction": "add a,b"
  }
};

// add a,c
const variant_81: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    129
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "81",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds C to A.",
    "instruction": "add a,c"
  }
};

// add c
const variant_81_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    129
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "81",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds C to A.",
    "instruction": "add a,c"
  }
};

// add a,d
const variant_82: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    130
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "82",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds D to A.",
    "instruction": "add a,d"
  }
};

// add d
const variant_82_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    130
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "82",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds D to A.",
    "instruction": "add a,d"
  }
};

// add a,e
const variant_83: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    131
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "83",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds E to A.",
    "instruction": "add a,e"
  }
};

// add e
const variant_83_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    131
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "83",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds E to A.",
    "instruction": "add a,e"
  }
};

// add a,h
const variant_84: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    132
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "84",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds H to A.",
    "instruction": "add a,h"
  }
};

// add h
const variant_84_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    132
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "84",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds H to A.",
    "instruction": "add a,h"
  }
};

// add a,l
const variant_85: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    133
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "85",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds L to A.",
    "instruction": "add a,l"
  }
};

// add l
const variant_85_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    133
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "85",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds L to A.",
    "instruction": "add a,l"
  }
};

// add a,(hl)
const variant_86: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    134
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "86",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds (HL) to A.",
    "instruction": "add a,(hl)"
  }
};

// add (hl)
const variant_86_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    134
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "86",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds (HL) to A.",
    "instruction": "add a,(hl)"
  }
};

// add a,a
const variant_87: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    135
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "87",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds A to A.",
    "instruction": "add a,a"
  }
};

// add a
const variant_87_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    135
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "87",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds A to A.",
    "instruction": "add a,a"
  }
};

// adc a,b
const variant_88: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    136
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "88",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds B and the carry flag to A.",
    "instruction": "adc a,b"
  }
};

// adc b
const variant_88_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    136
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "88",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds B and the carry flag to A.",
    "instruction": "adc a,b"
  }
};

// adc a,c
const variant_89: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    137
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "89",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds C and the carry flag to A.",
    "instruction": "adc a,c"
  }
};

// adc c
const variant_89_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    137
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "89",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds C and the carry flag to A.",
    "instruction": "adc a,c"
  }
};

// adc a,d
const variant_8A: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    138
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "8A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds D and the carry flag to A.",
    "instruction": "adc a,d"
  }
};

// adc d
const variant_8A_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    138
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "8A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds D and the carry flag to A.",
    "instruction": "adc a,d"
  }
};

// adc a,e
const variant_8B: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    139
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "8B",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds E and the carry flag to A.",
    "instruction": "adc a,e"
  }
};

// adc e
const variant_8B_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    139
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "8B",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds E and the carry flag to A.",
    "instruction": "adc a,e"
  }
};

// adc a,h
const variant_8C: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    140
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "8C",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds H and the carry flag to A.",
    "instruction": "adc a,h"
  }
};

// adc h
const variant_8C_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    140
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "8C",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds H and the carry flag to A.",
    "instruction": "adc a,h"
  }
};

// adc a,l
const variant_8D: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    141
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "8D",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds L and the carry flag to A.",
    "instruction": "adc a,l"
  }
};

// adc l
const variant_8D_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    141
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "8D",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds L and the carry flag to A.",
    "instruction": "adc a,l"
  }
};

// adc a,(hl)
const variant_8E: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    142
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "8E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds (HL) and the carry flag to A.",
    "instruction": "adc a,(hl)"
  }
};

// adc (hl)
const variant_8E_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    142
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "8E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds (HL) and the carry flag to A.",
    "instruction": "adc a,(hl)"
  }
};

// adc a,a
const variant_8F: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    143
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "8F",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds A and the carry flag to A.",
    "instruction": "adc a,a"
  }
};

// adc a
const variant_8F_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    143
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "8F",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Adds A and the carry flag to A.",
    "instruction": "adc a,a"
  }
};

// sub a,b
const variant_90: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    144
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "90",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts B from A.",
    "instruction": "sub b"
  }
};

// sub b
const variant_90_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    144
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "90",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts B from A.",
    "instruction": "sub b"
  }
};

// sub a,c
const variant_91: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    145
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "91",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts C from A.",
    "instruction": "sub c"
  }
};

// sub c
const variant_91_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    145
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "91",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts C from A.",
    "instruction": "sub c"
  }
};

// sub a,d
const variant_92: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    146
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "92",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts D from A.",
    "instruction": "sub d"
  }
};

// sub d
const variant_92_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    146
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "92",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts D from A.",
    "instruction": "sub d"
  }
};

// sub a,e
const variant_93: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    147
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "93",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts E from A.",
    "instruction": "sub e"
  }
};

// sub e
const variant_93_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    147
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "93",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts E from A.",
    "instruction": "sub e"
  }
};

// sub a,h
const variant_94: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    148
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "94",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts H from A.",
    "instruction": "sub h"
  }
};

// sub h
const variant_94_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    148
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "94",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts H from A.",
    "instruction": "sub h"
  }
};

// sub a,l
const variant_95: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    149
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "95",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts L from A.",
    "instruction": "sub l"
  }
};

// sub l
const variant_95_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    149
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "95",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts L from A.",
    "instruction": "sub l"
  }
};

// sub a,(hl)
const variant_96: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    150
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "96",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts (HL) from A.",
    "instruction": "sub (hl)"
  }
};

// sub (hl)
const variant_96_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    150
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "96",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts (HL) from A.",
    "instruction": "sub (hl)"
  }
};

// sub a,a
const variant_97: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    151
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "97",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts A from A.",
    "instruction": "sub a"
  }
};

// sub a
const variant_97_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    151
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "97",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts A from A.",
    "instruction": "sub a"
  }
};

// sbc a,b
const variant_98: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    152
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "98",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts B and the carry flag from A.",
    "instruction": "sbc a,b"
  }
};

// sbc b
const variant_98_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    152
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "98",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts B and the carry flag from A.",
    "instruction": "sbc a,b"
  }
};

// sbc a,c
const variant_99: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    153
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "99",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts C and the carry flag from A.",
    "instruction": "sbc a,c"
  }
};

// sbc c
const variant_99_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    153
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "99",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts C and the carry flag from A.",
    "instruction": "sbc a,c"
  }
};

// sbc a,d
const variant_9A: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    154
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "9A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts D and the carry flag from A.",
    "instruction": "sbc a,d"
  }
};

// sbc d
const variant_9A_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    154
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "9A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts D and the carry flag from A.",
    "instruction": "sbc a,d"
  }
};

// sbc a,e
const variant_9B: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    155
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "9B",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts E and the carry flag from A.",
    "instruction": "sbc a,e"
  }
};

// sbc e
const variant_9B_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    155
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "9B",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts E and the carry flag from A.",
    "instruction": "sbc a,e"
  }
};

// sbc a,h
const variant_9C: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    156
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "9C",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts H and the carry flag from A.",
    "instruction": "sbc a,h"
  }
};

// sbc h
const variant_9C_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    156
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "9C",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts H and the carry flag from A.",
    "instruction": "sbc a,h"
  }
};

// sbc a,l
const variant_9D: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    157
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "9D",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts L and the carry flag from A.",
    "instruction": "sbc a,l"
  }
};

// sbc l
const variant_9D_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    157
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "9D",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts L and the carry flag from A.",
    "instruction": "sbc a,l"
  }
};

// sbc a,(hl)
const variant_9E: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    158
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "9E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts (HL) and the carry flag from A.",
    "instruction": "sbc a,(hl)"
  }
};

// sbc (hl)
const variant_9E_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    158
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "9E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts (HL) and the carry flag from A.",
    "instruction": "sbc a,(hl)"
  }
};

// sbc a,a
const variant_9F: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    159
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "9F",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts A and the carry flag from A.",
    "instruction": "sbc a,a"
  }
};

// sbc a
const variant_9F_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    159
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "9F",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts A and the carry flag from A.",
    "instruction": "sbc a,a"
  }
};

// and a,b
const variant_A0: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    160
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A0",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with B.",
    "instruction": "and b"
  }
};

// and b
const variant_A0_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    160
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A0",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with B.",
    "instruction": "and b"
  }
};

// and a,c
const variant_A1: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    161
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A1",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with C.",
    "instruction": "and c"
  }
};

// and c
const variant_A1_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    161
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A1",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with C.",
    "instruction": "and c"
  }
};

// and a,d
const variant_A2: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    162
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A2",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with D.",
    "instruction": "and d"
  }
};

// and d
const variant_A2_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    162
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A2",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with D.",
    "instruction": "and d"
  }
};

// and a,e
const variant_A3: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    163
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A3",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with E.",
    "instruction": "and e"
  }
};

// and e
const variant_A3_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    163
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A3",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with E.",
    "instruction": "and e"
  }
};

// and a,h
const variant_A4: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    164
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A4",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with H.",
    "instruction": "and h"
  }
};

// and h
const variant_A4_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    164
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A4",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with H.",
    "instruction": "and h"
  }
};

// and a,l
const variant_A5: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    165
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A5",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with L.",
    "instruction": "and l"
  }
};

// and l
const variant_A5_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    165
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A5",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with L.",
    "instruction": "and l"
  }
};

// and a,(hl)
const variant_A6: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    166
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise AND on A with (HL).",
    "instruction": "and (hl)"
  }
};

// and (hl)
const variant_A6_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    166
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise AND on A with (HL).",
    "instruction": "and (hl)"
  }
};

// and a,a
const variant_A7: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    167
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A7",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with A.",
    "instruction": "and a"
  }
};

// and a
const variant_A7_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    167
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A7",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise AND on A with A.",
    "instruction": "and a"
  }
};

// xor a,b
const variant_A8: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    168
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A8",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with B.",
    "instruction": "xor b"
  }
};

// xor b
const variant_A8_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    168
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A8",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with B.",
    "instruction": "xor b"
  }
};

// xor a,c
const variant_A9: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    169
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "A9",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with C.",
    "instruction": "xor c"
  }
};

// xor c
const variant_A9_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    169
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "A9",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with C.",
    "instruction": "xor c"
  }
};

// xor a,d
const variant_AA: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    170
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "AA",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with D.",
    "instruction": "xor d"
  }
};

// xor d
const variant_AA_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    170
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "AA",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with D.",
    "instruction": "xor d"
  }
};

// xor a,e
const variant_AB: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    171
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "AB",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with E.",
    "instruction": "xor e"
  }
};

// xor e
const variant_AB_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    171
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "AB",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with E.",
    "instruction": "xor e"
  }
};

// xor a,h
const variant_AC: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    172
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "AC",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with H.",
    "instruction": "xor h"
  }
};

// xor h
const variant_AC_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    172
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "AC",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with H.",
    "instruction": "xor h"
  }
};

// xor a,l
const variant_AD: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    173
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "AD",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with L.",
    "instruction": "xor l"
  }
};

// xor l
const variant_AD_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    173
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "AD",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with L.",
    "instruction": "xor l"
  }
};

// xor a,(hl)
const variant_AE: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    174
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "AE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise XOR on A with (HL).",
    "instruction": "xor (hl)"
  }
};

// xor (hl)
const variant_AE_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    174
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "AE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise XOR on A with (HL).",
    "instruction": "xor (hl)"
  }
};

// xor a,a
const variant_AF: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    175
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "AF",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with A.",
    "instruction": "xor a"
  }
};

// xor a
const variant_AF_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    175
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "AF",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise XOR on A with A.",
    "instruction": "xor a"
  }
};

// or a,b
const variant_B0: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    176
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B0",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with B.",
    "instruction": "or b"
  }
};

// or b
const variant_B0_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    176
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B0",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with B.",
    "instruction": "or b"
  }
};

// or a,c
const variant_B1: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    177
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B1",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with C.",
    "instruction": "or c"
  }
};

// or c
const variant_B1_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    177
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B1",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with C.",
    "instruction": "or c"
  }
};

// or a,d
const variant_B2: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    178
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B2",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with D.",
    "instruction": "or d"
  }
};

// or d
const variant_B2_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    178
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B2",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with D.",
    "instruction": "or d"
  }
};

// or a,e
const variant_B3: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    179
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B3",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with E.",
    "instruction": "or e"
  }
};

// or e
const variant_B3_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    179
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B3",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with E.",
    "instruction": "or e"
  }
};

// or a,h
const variant_B4: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    180
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B4",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with H.",
    "instruction": "or h"
  }
};

// or h
const variant_B4_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    180
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B4",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with H.",
    "instruction": "or h"
  }
};

// or a,l
const variant_B5: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    181
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B5",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with L.",
    "instruction": "or l"
  }
};

// or l
const variant_B5_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    181
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B5",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with L.",
    "instruction": "or l"
  }
};

// or a,(hl)
const variant_B6: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    182
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise OR on A with (HL).",
    "instruction": "or (hl)"
  }
};

// or (hl)
const variant_B6_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    182
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise OR on A with (HL).",
    "instruction": "or (hl)"
  }
};

// or a,a
const variant_B7: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    183
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B7",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with A.",
    "instruction": "or a"
  }
};

// or a
const variant_B7_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    183
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B7",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Bitwise OR on A with A.",
    "instruction": "or a"
  }
};

// cp a,b
const variant_B8: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    184
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B8",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts B from A and affects flags according to the result. A is not modified.",
    "instruction": "cp b"
  }
};

// cp b
const variant_B8_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    184
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B8",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts B from A and affects flags according to the result. A is not modified.",
    "instruction": "cp b"
  }
};

// cp a,c
const variant_B9: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    185
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "B9",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts C from A and affects flags according to the result. A is not modified.",
    "instruction": "cp c"
  }
};

// cp c
const variant_B9_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    185
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "B9",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts C from A and affects flags according to the result. A is not modified.",
    "instruction": "cp c"
  }
};

// cp a,d
const variant_BA: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    186
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "BA",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts D from A and affects flags according to the result. A is not modified.",
    "instruction": "cp d"
  }
};

// cp d
const variant_BA_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    186
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "BA",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts D from A and affects flags according to the result. A is not modified.",
    "instruction": "cp d"
  }
};

// cp a,e
const variant_BB: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    187
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "BB",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts E from A and affects flags according to the result. A is not modified.",
    "instruction": "cp e"
  }
};

// cp e
const variant_BB_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    187
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "BB",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts E from A and affects flags according to the result. A is not modified.",
    "instruction": "cp e"
  }
};

// cp a,h
const variant_BC: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "h"
  ],
  "tokens": [
    "a",
    ",",
    "h"
  ],
  "opcodes": [
    188
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "BC",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts H from A and affects flags according to the result. A is not modified.",
    "instruction": "cp h"
  }
};

// cp h
const variant_BC_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    188
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "BC",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts H from A and affects flags according to the result. A is not modified.",
    "instruction": "cp h"
  }
};

// cp a,l
const variant_BD: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "l"
  ],
  "tokens": [
    "a",
    ",",
    "l"
  ],
  "opcodes": [
    189
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "BD",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts L from A and affects flags according to the result. A is not modified.",
    "instruction": "cp l"
  }
};

// cp l
const variant_BD_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    189
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "BD",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts L from A and affects flags according to the result. A is not modified.",
    "instruction": "cp l"
  }
};

// cp a,(hl)
const variant_BE: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "(hl)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    190
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "BE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts (HL) from A and affects flags according to the result. A is not modified.",
    "instruction": "cp (hl)"
  }
};

// cp (hl)
const variant_BE_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    190
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "BE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts (HL) from A and affects flags according to the result. A is not modified.",
    "instruction": "cp (hl)"
  }
};

// cp a,a
const variant_BF: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    191
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "BF",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts A from A and affects flags according to the result. A is not modified.",
    "instruction": "cp a"
  }
};

// cp a
const variant_BF_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    191
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "BF",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Subtracts A from A and affects flags according to the result. A is not modified.",
    "instruction": "cp a"
  }
};

// ret nz
const variant_C0: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "nz"
  ],
  "tokens": [
    "nz"
  ],
  "opcodes": [
    192
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the zero flag is unset, the top stack entry is popped into PC.",
    "instruction": "ret nz"
  }
};

// pop bc
const variant_C1: OpcodeVariant = {
  "mnemonic": "pop",
  "params": [
    "bc"
  ],
  "tokens": [
    "bc"
  ],
  "opcodes": [
    193
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "The memory location pointed to by SP is stored into C and SP is incremented. The memory location pointed to by SP is stored into B and SP is incremented again.",
    "instruction": "pop bc"
  }
};

// jp nz,nnnn
const variant_C2_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "nz",
    "nnnn"
  ],
  "tokens": [
    "nz",
    ",",
    "nnnn"
  ],
  "opcodes": [
    194,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the zero flag is unset, <var>nn</var> is copied to PC.",
    "instruction": "jp nz,nn"
  }
};

// jp nnnn
const variant_C3_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "nnnn"
  ],
  "tokens": [
    "nnnn"
  ],
  "opcodes": [
    195,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "<var>nn</var> is copied to PC.",
    "instruction": "jp nn"
  }
};

// call nz,nnnn
const variant_C4_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "nz",
    "nnnn"
  ],
  "tokens": [
    "nz",
    ",",
    "nnnn"
  ],
  "opcodes": [
    196,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the zero flag is unset, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call nz,nn"
  }
};

// push bc
const variant_C5: OpcodeVariant = {
  "mnemonic": "push",
  "params": [
    "bc"
  ],
  "tokens": [
    "bc"
  ],
  "opcodes": [
    197
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "SP is decremented and B is stored into the memory location pointed to by SP. SP is decremented again and C is stored into the memory location pointed to by SP.",
    "instruction": "push bc"
  }
};

// add a,nn
const variant_C6_nn: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    198,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C6",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds <var>n</var> to A.",
    "instruction": "add a,n"
  }
};

// add nn
const variant_C6_nn_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    198,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "C6",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds <var>n</var> to A.",
    "instruction": "add a,n"
  }
};

// rst 0
const variant_C7: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "00"
  ],
  "tokens": [
    "0"
  ],
  "opcodes": [
    199
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 0.",
    "instruction": "rst 00h"
  }
};

// ret z
const variant_C8: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "z"
  ],
  "tokens": [
    "z"
  ],
  "opcodes": [
    200
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the zero flag is set, the top stack entry is popped into PC.",
    "instruction": "ret z"
  }
};

// ret 
const variant_C9: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [],
  "tokens": [],
  "opcodes": [
    201
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "C9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "The top stack entry is popped into PC.",
    "instruction": "ret"
  }
};

// jp z,nnnn
const variant_CA_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "z",
    "nnnn"
  ],
  "tokens": [
    "z",
    ",",
    "nnnn"
  ],
  "opcodes": [
    202,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the zero flag is set, <var>nn</var> is copied to PC.",
    "instruction": "jp z,nn"
  }
};

// rlc b
const variant_CB_00: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    0
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB00",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc b"
  }
};

// rlc c
const variant_CB_01: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    1
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB01",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc c"
  }
};

// rlc d
const variant_CB_02: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    2
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB02",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc d"
  }
};

// rlc e
const variant_CB_03: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    3
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB03",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc e"
  }
};

// rlc h
const variant_CB_04: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    4
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB04",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc h"
  }
};

// rlc l
const variant_CB_05: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    5
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB05",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc l"
  }
};

// rlc (hl)
const variant_CB_06: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    6
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB06",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc (hl)"
  }
};

// rlc a
const variant_CB_07: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    7
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB07",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc a"
  }
};

// rrc b
const variant_CB_08: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    8
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB08",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc b"
  }
};

// rrc c
const variant_CB_09: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    9
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB09",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc c"
  }
};

// rrc d
const variant_CB_0A: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    10
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB0A",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc d"
  }
};

// rrc e
const variant_CB_0B: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    11
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB0B",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc e"
  }
};

// rrc h
const variant_CB_0C: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    12
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB0C",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc h"
  }
};

// rrc l
const variant_CB_0D: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    13
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB0D",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc l"
  }
};

// rrc (hl)
const variant_CB_0E: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    14
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB0E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc (hl)"
  }
};

// rrc a
const variant_CB_0F: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    15
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB0F",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc a"
  }
};

// rl b
const variant_CB_10: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    16
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB10",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl b"
  }
};

// rl c
const variant_CB_11: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    17
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB11",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl c"
  }
};

// rl d
const variant_CB_12: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    18
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB12",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl d"
  }
};

// rl e
const variant_CB_13: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    19
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB13",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl e"
  }
};

// rl h
const variant_CB_14: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    20
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB14",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl h"
  }
};

// rl l
const variant_CB_15: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    21
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB15",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl l"
  }
};

// rl (hl)
const variant_CB_16: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    22
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB16",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl (hl)"
  }
};

// rl a
const variant_CB_17: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    23
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB17",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl a"
  }
};

// rr b
const variant_CB_18: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    24
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB18",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr b"
  }
};

// rr c
const variant_CB_19: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    25
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB19",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr c"
  }
};

// rr d
const variant_CB_1A: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    26
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB1A",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr d"
  }
};

// rr e
const variant_CB_1B: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    27
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB1B",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr e"
  }
};

// rr h
const variant_CB_1C: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    28
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB1C",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr h"
  }
};

// rr l
const variant_CB_1D: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    29
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB1D",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr l"
  }
};

// rr (hl)
const variant_CB_1E: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    30
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB1E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr (hl)"
  }
};

// rr a
const variant_CB_1F: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    31
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB1F",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr a"
  }
};

// sla b
const variant_CB_20: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    32
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB20",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla b"
  }
};

// sla c
const variant_CB_21: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    33
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB21",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla c"
  }
};

// sla d
const variant_CB_22: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    34
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB22",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla d"
  }
};

// sla e
const variant_CB_23: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    35
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB23",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla e"
  }
};

// sla h
const variant_CB_24: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    36
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB24",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla h"
  }
};

// sla l
const variant_CB_25: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    37
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB25",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla l"
  }
};

// sla (hl)
const variant_CB_26: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    38
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB26",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla (hl)"
  }
};

// sla a
const variant_CB_27: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    39
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB27",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla a"
  }
};

// sra b
const variant_CB_28: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    40
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB28",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra b"
  }
};

// sra c
const variant_CB_29: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    41
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB29",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra c"
  }
};

// sra d
const variant_CB_2A: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    42
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB2A",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra d"
  }
};

// sra e
const variant_CB_2B: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    43
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB2B",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra e"
  }
};

// sra h
const variant_CB_2C: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    44
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB2C",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra h"
  }
};

// sra l
const variant_CB_2D: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    45
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB2D",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra l"
  }
};

// sra (hl)
const variant_CB_2E: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    46
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB2E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra (hl)"
  }
};

// sra a
const variant_CB_2F: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    47
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB2F",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra a"
  }
};

// sll b
const variant_CB_30: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    48
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB30",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll b"
  }
};

// sll c
const variant_CB_31: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    49
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB31",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll c"
  }
};

// sll d
const variant_CB_32: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    50
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB32",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll d"
  }
};

// sll e
const variant_CB_33: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    51
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB33",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll e"
  }
};

// sll h
const variant_CB_34: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    52
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB34",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll h"
  }
};

// sll l
const variant_CB_35: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    53
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB35",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll l"
  }
};

// sll (hl)
const variant_CB_36: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    54
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB36",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll (hl)"
  }
};

// sll a
const variant_CB_37: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    55
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB37",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll a"
  }
};

// srl b
const variant_CB_38: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    203,
    56
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB38",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl b"
  }
};

// srl c
const variant_CB_39: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    203,
    57
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB39",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl c"
  }
};

// srl d
const variant_CB_3A: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    203,
    58
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB3A",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl d"
  }
};

// srl e
const variant_CB_3B: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    203,
    59
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB3B",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl e"
  }
};

// srl h
const variant_CB_3C: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "h"
  ],
  "tokens": [
    "h"
  ],
  "opcodes": [
    203,
    60
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB3C",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of H are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl h"
  }
};

// srl l
const variant_CB_3D: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "l"
  ],
  "tokens": [
    "l"
  ],
  "opcodes": [
    203,
    61
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB3D",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of L are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl l"
  }
};

// srl (hl)
const variant_CB_3E: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    62
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB3E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The contents of (HL) are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl (hl)"
  }
};

// srl a
const variant_CB_3F: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    203,
    63
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB3F",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl a"
  }
};

// bit 0,b
const variant_CB_40: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "b"
  ],
  "tokens": [
    "0",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    64
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB40",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of B.",
    "instruction": "bit 0,b"
  }
};

// bit 0,c
const variant_CB_41: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "c"
  ],
  "tokens": [
    "0",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    65
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB41",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of C.",
    "instruction": "bit 0,c"
  }
};

// bit 0,d
const variant_CB_42: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "d"
  ],
  "tokens": [
    "0",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    66
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB42",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of D.",
    "instruction": "bit 0,d"
  }
};

// bit 0,e
const variant_CB_43: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "e"
  ],
  "tokens": [
    "0",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    67
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB43",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of E.",
    "instruction": "bit 0,e"
  }
};

// bit 0,h
const variant_CB_44: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "h"
  ],
  "tokens": [
    "0",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    68
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB44",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of H.",
    "instruction": "bit 0,h"
  }
};

// bit 0,l
const variant_CB_45: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "l"
  ],
  "tokens": [
    "0",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    69
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB45",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of L.",
    "instruction": "bit 0,l"
  }
};

// bit 0,(hl)
const variant_CB_46: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(hl)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    70
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB46",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 0 of (HL).",
    "instruction": "bit 0,(hl)"
  }
};

// bit 0,a
const variant_CB_47: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "a"
  ],
  "tokens": [
    "0",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    71
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB47",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 0 of A.",
    "instruction": "bit 0,a"
  }
};

// bit 1,b
const variant_CB_48: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "b"
  ],
  "tokens": [
    "1",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    72
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB48",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of B.",
    "instruction": "bit 1,b"
  }
};

// bit 1,c
const variant_CB_49: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "c"
  ],
  "tokens": [
    "1",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    73
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB49",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of C.",
    "instruction": "bit 1,c"
  }
};

// bit 1,d
const variant_CB_4A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "d"
  ],
  "tokens": [
    "1",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    74
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB4A",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of D.",
    "instruction": "bit 1,d"
  }
};

// bit 1,e
const variant_CB_4B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "e"
  ],
  "tokens": [
    "1",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    75
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB4B",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of E.",
    "instruction": "bit 1,e"
  }
};

// bit 1,h
const variant_CB_4C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "h"
  ],
  "tokens": [
    "1",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    76
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB4C",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of H.",
    "instruction": "bit 1,h"
  }
};

// bit 1,l
const variant_CB_4D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "l"
  ],
  "tokens": [
    "1",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    77
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB4D",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of L.",
    "instruction": "bit 1,l"
  }
};

// bit 1,(hl)
const variant_CB_4E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(hl)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    78
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB4E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 1 of (HL).",
    "instruction": "bit 1,(hl)"
  }
};

// bit 1,a
const variant_CB_4F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "a"
  ],
  "tokens": [
    "1",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    79
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB4F",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 1 of A.",
    "instruction": "bit 1,a"
  }
};

// bit 2,b
const variant_CB_50: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "b"
  ],
  "tokens": [
    "2",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    80
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB50",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of B.",
    "instruction": "bit 2,b"
  }
};

// bit 2,c
const variant_CB_51: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "c"
  ],
  "tokens": [
    "2",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    81
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB51",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of C.",
    "instruction": "bit 2,c"
  }
};

// bit 2,d
const variant_CB_52: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "d"
  ],
  "tokens": [
    "2",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    82
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB52",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of D.",
    "instruction": "bit 2,d"
  }
};

// bit 2,e
const variant_CB_53: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "e"
  ],
  "tokens": [
    "2",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    83
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB53",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of E.",
    "instruction": "bit 2,e"
  }
};

// bit 2,h
const variant_CB_54: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "h"
  ],
  "tokens": [
    "2",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    84
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB54",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of H.",
    "instruction": "bit 2,h"
  }
};

// bit 2,l
const variant_CB_55: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "l"
  ],
  "tokens": [
    "2",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    85
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB55",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of L.",
    "instruction": "bit 2,l"
  }
};

// bit 2,(hl)
const variant_CB_56: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(hl)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    86
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB56",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 2 of (HL).",
    "instruction": "bit 2,(hl)"
  }
};

// bit 2,a
const variant_CB_57: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "a"
  ],
  "tokens": [
    "2",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    87
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB57",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 2 of A.",
    "instruction": "bit 2,a"
  }
};

// bit 3,b
const variant_CB_58: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "b"
  ],
  "tokens": [
    "3",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    88
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB58",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of B.",
    "instruction": "bit 3,b"
  }
};

// bit 3,c
const variant_CB_59: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "c"
  ],
  "tokens": [
    "3",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    89
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB59",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of C.",
    "instruction": "bit 3,c"
  }
};

// bit 3,d
const variant_CB_5A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "d"
  ],
  "tokens": [
    "3",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    90
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB5A",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of D.",
    "instruction": "bit 3,d"
  }
};

// bit 3,e
const variant_CB_5B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "e"
  ],
  "tokens": [
    "3",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    91
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB5B",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of E.",
    "instruction": "bit 3,e"
  }
};

// bit 3,h
const variant_CB_5C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "h"
  ],
  "tokens": [
    "3",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    92
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB5C",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of H.",
    "instruction": "bit 3,h"
  }
};

// bit 3,l
const variant_CB_5D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "l"
  ],
  "tokens": [
    "3",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    93
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB5D",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of L.",
    "instruction": "bit 3,l"
  }
};

// bit 3,(hl)
const variant_CB_5E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(hl)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    94
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB5E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 3 of (HL).",
    "instruction": "bit 3,(hl)"
  }
};

// bit 3,a
const variant_CB_5F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "a"
  ],
  "tokens": [
    "3",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    95
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB5F",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 3 of A.",
    "instruction": "bit 3,a"
  }
};

// bit 4,b
const variant_CB_60: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "b"
  ],
  "tokens": [
    "4",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    96
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB60",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of B.",
    "instruction": "bit 4,b"
  }
};

// bit 4,c
const variant_CB_61: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "c"
  ],
  "tokens": [
    "4",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    97
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB61",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of C.",
    "instruction": "bit 4,c"
  }
};

// bit 4,d
const variant_CB_62: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "d"
  ],
  "tokens": [
    "4",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    98
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB62",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of D.",
    "instruction": "bit 4,d"
  }
};

// bit 4,e
const variant_CB_63: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "e"
  ],
  "tokens": [
    "4",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    99
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB63",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of E.",
    "instruction": "bit 4,e"
  }
};

// bit 4,h
const variant_CB_64: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "h"
  ],
  "tokens": [
    "4",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    100
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB64",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of H.",
    "instruction": "bit 4,h"
  }
};

// bit 4,l
const variant_CB_65: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "l"
  ],
  "tokens": [
    "4",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    101
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB65",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of L.",
    "instruction": "bit 4,l"
  }
};

// bit 4,(hl)
const variant_CB_66: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(hl)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    102
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB66",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 4 of (HL).",
    "instruction": "bit 4,(hl)"
  }
};

// bit 4,a
const variant_CB_67: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "a"
  ],
  "tokens": [
    "4",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    103
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB67",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 4 of A.",
    "instruction": "bit 4,a"
  }
};

// bit 5,b
const variant_CB_68: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "b"
  ],
  "tokens": [
    "5",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    104
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB68",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of B.",
    "instruction": "bit 5,b"
  }
};

// bit 5,c
const variant_CB_69: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "c"
  ],
  "tokens": [
    "5",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    105
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB69",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of C.",
    "instruction": "bit 5,c"
  }
};

// bit 5,d
const variant_CB_6A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "d"
  ],
  "tokens": [
    "5",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    106
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB6A",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of D.",
    "instruction": "bit 5,d"
  }
};

// bit 5,e
const variant_CB_6B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "e"
  ],
  "tokens": [
    "5",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    107
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB6B",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of E.",
    "instruction": "bit 5,e"
  }
};

// bit 5,h
const variant_CB_6C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "h"
  ],
  "tokens": [
    "5",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    108
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB6C",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of H.",
    "instruction": "bit 5,h"
  }
};

// bit 5,l
const variant_CB_6D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "l"
  ],
  "tokens": [
    "5",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    109
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB6D",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of L.",
    "instruction": "bit 5,l"
  }
};

// bit 5,(hl)
const variant_CB_6E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(hl)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    110
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB6E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 5 of (HL).",
    "instruction": "bit 5,(hl)"
  }
};

// bit 5,a
const variant_CB_6F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "a"
  ],
  "tokens": [
    "5",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    111
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB6F",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 5 of A.",
    "instruction": "bit 5,a"
  }
};

// bit 6,b
const variant_CB_70: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "b"
  ],
  "tokens": [
    "6",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    112
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB70",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of B.",
    "instruction": "bit 6,b"
  }
};

// bit 6,c
const variant_CB_71: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "c"
  ],
  "tokens": [
    "6",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    113
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB71",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of C.",
    "instruction": "bit 6,c"
  }
};

// bit 6,d
const variant_CB_72: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "d"
  ],
  "tokens": [
    "6",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    114
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB72",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of D.",
    "instruction": "bit 6,d"
  }
};

// bit 6,e
const variant_CB_73: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "e"
  ],
  "tokens": [
    "6",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    115
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB73",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of E.",
    "instruction": "bit 6,e"
  }
};

// bit 6,h
const variant_CB_74: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "h"
  ],
  "tokens": [
    "6",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    116
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB74",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of H.",
    "instruction": "bit 6,h"
  }
};

// bit 6,l
const variant_CB_75: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "l"
  ],
  "tokens": [
    "6",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    117
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB75",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of L.",
    "instruction": "bit 6,l"
  }
};

// bit 6,(hl)
const variant_CB_76: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(hl)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    118
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB76",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 6 of (HL).",
    "instruction": "bit 6,(hl)"
  }
};

// bit 6,a
const variant_CB_77: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "a"
  ],
  "tokens": [
    "6",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    119
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB77",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 6 of A.",
    "instruction": "bit 6,a"
  }
};

// bit 7,b
const variant_CB_78: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "b"
  ],
  "tokens": [
    "7",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    120
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB78",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of B.",
    "instruction": "bit 7,b"
  }
};

// bit 7,c
const variant_CB_79: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "c"
  ],
  "tokens": [
    "7",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    121
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB79",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of C.",
    "instruction": "bit 7,c"
  }
};

// bit 7,d
const variant_CB_7A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "d"
  ],
  "tokens": [
    "7",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    122
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB7A",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of D.",
    "instruction": "bit 7,d"
  }
};

// bit 7,e
const variant_CB_7B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "e"
  ],
  "tokens": [
    "7",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    123
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB7B",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of E.",
    "instruction": "bit 7,e"
  }
};

// bit 7,h
const variant_CB_7C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "h"
  ],
  "tokens": [
    "7",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    124
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB7C",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of H.",
    "instruction": "bit 7,h"
  }
};

// bit 7,l
const variant_CB_7D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "l"
  ],
  "tokens": [
    "7",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    125
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB7D",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of L.",
    "instruction": "bit 7,l"
  }
};

// bit 7,(hl)
const variant_CB_7E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(hl)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    126
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB7E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Tests bit 7 of (HL).",
    "instruction": "bit 7,(hl)"
  }
};

// bit 7,a
const variant_CB_7F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "a"
  ],
  "tokens": [
    "7",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    127
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB7F",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Tests bit 7 of A.",
    "instruction": "bit 7,a"
  }
};

// res 0,b
const variant_CB_80: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "b"
  ],
  "tokens": [
    "0",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    128
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB80",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of B.",
    "instruction": "res 0,b"
  }
};

// res 0,c
const variant_CB_81: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "c"
  ],
  "tokens": [
    "0",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    129
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB81",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of C.",
    "instruction": "res 0,c"
  }
};

// res 0,d
const variant_CB_82: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "d"
  ],
  "tokens": [
    "0",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    130
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB82",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of D.",
    "instruction": "res 0,d"
  }
};

// res 0,e
const variant_CB_83: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "e"
  ],
  "tokens": [
    "0",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    131
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB83",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of E.",
    "instruction": "res 0,e"
  }
};

// res 0,h
const variant_CB_84: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "h"
  ],
  "tokens": [
    "0",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    132
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB84",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of H.",
    "instruction": "res 0,h"
  }
};

// res 0,l
const variant_CB_85: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "l"
  ],
  "tokens": [
    "0",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    133
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB85",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of L.",
    "instruction": "res 0,l"
  }
};

// res 0,(hl)
const variant_CB_86: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "(hl)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    134
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB86",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 0 of (HL).",
    "instruction": "res 0,(hl)"
  }
};

// res 0,a
const variant_CB_87: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "a"
  ],
  "tokens": [
    "0",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    135
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB87",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 0 of A.",
    "instruction": "res 0,a"
  }
};

// res 1,b
const variant_CB_88: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "b"
  ],
  "tokens": [
    "1",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    136
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB88",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of B.",
    "instruction": "res 1,b"
  }
};

// res 1,c
const variant_CB_89: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "c"
  ],
  "tokens": [
    "1",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    137
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB89",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of C.",
    "instruction": "res 1,c"
  }
};

// res 1,d
const variant_CB_8A: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "d"
  ],
  "tokens": [
    "1",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    138
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB8A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of D.",
    "instruction": "res 1,d"
  }
};

// res 1,e
const variant_CB_8B: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "e"
  ],
  "tokens": [
    "1",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    139
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB8B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of E.",
    "instruction": "res 1,e"
  }
};

// res 1,h
const variant_CB_8C: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "h"
  ],
  "tokens": [
    "1",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    140
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB8C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of H.",
    "instruction": "res 1,h"
  }
};

// res 1,l
const variant_CB_8D: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "l"
  ],
  "tokens": [
    "1",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    141
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB8D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of L.",
    "instruction": "res 1,l"
  }
};

// res 1,(hl)
const variant_CB_8E: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "(hl)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    142
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB8E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 1 of (HL).",
    "instruction": "res 1,(hl)"
  }
};

// res 1,a
const variant_CB_8F: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "a"
  ],
  "tokens": [
    "1",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    143
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB8F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 1 of A.",
    "instruction": "res 1,a"
  }
};

// res 2,b
const variant_CB_90: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "b"
  ],
  "tokens": [
    "2",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    144
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB90",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of B.",
    "instruction": "res 2,b"
  }
};

// res 2,c
const variant_CB_91: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "c"
  ],
  "tokens": [
    "2",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    145
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB91",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of C.",
    "instruction": "res 2,c"
  }
};

// res 2,d
const variant_CB_92: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "d"
  ],
  "tokens": [
    "2",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    146
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB92",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of D.",
    "instruction": "res 2,d"
  }
};

// res 2,e
const variant_CB_93: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "e"
  ],
  "tokens": [
    "2",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    147
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB93",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of E.",
    "instruction": "res 2,e"
  }
};

// res 2,h
const variant_CB_94: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "h"
  ],
  "tokens": [
    "2",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    148
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB94",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of H.",
    "instruction": "res 2,h"
  }
};

// res 2,l
const variant_CB_95: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "l"
  ],
  "tokens": [
    "2",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    149
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB95",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of L.",
    "instruction": "res 2,l"
  }
};

// res 2,(hl)
const variant_CB_96: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "(hl)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    150
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB96",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 2 of (HL).",
    "instruction": "res 2,(hl)"
  }
};

// res 2,a
const variant_CB_97: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "a"
  ],
  "tokens": [
    "2",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    151
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB97",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 2 of A.",
    "instruction": "res 2,a"
  }
};

// res 3,b
const variant_CB_98: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "b"
  ],
  "tokens": [
    "3",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    152
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB98",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of B.",
    "instruction": "res 3,b"
  }
};

// res 3,c
const variant_CB_99: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "c"
  ],
  "tokens": [
    "3",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    153
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB99",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of C.",
    "instruction": "res 3,c"
  }
};

// res 3,d
const variant_CB_9A: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "d"
  ],
  "tokens": [
    "3",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    154
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB9A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of D.",
    "instruction": "res 3,d"
  }
};

// res 3,e
const variant_CB_9B: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "e"
  ],
  "tokens": [
    "3",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    155
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB9B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of E.",
    "instruction": "res 3,e"
  }
};

// res 3,h
const variant_CB_9C: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "h"
  ],
  "tokens": [
    "3",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    156
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB9C",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of H.",
    "instruction": "res 3,h"
  }
};

// res 3,l
const variant_CB_9D: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "l"
  ],
  "tokens": [
    "3",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    157
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB9D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of L.",
    "instruction": "res 3,l"
  }
};

// res 3,(hl)
const variant_CB_9E: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "(hl)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    158
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB9E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 3 of (HL).",
    "instruction": "res 3,(hl)"
  }
};

// res 3,a
const variant_CB_9F: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "a"
  ],
  "tokens": [
    "3",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    159
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CB9F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 3 of A.",
    "instruction": "res 3,a"
  }
};

// res 4,b
const variant_CB_A0: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "b"
  ],
  "tokens": [
    "4",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    160
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of B.",
    "instruction": "res 4,b"
  }
};

// res 4,c
const variant_CB_A1: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "c"
  ],
  "tokens": [
    "4",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    161
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of C.",
    "instruction": "res 4,c"
  }
};

// res 4,d
const variant_CB_A2: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "d"
  ],
  "tokens": [
    "4",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    162
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of D.",
    "instruction": "res 4,d"
  }
};

// res 4,e
const variant_CB_A3: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "e"
  ],
  "tokens": [
    "4",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    163
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of E.",
    "instruction": "res 4,e"
  }
};

// res 4,h
const variant_CB_A4: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "h"
  ],
  "tokens": [
    "4",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    164
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of H.",
    "instruction": "res 4,h"
  }
};

// res 4,l
const variant_CB_A5: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "l"
  ],
  "tokens": [
    "4",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    165
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of L.",
    "instruction": "res 4,l"
  }
};

// res 4,(hl)
const variant_CB_A6: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "(hl)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    166
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 4 of (HL).",
    "instruction": "res 4,(hl)"
  }
};

// res 4,a
const variant_CB_A7: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "a"
  ],
  "tokens": [
    "4",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    167
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 4 of A.",
    "instruction": "res 4,a"
  }
};

// res 5,b
const variant_CB_A8: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "b"
  ],
  "tokens": [
    "5",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    168
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of B.",
    "instruction": "res 5,b"
  }
};

// res 5,c
const variant_CB_A9: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "c"
  ],
  "tokens": [
    "5",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    169
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBA9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of C.",
    "instruction": "res 5,c"
  }
};

// res 5,d
const variant_CB_AA: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "d"
  ],
  "tokens": [
    "5",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    170
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBAA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of D.",
    "instruction": "res 5,d"
  }
};

// res 5,e
const variant_CB_AB: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "e"
  ],
  "tokens": [
    "5",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    171
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBAB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of E.",
    "instruction": "res 5,e"
  }
};

// res 5,h
const variant_CB_AC: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "h"
  ],
  "tokens": [
    "5",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    172
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBAC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of H.",
    "instruction": "res 5,h"
  }
};

// res 5,l
const variant_CB_AD: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "l"
  ],
  "tokens": [
    "5",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    173
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBAD",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of L.",
    "instruction": "res 5,l"
  }
};

// res 5,(hl)
const variant_CB_AE: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "(hl)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    174
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBAE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 5 of (HL).",
    "instruction": "res 5,(hl)"
  }
};

// res 5,a
const variant_CB_AF: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "a"
  ],
  "tokens": [
    "5",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    175
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBAF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 5 of A.",
    "instruction": "res 5,a"
  }
};

// res 6,b
const variant_CB_B0: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "b"
  ],
  "tokens": [
    "6",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    176
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of B.",
    "instruction": "res 6,b"
  }
};

// res 6,c
const variant_CB_B1: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "c"
  ],
  "tokens": [
    "6",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    177
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of C.",
    "instruction": "res 6,c"
  }
};

// res 6,d
const variant_CB_B2: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "d"
  ],
  "tokens": [
    "6",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    178
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of D.",
    "instruction": "res 6,d"
  }
};

// res 6,e
const variant_CB_B3: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "e"
  ],
  "tokens": [
    "6",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    179
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of E.",
    "instruction": "res 6,e"
  }
};

// res 6,h
const variant_CB_B4: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "h"
  ],
  "tokens": [
    "6",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    180
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of H.",
    "instruction": "res 6,h"
  }
};

// res 6,l
const variant_CB_B5: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "l"
  ],
  "tokens": [
    "6",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    181
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of L.",
    "instruction": "res 6,l"
  }
};

// res 6,(hl)
const variant_CB_B6: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "(hl)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    182
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 6 of (HL).",
    "instruction": "res 6,(hl)"
  }
};

// res 6,a
const variant_CB_B7: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "a"
  ],
  "tokens": [
    "6",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    183
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 6 of A.",
    "instruction": "res 6,a"
  }
};

// res 7,b
const variant_CB_B8: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "b"
  ],
  "tokens": [
    "7",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    184
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of B.",
    "instruction": "res 7,b"
  }
};

// res 7,c
const variant_CB_B9: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "c"
  ],
  "tokens": [
    "7",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    185
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBB9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of C.",
    "instruction": "res 7,c"
  }
};

// res 7,d
const variant_CB_BA: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "d"
  ],
  "tokens": [
    "7",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    186
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBBA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of D.",
    "instruction": "res 7,d"
  }
};

// res 7,e
const variant_CB_BB: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "e"
  ],
  "tokens": [
    "7",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    187
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBBB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of E.",
    "instruction": "res 7,e"
  }
};

// res 7,h
const variant_CB_BC: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "h"
  ],
  "tokens": [
    "7",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    188
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBBC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of H.",
    "instruction": "res 7,h"
  }
};

// res 7,l
const variant_CB_BD: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "l"
  ],
  "tokens": [
    "7",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    189
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBBD",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of L.",
    "instruction": "res 7,l"
  }
};

// res 7,(hl)
const variant_CB_BE: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "(hl)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    190
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBBE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Resets bit 7 of (HL).",
    "instruction": "res 7,(hl)"
  }
};

// res 7,a
const variant_CB_BF: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "a"
  ],
  "tokens": [
    "7",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    191
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBBF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Resets bit 7 of A.",
    "instruction": "res 7,a"
  }
};

// set 0,b
const variant_CB_C0: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "b"
  ],
  "tokens": [
    "0",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    192
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of B.",
    "instruction": "set 0,b"
  }
};

// set 0,c
const variant_CB_C1: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "c"
  ],
  "tokens": [
    "0",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    193
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of C.",
    "instruction": "set 0,c"
  }
};

// set 0,d
const variant_CB_C2: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "d"
  ],
  "tokens": [
    "0",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    194
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of D.",
    "instruction": "set 0,d"
  }
};

// set 0,e
const variant_CB_C3: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "e"
  ],
  "tokens": [
    "0",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    195
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of E.",
    "instruction": "set 0,e"
  }
};

// set 0,h
const variant_CB_C4: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "h"
  ],
  "tokens": [
    "0",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    196
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of H.",
    "instruction": "set 0,h"
  }
};

// set 0,l
const variant_CB_C5: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "l"
  ],
  "tokens": [
    "0",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    197
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of L.",
    "instruction": "set 0,l"
  }
};

// set 0,(hl)
const variant_CB_C6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "(hl)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    198
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 0 of (HL).",
    "instruction": "set 0,(hl)"
  }
};

// set 0,a
const variant_CB_C7: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "a"
  ],
  "tokens": [
    "0",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    199
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 0 of A.",
    "instruction": "set 0,a"
  }
};

// set 1,b
const variant_CB_C8: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "b"
  ],
  "tokens": [
    "1",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    200
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of B.",
    "instruction": "set 1,b"
  }
};

// set 1,c
const variant_CB_C9: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "c"
  ],
  "tokens": [
    "1",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    201
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBC9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of C.",
    "instruction": "set 1,c"
  }
};

// set 1,d
const variant_CB_CA: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "d"
  ],
  "tokens": [
    "1",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    202
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBCA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of D.",
    "instruction": "set 1,d"
  }
};

// set 1,e
const variant_CB_CB: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "e"
  ],
  "tokens": [
    "1",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    203
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBCB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of E.",
    "instruction": "set 1,e"
  }
};

// set 1,h
const variant_CB_CC: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "h"
  ],
  "tokens": [
    "1",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    204
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBCC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of H.",
    "instruction": "set 1,h"
  }
};

// set 1,l
const variant_CB_CD: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "l"
  ],
  "tokens": [
    "1",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    205
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBCD",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of L.",
    "instruction": "set 1,l"
  }
};

// set 1,(hl)
const variant_CB_CE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "(hl)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    206
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBCE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 1 of (HL).",
    "instruction": "set 1,(hl)"
  }
};

// set 1,a
const variant_CB_CF: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "a"
  ],
  "tokens": [
    "1",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    207
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBCF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 1 of A.",
    "instruction": "set 1,a"
  }
};

// set 2,b
const variant_CB_D0: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "b"
  ],
  "tokens": [
    "2",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    208
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of B.",
    "instruction": "set 2,b"
  }
};

// set 2,c
const variant_CB_D1: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "c"
  ],
  "tokens": [
    "2",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    209
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of C.",
    "instruction": "set 2,c"
  }
};

// set 2,d
const variant_CB_D2: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "d"
  ],
  "tokens": [
    "2",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    210
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of D.",
    "instruction": "set 2,d"
  }
};

// set 2,e
const variant_CB_D3: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "e"
  ],
  "tokens": [
    "2",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    211
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of E.",
    "instruction": "set 2,e"
  }
};

// set 2,h
const variant_CB_D4: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "h"
  ],
  "tokens": [
    "2",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    212
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of H.",
    "instruction": "set 2,h"
  }
};

// set 2,l
const variant_CB_D5: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "l"
  ],
  "tokens": [
    "2",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    213
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of L.",
    "instruction": "set 2,l"
  }
};

// set 2,(hl)
const variant_CB_D6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "(hl)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    214
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 2 of (HL).",
    "instruction": "set 2,(hl)"
  }
};

// set 2,a
const variant_CB_D7: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "a"
  ],
  "tokens": [
    "2",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    215
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 2 of A.",
    "instruction": "set 2,a"
  }
};

// set 3,b
const variant_CB_D8: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "b"
  ],
  "tokens": [
    "3",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    216
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of B.",
    "instruction": "set 3,b"
  }
};

// set 3,c
const variant_CB_D9: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "c"
  ],
  "tokens": [
    "3",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    217
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBD9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of C.",
    "instruction": "set 3,c"
  }
};

// set 3,d
const variant_CB_DA: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "d"
  ],
  "tokens": [
    "3",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    218
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBDA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of D.",
    "instruction": "set 3,d"
  }
};

// set 3,e
const variant_CB_DB: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "e"
  ],
  "tokens": [
    "3",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    219
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBDB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of E.",
    "instruction": "set 3,e"
  }
};

// set 3,h
const variant_CB_DC: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "h"
  ],
  "tokens": [
    "3",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    220
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBDC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of H.",
    "instruction": "set 3,h"
  }
};

// set 3,l
const variant_CB_DD: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "l"
  ],
  "tokens": [
    "3",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    221
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBDD",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of L.",
    "instruction": "set 3,l"
  }
};

// set 3,(hl)
const variant_CB_DE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "(hl)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    222
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBDE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 3 of (HL).",
    "instruction": "set 3,(hl)"
  }
};

// set 3,a
const variant_CB_DF: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "a"
  ],
  "tokens": [
    "3",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    223
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBDF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 3 of A.",
    "instruction": "set 3,a"
  }
};

// set 4,b
const variant_CB_E0: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "b"
  ],
  "tokens": [
    "4",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    224
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of B.",
    "instruction": "set 4,b"
  }
};

// set 4,c
const variant_CB_E1: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "c"
  ],
  "tokens": [
    "4",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    225
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of C.",
    "instruction": "set 4,c"
  }
};

// set 4,d
const variant_CB_E2: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "d"
  ],
  "tokens": [
    "4",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    226
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of D.",
    "instruction": "set 4,d"
  }
};

// set 4,e
const variant_CB_E3: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "e"
  ],
  "tokens": [
    "4",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    227
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of E.",
    "instruction": "set 4,e"
  }
};

// set 4,h
const variant_CB_E4: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "h"
  ],
  "tokens": [
    "4",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    228
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of H.",
    "instruction": "set 4,h"
  }
};

// set 4,l
const variant_CB_E5: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "l"
  ],
  "tokens": [
    "4",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    229
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of L.",
    "instruction": "set 4,l"
  }
};

// set 4,(hl)
const variant_CB_E6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "(hl)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    230
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 4 of (HL).",
    "instruction": "set 4,(hl)"
  }
};

// set 4,a
const variant_CB_E7: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "a"
  ],
  "tokens": [
    "4",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    231
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 4 of A.",
    "instruction": "set 4,a"
  }
};

// set 5,b
const variant_CB_E8: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "b"
  ],
  "tokens": [
    "5",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    232
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of B.",
    "instruction": "set 5,b"
  }
};

// set 5,c
const variant_CB_E9: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "c"
  ],
  "tokens": [
    "5",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    233
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBE9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of C.",
    "instruction": "set 5,c"
  }
};

// set 5,d
const variant_CB_EA: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "d"
  ],
  "tokens": [
    "5",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    234
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBEA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of D.",
    "instruction": "set 5,d"
  }
};

// set 5,e
const variant_CB_EB: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "e"
  ],
  "tokens": [
    "5",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    235
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBEB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of E.",
    "instruction": "set 5,e"
  }
};

// set 5,h
const variant_CB_EC: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "h"
  ],
  "tokens": [
    "5",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    236
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBEC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of H.",
    "instruction": "set 5,h"
  }
};

// set 5,l
const variant_CB_ED: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "l"
  ],
  "tokens": [
    "5",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    237
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBED",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of L.",
    "instruction": "set 5,l"
  }
};

// set 5,(hl)
const variant_CB_EE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "(hl)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    238
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBEE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 5 of (HL).",
    "instruction": "set 5,(hl)"
  }
};

// set 5,a
const variant_CB_EF: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "a"
  ],
  "tokens": [
    "5",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    239
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBEF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 5 of A.",
    "instruction": "set 5,a"
  }
};

// set 6,b
const variant_CB_F0: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "b"
  ],
  "tokens": [
    "6",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    240
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of B.",
    "instruction": "set 6,b"
  }
};

// set 6,c
const variant_CB_F1: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "c"
  ],
  "tokens": [
    "6",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    241
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of C.",
    "instruction": "set 6,c"
  }
};

// set 6,d
const variant_CB_F2: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "d"
  ],
  "tokens": [
    "6",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    242
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of D.",
    "instruction": "set 6,d"
  }
};

// set 6,e
const variant_CB_F3: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "e"
  ],
  "tokens": [
    "6",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    243
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of E.",
    "instruction": "set 6,e"
  }
};

// set 6,h
const variant_CB_F4: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "h"
  ],
  "tokens": [
    "6",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    244
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of H.",
    "instruction": "set 6,h"
  }
};

// set 6,l
const variant_CB_F5: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "l"
  ],
  "tokens": [
    "6",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    245
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of L.",
    "instruction": "set 6,l"
  }
};

// set 6,(hl)
const variant_CB_F6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "(hl)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    246
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 6 of (HL).",
    "instruction": "set 6,(hl)"
  }
};

// set 6,a
const variant_CB_F7: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "a"
  ],
  "tokens": [
    "6",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    247
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 6 of A.",
    "instruction": "set 6,a"
  }
};

// set 7,b
const variant_CB_F8: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "b"
  ],
  "tokens": [
    "7",
    ",",
    "b"
  ],
  "opcodes": [
    203,
    248
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of B.",
    "instruction": "set 7,b"
  }
};

// set 7,c
const variant_CB_F9: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "c"
  ],
  "tokens": [
    "7",
    ",",
    "c"
  ],
  "opcodes": [
    203,
    249
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBF9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of C.",
    "instruction": "set 7,c"
  }
};

// set 7,d
const variant_CB_FA: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "d"
  ],
  "tokens": [
    "7",
    ",",
    "d"
  ],
  "opcodes": [
    203,
    250
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBFA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of D.",
    "instruction": "set 7,d"
  }
};

// set 7,e
const variant_CB_FB: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "e"
  ],
  "tokens": [
    "7",
    ",",
    "e"
  ],
  "opcodes": [
    203,
    251
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBFB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of E.",
    "instruction": "set 7,e"
  }
};

// set 7,h
const variant_CB_FC: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "h"
  ],
  "tokens": [
    "7",
    ",",
    "h"
  ],
  "opcodes": [
    203,
    252
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBFC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of H.",
    "instruction": "set 7,h"
  }
};

// set 7,l
const variant_CB_FD: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "l"
  ],
  "tokens": [
    "7",
    ",",
    "l"
  ],
  "opcodes": [
    203,
    253
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBFD",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of L.",
    "instruction": "set 7,l"
  }
};

// set 7,(hl)
const variant_CB_FE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "(hl)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    203,
    254
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBFE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Sets bit 7 of (HL).",
    "instruction": "set 7,(hl)"
  }
};

// set 7,a
const variant_CB_FF: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "a"
  ],
  "tokens": [
    "7",
    ",",
    "a"
  ],
  "opcodes": [
    203,
    255
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CBFF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets bit 7 of A.",
    "instruction": "set 7,a"
  }
};

// call z,nnnn
const variant_CC_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "z",
    "nnnn"
  ],
  "tokens": [
    "z",
    ",",
    "nnnn"
  ],
  "opcodes": [
    204,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the zero flag is set, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call z,nn"
  }
};

// call nnnn
const variant_CD_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "nnnn"
  ],
  "tokens": [
    "nnnn"
  ],
  "opcodes": [
    205,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CD",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 17,
    "description": "The current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call nn"
  }
};

// adc a,nn
const variant_CE_nn: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    206,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds <var>n</var> and the carry flag to A.",
    "instruction": "adc a,n"
  }
};

// adc nn
const variant_CE_nn_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    206,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "CE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Adds <var>n</var> and the carry flag to A.",
    "instruction": "adc a,n"
  }
};

// rst 8
const variant_CF: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "8"
  ],
  "tokens": [
    "8"
  ],
  "opcodes": [
    207
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "CF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 8.",
    "instruction": "rst 08h"
  }
};

// ret nc
const variant_D0: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "nc"
  ],
  "tokens": [
    "nc"
  ],
  "opcodes": [
    208
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the carry flag is unset, the top stack entry is popped into PC.",
    "instruction": "ret nc"
  }
};

// pop de
const variant_D1: OpcodeVariant = {
  "mnemonic": "pop",
  "params": [
    "de"
  ],
  "tokens": [
    "de"
  ],
  "opcodes": [
    209
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "The memory location pointed to by SP is stored into E and SP is incremented. The memory location pointed to by SP is stored into D and SP is incremented again.",
    "instruction": "pop de"
  }
};

// jp nc,nnnn
const variant_D2_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "nc",
    "nnnn"
  ],
  "tokens": [
    "nc",
    ",",
    "nnnn"
  ],
  "opcodes": [
    210,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the carry flag is unset, <var>nn</var> is copied to PC.",
    "instruction": "jp nc,nn"
  }
};

// out (nn),a
const variant_D3_nn: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(nn)",
    "a"
  ],
  "tokens": [
    "(",
    "nn",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    211,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The value of A is written to port <var>n</var>.",
    "instruction": "out (n),a"
  }
};

// call nc,nnnn
const variant_D4_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "nc",
    "nnnn"
  ],
  "tokens": [
    "nc",
    ",",
    "nnnn"
  ],
  "opcodes": [
    212,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the carry flag is unset, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call nc,nn"
  }
};

// push de
const variant_D5: OpcodeVariant = {
  "mnemonic": "push",
  "params": [
    "de"
  ],
  "tokens": [
    "de"
  ],
  "opcodes": [
    213
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "SP is decremented and D is stored into the memory location pointed to by SP. SP is decremented again and E is stored into the memory location pointed to by SP.",
    "instruction": "push de"
  }
};

// sub a,nn
const variant_D6_nn: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    214,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D6",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts <var>n</var> from A.",
    "instruction": "sub n"
  }
};

// sub nn
const variant_D6_nn_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    214,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "D6",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts <var>n</var> from A.",
    "instruction": "sub n"
  }
};

// rst 16
const variant_D7: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "10"
  ],
  "tokens": [
    "16"
  ],
  "opcodes": [
    215
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 16.",
    "instruction": "rst 10h"
  }
};

// ret c
const variant_D8: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    216
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the carry flag is set, the top stack entry is popped into PC.",
    "instruction": "ret c"
  }
};

// exx 
const variant_D9: OpcodeVariant = {
  "mnemonic": "exx",
  "params": [],
  "tokens": [],
  "opcodes": [
    217
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "D9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Exchanges the 16-bit contents of BC, DE, and HL with BC', DE', and HL'.",
    "instruction": "exx"
  }
};

// jp c,nnnn
const variant_DA_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "c",
    "nnnn"
  ],
  "tokens": [
    "c",
    ",",
    "nnnn"
  ],
  "opcodes": [
    218,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the carry flag is set, <var>nn</var> is copied to PC.",
    "instruction": "jp c,nn"
  }
};

// in a,(nn)
const variant_DB_nn: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "a",
    "(nn)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "nn",
    ")"
  ],
  "opcodes": [
    219,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "a byte from port <var>n</var> is written to A.",
    "instruction": "in a,(n)"
  }
};

// in (nn)
const variant_DB_nn_pseudo: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "(nn)"
  ],
  "tokens": [
    "(",
    "nn",
    ")"
  ],
  "opcodes": [
    219,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "a byte from port <var>n</var> is written to A.",
    "instruction": "in a,(n)"
  }
};

// call c,nnnn
const variant_DC_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "c",
    "nnnn"
  ],
  "tokens": [
    "c",
    ",",
    "nnnn"
  ],
  "opcodes": [
    220,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the carry flag is set, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call c,nn"
  }
};

// add ix,bc
const variant_DD_09: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "ix",
    "bc"
  ],
  "tokens": [
    "ix",
    ",",
    "bc"
  ],
  "opcodes": [
    221,
    9
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD09",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of BC is added to IX.",
    "instruction": "add ix,bc"
  }
};

// add ix,de
const variant_DD_19: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "ix",
    "de"
  ],
  "tokens": [
    "ix",
    ",",
    "de"
  ],
  "opcodes": [
    221,
    25
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD19",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of DE is added to IX.",
    "instruction": "add ix,de"
  }
};

// ld ix,nnnn
const variant_DD_21_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ix",
    "nnnn"
  ],
  "tokens": [
    "ix",
    ",",
    "nnnn"
  ],
  "opcodes": [
    221,
    33,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD21",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Loads <var>nn</var> into register IX.",
    "instruction": "ld ix,nn"
  }
};

// ld (nnnn),ix
const variant_DD_22_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "ix"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "ix"
  ],
  "opcodes": [
    221,
    34,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD22",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Stores IX into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),ix"
  }
};

// inc ix
const variant_DD_23: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "ix"
  ],
  "tokens": [
    "ix"
  ],
  "opcodes": [
    221,
    35
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD23",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Adds one to IX.",
    "instruction": "inc ix"
  }
};

// inc ixh
const variant_DD_24: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    36
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD24",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds one to IXH.",
    "instruction": "inc ixh"
  }
};

// dec ixh
const variant_DD_25: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    37
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD25",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts one from IXH.",
    "instruction": "dec ixh"
  }
};

// ld ixh,nn
const variant_DD_26_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "nn"
  ],
  "tokens": [
    "ixh",
    ",",
    "nn"
  ],
  "opcodes": [
    221,
    38,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD26",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "Loads <var>n</var> into IXH.",
    "instruction": "ld ixh,n"
  }
};

// add ix,ix
const variant_DD_29: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "ix",
    "ix"
  ],
  "tokens": [
    "ix",
    ",",
    "ix"
  ],
  "opcodes": [
    221,
    41
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD29",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of IX is added to IX.",
    "instruction": "add ix,ix"
  }
};

// ld ix,(nnnn)
const variant_DD_2A_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ix",
    "(nnnn)"
  ],
  "tokens": [
    "ix",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    221,
    42,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD2A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Loads the value pointed to by <var>nn</var> into IX.",
    "instruction": "ld ix,(nn)"
  }
};

// dec ix
const variant_DD_2B: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "ix"
  ],
  "tokens": [
    "ix"
  ],
  "opcodes": [
    221,
    43
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD2B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Subtracts one from IX.",
    "instruction": "dec ix"
  }
};

// inc ixl
const variant_DD_2C: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    44
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD2C",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds one to IXL.",
    "instruction": "inc ixl"
  }
};

// dec ixl
const variant_DD_2D: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    45
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD2D",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts one from IXL.",
    "instruction": "dec ixl"
  }
};

// ld ixl,nn
const variant_DD_2E_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "nn"
  ],
  "tokens": [
    "ixl",
    ",",
    "nn"
  ],
  "opcodes": [
    221,
    46,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD2E",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "Loads <var>n</var> into IXL.",
    "instruction": "ld ixl,n"
  }
};

// inc (ix+dd)
const variant_DD_34_dd: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    52,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD34",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 3,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Adds one to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "inc (ix+d)"
  }
};

// dec (ix+dd)
const variant_DD_35_dd: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    53,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD35",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 3,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Subtracts one from the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "dec (ix+d)"
  }
};

// ld (ix+dd),nn
const variant_DD_36_dd_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "nn"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "nn"
  ],
  "opcodes": [
    221,
    54,
    "dd",
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD36",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores <var>n</var> to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),n"
  }
};

// add ix,sp
const variant_DD_39: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "ix",
    "sp"
  ],
  "tokens": [
    "ix",
    ",",
    "sp"
  ],
  "opcodes": [
    221,
    57
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD39",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of SP is added to IX.",
    "instruction": "add ix,sp"
  }
};

// ld b,ixh
const variant_DD_44: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "ixh"
  ],
  "tokens": [
    "b",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    68
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD44",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into B.",
    "instruction": "ld b,ixh"
  }
};

// ld b,ixl
const variant_DD_45: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "ixl"
  ],
  "tokens": [
    "b",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    69
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD45",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into B.",
    "instruction": "ld b,ixl"
  }
};

// ld b,(ix+dd)
const variant_DD_46_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    70,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD46",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into B.",
    "instruction": "ld b,(ix+d)"
  }
};

// ld c,ixh
const variant_DD_4C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "ixh"
  ],
  "tokens": [
    "c",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    76
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD4C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into C.",
    "instruction": "ld c,ixh"
  }
};

// ld c,ixl
const variant_DD_4D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "ixl"
  ],
  "tokens": [
    "c",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    77
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD4D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into C.",
    "instruction": "ld c,ixl"
  }
};

// ld c,(ix+dd)
const variant_DD_4E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    78,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD4E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into C.",
    "instruction": "ld c,(ix+d)"
  }
};

// ld d,ixh
const variant_DD_54: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "ixh"
  ],
  "tokens": [
    "d",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    84
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD54",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into D.",
    "instruction": "ld d,ixh"
  }
};

// ld d,ixl
const variant_DD_55: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "ixl"
  ],
  "tokens": [
    "d",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    85
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD55",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into D.",
    "instruction": "ld d,ixl"
  }
};

// ld d,(ix+dd)
const variant_DD_56_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    86,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD56",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into D.",
    "instruction": "ld d,(ix+d)"
  }
};

// ld e,ixh
const variant_DD_5C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "ixh"
  ],
  "tokens": [
    "e",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    92
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD5C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into E.",
    "instruction": "ld e,ixh"
  }
};

// ld e,ixl
const variant_DD_5D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "ixl"
  ],
  "tokens": [
    "e",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    93
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD5D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into E.",
    "instruction": "ld e,ixl"
  }
};

// ld e,(ix+dd)
const variant_DD_5E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    94,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD5E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into E.",
    "instruction": "ld e,(ix+d)"
  }
};

// ld ixh,b
const variant_DD_60: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "b"
  ],
  "tokens": [
    "ixh",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    96
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD60",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into IXH.",
    "instruction": "ld ixh,b"
  }
};

// ld ixh,c
const variant_DD_61: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "c"
  ],
  "tokens": [
    "ixh",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    97
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD61",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into IXH.",
    "instruction": "ld ixh,c"
  }
};

// ld ixh,d
const variant_DD_62: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "d"
  ],
  "tokens": [
    "ixh",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    98
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD62",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into IXH.",
    "instruction": "ld ixh,d"
  }
};

// ld ixh,e
const variant_DD_63: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "e"
  ],
  "tokens": [
    "ixh",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    99
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD63",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into IXH.",
    "instruction": "ld ixh,e"
  }
};

// ld ixh,ixh
const variant_DD_64: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "ixh"
  ],
  "tokens": [
    "ixh",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    100
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD64",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into IXH.",
    "instruction": "ld ixh,ixh"
  }
};

// ld ixh,ixl
const variant_DD_65: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "ixl"
  ],
  "tokens": [
    "ixh",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    101
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD65",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into IXH.",
    "instruction": "ld ixh,ixl"
  }
};

// ld h,(ix+dd)
const variant_DD_66_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    102,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD66",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into H.",
    "instruction": "ld h,(ix+d)"
  }
};

// ld ixh,a
const variant_DD_67: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh",
    "a"
  ],
  "tokens": [
    "ixh",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    103
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD67",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into IXH.",
    "instruction": "ld ixh,a"
  }
};

// ld ixl,b
const variant_DD_68: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "b"
  ],
  "tokens": [
    "ixl",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    104
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD68",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into IXL.",
    "instruction": "ld ixl,b"
  }
};

// ld ixl,c
const variant_DD_69: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "c"
  ],
  "tokens": [
    "ixl",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    105
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD69",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into IXL.",
    "instruction": "ld ixl,c"
  }
};

// ld ixl,d
const variant_DD_6A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "d"
  ],
  "tokens": [
    "ixl",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    106
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD6A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into IXL.",
    "instruction": "ld ixl,d"
  }
};

// ld ixl,e
const variant_DD_6B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "e"
  ],
  "tokens": [
    "ixl",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    107
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD6B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into IXL.",
    "instruction": "ld ixl,e"
  }
};

// ld ixl,ixh
const variant_DD_6C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "ixh"
  ],
  "tokens": [
    "ixl",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    108
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD6C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into IXL.",
    "instruction": "ld ixl,ixh"
  }
};

// ld ixl,ixl
const variant_DD_6D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "ixl"
  ],
  "tokens": [
    "ixl",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    109
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD6D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into IXL.",
    "instruction": "ld ixl,ixl"
  }
};

// ld l,(ix+dd)
const variant_DD_6E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    110,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD6E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into L.",
    "instruction": "ld l,(ix+d)"
  }
};

// ld ixl,a
const variant_DD_6F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl",
    "a"
  ],
  "tokens": [
    "ixl",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    111
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD6F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into IXL.",
    "instruction": "ld ixl,a"
  }
};

// ld (ix+dd),b
const variant_DD_70_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "b"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    112,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD70",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores B to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),b"
  }
};

// ld (ix+dd),c
const variant_DD_71_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "c"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    113,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD71",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores C to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),c"
  }
};

// ld (ix+dd),d
const variant_DD_72_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "d"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    114,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD72",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores D to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),d"
  }
};

// ld (ix+dd),e
const variant_DD_73_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "e"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    115,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD73",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores E to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),e"
  }
};

// ld (ix+dd),h
const variant_DD_74_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "h"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "h"
  ],
  "opcodes": [
    221,
    116,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD74",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores H to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),h"
  }
};

// ld (ix+dd),l
const variant_DD_75_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "l"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "l"
  ],
  "opcodes": [
    221,
    117,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD75",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores L to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),l"
  }
};

// ld (ix+dd),a
const variant_DD_77_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)",
    "a"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    119,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD77",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores A to the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "ld (ix+d),a"
  }
};

// ld a,ixh
const variant_DD_7C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    124
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD7C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into A.",
    "instruction": "ld a,ixh"
  }
};

// ld ixh
const variant_DD_7C_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    124
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD7C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXH are loaded into A.",
    "instruction": "ld a,ixh"
  }
};

// ld a,ixl
const variant_DD_7D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    125
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD7D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into A.",
    "instruction": "ld a,ixl"
  }
};

// ld ixl
const variant_DD_7D_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    125
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD7D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IXL are loaded into A.",
    "instruction": "ld a,ixl"
  }
};

// ld a,(ix+dd)
const variant_DD_7E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    126,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD7E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into A.",
    "instruction": "ld a,(ix+d)"
  }
};

// ld (ix+dd)
const variant_DD_7E_dd_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    126,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD7E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IX plus <var>D</var> into A.",
    "instruction": "ld a,(ix+d)"
  }
};

// add a,ixh
const variant_DD_84: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    132
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD84",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXH to A.",
    "instruction": "add a,ixh"
  }
};

// add ixh
const variant_DD_84_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    132
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD84",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXH to A.",
    "instruction": "add a,ixh"
  }
};

// add a,ixl
const variant_DD_85: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    133
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD85",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXL to A.",
    "instruction": "add a,ixl"
  }
};

// add ixl
const variant_DD_85_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    133
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD85",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXL to A.",
    "instruction": "add a,ixl"
  }
};

// add a,(ix+dd)
const variant_DD_86_dd: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    134,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD86",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IX plus <var>D</var> to A.",
    "instruction": "add a,(ix+d)"
  }
};

// add (ix+dd)
const variant_DD_86_dd_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    134,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD86",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IX plus <var>D</var> to A.",
    "instruction": "add a,(ix+d)"
  }
};

// adc a,ixh
const variant_DD_8C: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    140
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD8C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXH and the carry flag to A.",
    "instruction": "adc a,ixh"
  }
};

// adc ixh
const variant_DD_8C_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    140
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD8C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXH and the carry flag to A.",
    "instruction": "adc a,ixh"
  }
};

// adc a,ixl
const variant_DD_8D: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    141
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD8D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXL and the carry flag to A.",
    "instruction": "adc a,ixl"
  }
};

// adc ixl
const variant_DD_8D_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    141
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD8D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IXL and the carry flag to A.",
    "instruction": "adc a,ixl"
  }
};

// adc a,(ix+dd)
const variant_DD_8E_dd: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    142,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD8E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IX plus <var>D</var> and the carry flag to A.",
    "instruction": "adc a,(ix+d)"
  }
};

// adc (ix+dd)
const variant_DD_8E_dd_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    142,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD8E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IX plus <var>D</var> and the carry flag to A.",
    "instruction": "adc a,(ix+d)"
  }
};

// sub a,ixh
const variant_DD_94: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    148
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD94",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXH from A.",
    "instruction": "sub ixh"
  }
};

// sub ixh
const variant_DD_94_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    148
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD94",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXH from A.",
    "instruction": "sub ixh"
  }
};

// sub a,ixl
const variant_DD_95: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    149
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD95",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXL from A.",
    "instruction": "sub ixl"
  }
};

// sub ixl
const variant_DD_95_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    149
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD95",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXL from A.",
    "instruction": "sub ixl"
  }
};

// sub a,(ix+dd)
const variant_DD_96_dd: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    150,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD96",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IX plus <var>D</var> from A.",
    "instruction": "sub (ix+d)"
  }
};

// sub (ix+dd)
const variant_DD_96_dd_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    150,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD96",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IX plus <var>D</var> from A.",
    "instruction": "sub (ix+d)"
  }
};

// sbc a,ixh
const variant_DD_9C: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    156
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD9C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXH and the carry flag from A.",
    "instruction": "sbc a,ixh"
  }
};

// sbc ixh
const variant_DD_9C_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    156
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD9C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXH and the carry flag from A.",
    "instruction": "sbc a,ixh"
  }
};

// sbc a,ixl
const variant_DD_9D: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    157
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD9D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXL and the carry flag from A.",
    "instruction": "sbc a,ixl"
  }
};

// sbc ixl
const variant_DD_9D_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    157
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD9D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXL and the carry flag from A.",
    "instruction": "sbc a,ixl"
  }
};

// sbc a,(ix+dd)
const variant_DD_9E_dd: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    158,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DD9E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IX plus <var>D</var> and the carry flag from A.",
    "instruction": "sbc a,(ix+d)"
  }
};

// sbc (ix+dd)
const variant_DD_9E_dd_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    158,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DD9E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IX plus <var>D</var> and the carry flag from A.",
    "instruction": "sbc a,(ix+d)"
  }
};

// and a,ixh
const variant_DD_A4: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    164
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDA4",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IXH.",
    "instruction": "and ixh"
  }
};

// and ixh
const variant_DD_A4_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    164
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDA4",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IXH.",
    "instruction": "and ixh"
  }
};

// and a,ixl
const variant_DD_A5: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    165
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDA5",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IXL.",
    "instruction": "and ixl"
  }
};

// and ixl
const variant_DD_A5_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    165
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDA5",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IXL.",
    "instruction": "and ixl"
  }
};

// and a,(ix+dd)
const variant_DD_A6_dd: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    166,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDA6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise AND on A with the value pointed to by IX plus <var>D</var>.",
    "instruction": "and (ix+d)"
  }
};

// and (ix+dd)
const variant_DD_A6_dd_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    166,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDA6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise AND on A with the value pointed to by IX plus <var>D</var>.",
    "instruction": "and (ix+d)"
  }
};

// xor a,ixh
const variant_DD_AC: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    172
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDAC",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IXH.",
    "instruction": "xor ixh"
  }
};

// xor ixh
const variant_DD_AC_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    172
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDAC",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IXH.",
    "instruction": "xor ixh"
  }
};

// xor a,ixl
const variant_DD_AD: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    173
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDAD",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IXL.",
    "instruction": "xor ixl"
  }
};

// xor ixl
const variant_DD_AD_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    173
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDAD",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IXL.",
    "instruction": "xor ixl"
  }
};

// xor a,(ix+dd)
const variant_DD_AE_dd: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    174,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDAE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise XOR on A with the value pointed to by IX plus <var>D</var>.",
    "instruction": "xor (ix+d)"
  }
};

// xor (ix+dd)
const variant_DD_AE_dd_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    174,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDAE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise XOR on A with the value pointed to by IX plus <var>D</var>.",
    "instruction": "xor (ix+d)"
  }
};

// or a,ixh
const variant_DD_B4: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    180
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDB4",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IXH.",
    "instruction": "or ixh"
  }
};

// or ixh
const variant_DD_B4_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    180
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDB4",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IXH.",
    "instruction": "or ixh"
  }
};

// or a,ixl
const variant_DD_B5: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    181
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDB5",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IXL.",
    "instruction": "or ixl"
  }
};

// or ixl
const variant_DD_B5_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    181
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDB5",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IXL.",
    "instruction": "or ixl"
  }
};

// or a,(ix+dd)
const variant_DD_B6_dd: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    182,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDB6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise OR on A with the value pointed to by IX plus <var>D</var>.",
    "instruction": "or (ix+d)"
  }
};

// or (ix+dd)
const variant_DD_B6_dd_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    182,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDB6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise OR on A with the value pointed to by IX plus <var>D</var>.",
    "instruction": "or (ix+d)"
  }
};

// cp a,ixh
const variant_DD_BC: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "ixh"
  ],
  "tokens": [
    "a",
    ",",
    "ixh"
  ],
  "opcodes": [
    221,
    188
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDBC",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXH from A and affects flags according to the result. A is not modified.",
    "instruction": "cp ixh"
  }
};

// cp ixh
const variant_DD_BC_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "ixh"
  ],
  "tokens": [
    "ixh"
  ],
  "opcodes": [
    221,
    188
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDBC",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXH from A and affects flags according to the result. A is not modified.",
    "instruction": "cp ixh"
  }
};

// cp a,ixl
const variant_DD_BD: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "ixl"
  ],
  "tokens": [
    "a",
    ",",
    "ixl"
  ],
  "opcodes": [
    221,
    189
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDBD",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXL from A and affects flags according to the result. A is not modified.",
    "instruction": "cp ixl"
  }
};

// cp ixl
const variant_DD_BD_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "ixl"
  ],
  "tokens": [
    "ixl"
  ],
  "opcodes": [
    221,
    189
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDBD",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IXL from A and affects flags according to the result. A is not modified.",
    "instruction": "cp ixl"
  }
};

// cp a,(ix+dd)
const variant_DD_BE_dd: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    190,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDBE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IX plus <var>D</var> from A and affects flags according to the result. A is not modified.",
    "instruction": "cp (ix+d)"
  }
};

// cp (ix+dd)
const variant_DD_BE_dd_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    190,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDBE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IX plus <var>D</var> from A and affects flags according to the result. A is not modified.",
    "instruction": "cp (ix+d)"
  }
};

// ld b,rlc(ix+dd)
const variant_DD_CB_dd_00: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    0
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB00",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in B.",
    "instruction": "rlc (ix+d),b"
  }
};

// ld c,rlc(ix+dd)
const variant_DD_CB_dd_01: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    1
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB01",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in C.",
    "instruction": "rlc (ix+d),c"
  }
};

// ld d,rlc(ix+dd)
const variant_DD_CB_dd_02: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    2
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB02",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in D.",
    "instruction": "rlc (ix+d),d"
  }
};

// ld e,rlc(ix+dd)
const variant_DD_CB_dd_03: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    3
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB03",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in E.",
    "instruction": "rlc (ix+d),e"
  }
};

// ld h,rlc(ix+dd)
const variant_DD_CB_dd_04: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    4
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB04",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in H.",
    "instruction": "rlc (ix+d),h"
  }
};

// ld l,rlc(ix+dd)
const variant_DD_CB_dd_05: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    5
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB05",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in L.",
    "instruction": "rlc (ix+d),l"
  }
};

// rlc (ix+dd)
const variant_DD_CB_dd_06: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    6
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB06",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc (ix+d)"
  }
};

// ld a,rlc(ix+dd)
const variant_DD_CB_dd_07: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rlc (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    7
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB07",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in A.",
    "instruction": "rlc (ix+d),a"
  }
};

// ld rlc(ix+dd)
const variant_DD_CB_dd_07_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rlc (ix+dd)"
  ],
  "tokens": [
    "rlc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    7
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB07",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in A.",
    "instruction": "rlc (ix+d),a"
  }
};

// ld b,rrc(ix+dd)
const variant_DD_CB_dd_08: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    8
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB08",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in B.",
    "instruction": "rrc (ix+d),b"
  }
};

// ld c,rrc(ix+dd)
const variant_DD_CB_dd_09: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    9
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB09",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in C.",
    "instruction": "rrc (ix+d),c"
  }
};

// ld d,rrc(ix+dd)
const variant_DD_CB_dd_0A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    10
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB0A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in D.",
    "instruction": "rrc (ix+d),d"
  }
};

// ld e,rrc(ix+dd)
const variant_DD_CB_dd_0B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    11
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB0B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in E.",
    "instruction": "rrc (ix+d),e"
  }
};

// ld h,rrc(ix+dd)
const variant_DD_CB_dd_0C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    12
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB0C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in H.",
    "instruction": "rrc (ix+d),h"
  }
};

// ld l,rrc(ix+dd)
const variant_DD_CB_dd_0D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    13
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB0D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in L.",
    "instruction": "rrc (ix+d),l"
  }
};

// rrc (ix+dd)
const variant_DD_CB_dd_0E: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    14
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB0E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc (ix+d)"
  }
};

// ld a,rrc(ix+dd)
const variant_DD_CB_dd_0F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rrc (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    15
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB0F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in A.",
    "instruction": "rrc (ix+d),a"
  }
};

// ld rrc(ix+dd)
const variant_DD_CB_dd_0F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rrc (ix+dd)"
  ],
  "tokens": [
    "rrc",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    15
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB0F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in A.",
    "instruction": "rrc (ix+d),a"
  }
};

// ld b,rl(ix+dd)
const variant_DD_CB_dd_10: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rl (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    16
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB10",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in B.",
    "instruction": "rl (ix+d),b"
  }
};

// ld c,rl(ix+dd)
const variant_DD_CB_dd_11: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rl (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    17
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB11",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in C.",
    "instruction": "rl (ix+d),c"
  }
};

// ld d,rl(ix+dd)
const variant_DD_CB_dd_12: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rl (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    18
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB12",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in D.",
    "instruction": "rl (ix+d),d"
  }
};

// ld e,rl(ix+dd)
const variant_DD_CB_dd_13: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rl (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    19
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB13",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in E.",
    "instruction": "rl (ix+d),e"
  }
};

// ld h,rl(ix+dd)
const variant_DD_CB_dd_14: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rl (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    20
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB14",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in H.",
    "instruction": "rl (ix+d),h"
  }
};

// ld l,rl(ix+dd)
const variant_DD_CB_dd_15: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rl (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    21
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB15",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in L.",
    "instruction": "rl (ix+d),l"
  }
};

// rl (ix+dd)
const variant_DD_CB_dd_16: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    22
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB16",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl (ix+d)"
  }
};

// ld a,rl(ix+dd)
const variant_DD_CB_dd_17: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rl (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    23
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB17",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in A.",
    "instruction": "rl (ix+d),a"
  }
};

// ld rl(ix+dd)
const variant_DD_CB_dd_17_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rl (ix+dd)"
  ],
  "tokens": [
    "rl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    23
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB17",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in A.",
    "instruction": "rl (ix+d),a"
  }
};

// ld b,rr(ix+dd)
const variant_DD_CB_dd_18: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rr (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    24
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB18",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in B.",
    "instruction": "rr (ix+d),b"
  }
};

// ld c,rr(ix+dd)
const variant_DD_CB_dd_19: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rr (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    25
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB19",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in C.",
    "instruction": "rr (ix+d),c"
  }
};

// ld d,rr(ix+dd)
const variant_DD_CB_dd_1A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rr (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    26
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB1A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in D.",
    "instruction": "rr (ix+d),d"
  }
};

// ld e,rr(ix+dd)
const variant_DD_CB_dd_1B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rr (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    27
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB1B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in E.",
    "instruction": "rr (ix+d),e"
  }
};

// ld h,rr(ix+dd)
const variant_DD_CB_dd_1C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rr (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    28
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB1C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in H.",
    "instruction": "rr (ix+d),h"
  }
};

// ld l,rr(ix+dd)
const variant_DD_CB_dd_1D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rr (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    29
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB1D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in L.",
    "instruction": "rr (ix+d),l"
  }
};

// rr (ix+dd)
const variant_DD_CB_dd_1E: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    30
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB1E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr (ix+d)"
  }
};

// ld a,rr(ix+dd)
const variant_DD_CB_dd_1F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rr (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    31
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB1F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in A.",
    "instruction": "rr (ix+d),a"
  }
};

// ld rr(ix+dd)
const variant_DD_CB_dd_1F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rr (ix+dd)"
  ],
  "tokens": [
    "rr",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    31
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB1F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in A.",
    "instruction": "rr (ix+d),a"
  }
};

// ld b,sla(ix+dd)
const variant_DD_CB_dd_20: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "sla (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    32
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB20",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in B.",
    "instruction": "sla (ix+d),b"
  }
};

// ld c,sla(ix+dd)
const variant_DD_CB_dd_21: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "sla (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    33
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB21",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in C.",
    "instruction": "sla (ix+d),c"
  }
};

// ld d,sla(ix+dd)
const variant_DD_CB_dd_22: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "sla (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    34
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB22",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in D.",
    "instruction": "sla (ix+d),d"
  }
};

// ld e,sla(ix+dd)
const variant_DD_CB_dd_23: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "sla (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    35
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB23",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in E.",
    "instruction": "sla (ix+d),e"
  }
};

// ld h,sla(ix+dd)
const variant_DD_CB_dd_24: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "sla (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    36
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB24",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in H.",
    "instruction": "sla (ix+d),h"
  }
};

// ld l,sla(ix+dd)
const variant_DD_CB_dd_25: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "sla (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    37
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB25",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in L.",
    "instruction": "sla (ix+d),l"
  }
};

// sla (ix+dd)
const variant_DD_CB_dd_26: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    38
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB26",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla (ix+d)"
  }
};

// ld a,sla(ix+dd)
const variant_DD_CB_dd_27: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "sla (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    39
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB27",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in A.",
    "instruction": "sla (ix+d),a"
  }
};

// ld sla(ix+dd)
const variant_DD_CB_dd_27_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sla (ix+dd)"
  ],
  "tokens": [
    "sla",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    39
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB27",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in A.",
    "instruction": "sla (ix+d),a"
  }
};

// ld b,sra(ix+dd)
const variant_DD_CB_dd_28: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "sra (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    40
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB28",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in B.",
    "instruction": "sra (ix+d),b"
  }
};

// ld c,sra(ix+dd)
const variant_DD_CB_dd_29: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "sra (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    41
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB29",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in C.",
    "instruction": "sra (ix+d),c"
  }
};

// ld d,sra(ix+dd)
const variant_DD_CB_dd_2A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "sra (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    42
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB2A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in D.",
    "instruction": "sra (ix+d),d"
  }
};

// ld e,sra(ix+dd)
const variant_DD_CB_dd_2B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "sra (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    43
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB2B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in E.",
    "instruction": "sra (ix+d),e"
  }
};

// ld h,sra(ix+dd)
const variant_DD_CB_dd_2C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "sra (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    44
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB2C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in H.",
    "instruction": "sra (ix+d),h"
  }
};

// ld l,sra(ix+dd)
const variant_DD_CB_dd_2D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "sra (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    45
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB2D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in L.",
    "instruction": "sra (ix+d),l"
  }
};

// sra (ix+dd)
const variant_DD_CB_dd_2E: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    46
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB2E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra (ix+d)"
  }
};

// ld a,sra(ix+dd)
const variant_DD_CB_dd_2F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "sra (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    47
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB2F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in A.",
    "instruction": "sra (ix+d),a"
  }
};

// ld sra(ix+dd)
const variant_DD_CB_dd_2F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sra (ix+dd)"
  ],
  "tokens": [
    "sra",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    47
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB2F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in A.",
    "instruction": "sra (ix+d),a"
  }
};

// ld b,sll(ix+dd)
const variant_DD_CB_dd_30: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "sll (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    48
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB30",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in B.",
    "instruction": "sll (ix+d),b"
  }
};

// ld c,sll(ix+dd)
const variant_DD_CB_dd_31: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "sll (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    49
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB31",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in C.",
    "instruction": "sll (ix+d),c"
  }
};

// ld d,sll(ix+dd)
const variant_DD_CB_dd_32: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "sll (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    50
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB32",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in D.",
    "instruction": "sll (ix+d),d"
  }
};

// ld e,sll(ix+dd)
const variant_DD_CB_dd_33: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "sll (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    51
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB33",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in E.",
    "instruction": "sll (ix+d),e"
  }
};

// ld h,sll(ix+dd)
const variant_DD_CB_dd_34: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "sll (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    52
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB34",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in H.",
    "instruction": "sll (ix+d),h"
  }
};

// ld l,sll(ix+dd)
const variant_DD_CB_dd_35: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "sll (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    53
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB35",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in L.",
    "instruction": "sll (ix+d),l"
  }
};

// sll (ix+dd)
const variant_DD_CB_dd_36: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    54
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB36",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll (ix+d)"
  }
};

// ld a,sll(ix+dd)
const variant_DD_CB_dd_37: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "sll (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    55
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB37",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in A.",
    "instruction": "sll (ix+d),a"
  }
};

// ld sll(ix+dd)
const variant_DD_CB_dd_37_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sll (ix+dd)"
  ],
  "tokens": [
    "sll",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    55
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB37",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in A.",
    "instruction": "sll (ix+d),a"
  }
};

// ld b,srl(ix+dd)
const variant_DD_CB_dd_38: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "srl (ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    56
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB38",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in B.",
    "instruction": "srl (ix+d),b"
  }
};

// ld c,srl(ix+dd)
const variant_DD_CB_dd_39: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "srl (ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    57
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB39",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in C.",
    "instruction": "srl (ix+d),c"
  }
};

// ld d,srl(ix+dd)
const variant_DD_CB_dd_3A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "srl (ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    58
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB3A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in D.",
    "instruction": "srl (ix+d),d"
  }
};

// ld e,srl(ix+dd)
const variant_DD_CB_dd_3B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "srl (ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    59
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB3B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in E.",
    "instruction": "srl (ix+d),e"
  }
};

// ld h,srl(ix+dd)
const variant_DD_CB_dd_3C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "srl (ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    60
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB3C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in H.",
    "instruction": "srl (ix+d),h"
  }
};

// ld l,srl(ix+dd)
const variant_DD_CB_dd_3D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "srl (ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    61
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB3D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in L.",
    "instruction": "srl (ix+d),l"
  }
};

// srl (ix+dd)
const variant_DD_CB_dd_3E: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "(ix+dd)"
  ],
  "tokens": [
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    62
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB3E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl (ix+d)"
  }
};

// ld a,srl(ix+dd)
const variant_DD_CB_dd_3F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "srl (ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    63
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB3F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in A.",
    "instruction": "srl (ix+d),a"
  }
};

// ld srl(ix+dd)
const variant_DD_CB_dd_3F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "srl (ix+dd)"
  ],
  "tokens": [
    "srl",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    63
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB3F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IX plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in A.",
    "instruction": "srl (ix+d),a"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_46: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    70
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB46",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_4E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    78
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB4E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_56: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    86
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB56",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_5E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    94
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB5E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_66: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    102
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB66",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_6E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    110
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB6E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_76: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    118
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB76",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_7E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    126
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB7E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// ld b,res 0,(ix+dd)
const variant_DD_CB_dd_80: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    128
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB80",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 0,(ix+d),b"
  }
};

// ld c,res 0,(ix+dd)
const variant_DD_CB_dd_81: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    129
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB81",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 0,(ix+d),c"
  }
};

// ld d,res 0,(ix+dd)
const variant_DD_CB_dd_82: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    130
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB82",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 0,(ix+d),d"
  }
};

// ld e,res 0,(ix+dd)
const variant_DD_CB_dd_83: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    131
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB83",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 0,(ix+d),e"
  }
};

// ld h,res 0,(ix+dd)
const variant_DD_CB_dd_84: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    132
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB84",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 0,(ix+d),h"
  }
};

// ld l,res 0,(ix+dd)
const variant_DD_CB_dd_85: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    133
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB85",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 0,(ix+d),l"
  }
};

// res 0,(ix+dd)
const variant_DD_CB_dd_86: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    134
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB86",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 0,(ix+d)"
  }
};

// ld a,res 0,(ix+dd)
const variant_DD_CB_dd_87: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    135
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB87",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 0,(ix+d),a"
  }
};

// ld res 0,(ix+dd)
const variant_DD_CB_dd_87_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 0",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    135
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB87",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 0,(ix+d),a"
  }
};

// ld b,res 1,(ix+dd)
const variant_DD_CB_dd_88: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    136
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB88",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 1,(ix+d),b"
  }
};

// ld c,res 1,(ix+dd)
const variant_DD_CB_dd_89: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    137
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB89",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 1,(ix+d),c"
  }
};

// ld d,res 1,(ix+dd)
const variant_DD_CB_dd_8A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    138
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB8A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 1,(ix+d),d"
  }
};

// ld e,res 1,(ix+dd)
const variant_DD_CB_dd_8B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    139
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB8B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 1,(ix+d),e"
  }
};

// ld h,res 1,(ix+dd)
const variant_DD_CB_dd_8C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    140
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB8C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 1,(ix+d),h"
  }
};

// ld l,res 1,(ix+dd)
const variant_DD_CB_dd_8D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    141
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB8D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 1,(ix+d),l"
  }
};

// res 1,(ix+dd)
const variant_DD_CB_dd_8E: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    142
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB8E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 1,(ix+d)"
  }
};

// ld a,res 1,(ix+dd)
const variant_DD_CB_dd_8F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    143
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB8F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 1,(ix+d),a"
  }
};

// ld res 1,(ix+dd)
const variant_DD_CB_dd_8F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 1",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    143
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB8F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 1,(ix+d),a"
  }
};

// ld b,res 2,(ix+dd)
const variant_DD_CB_dd_90: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    144
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB90",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 2,(ix+d),b"
  }
};

// ld c,res 2,(ix+dd)
const variant_DD_CB_dd_91: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    145
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB91",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 2,(ix+d),c"
  }
};

// ld d,res 2,(ix+dd)
const variant_DD_CB_dd_92: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    146
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB92",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 2,(ix+d),d"
  }
};

// ld e,res 2,(ix+dd)
const variant_DD_CB_dd_93: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    147
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB93",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 2,(ix+d),e"
  }
};

// ld h,res 2,(ix+dd)
const variant_DD_CB_dd_94: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    148
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB94",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 2,(ix+d),h"
  }
};

// ld l,res 2,(ix+dd)
const variant_DD_CB_dd_95: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    149
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB95",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 2,(ix+d),l"
  }
};

// res 2,(ix+dd)
const variant_DD_CB_dd_96: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    150
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB96",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 2,(ix+d)"
  }
};

// ld a,res 2,(ix+dd)
const variant_DD_CB_dd_97: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    151
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB97",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 2,(ix+d),a"
  }
};

// ld res 2,(ix+dd)
const variant_DD_CB_dd_97_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 2",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    151
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB97",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 2,(ix+d),a"
  }
};

// ld b,res 3,(ix+dd)
const variant_DD_CB_dd_98: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    152
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB98",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 3,(ix+d),b"
  }
};

// ld c,res 3,(ix+dd)
const variant_DD_CB_dd_99: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    153
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB99",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 3,(ix+d),c"
  }
};

// ld d,res 3,(ix+dd)
const variant_DD_CB_dd_9A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    154
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB9A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 3,(ix+d),d"
  }
};

// ld e,res 3,(ix+dd)
const variant_DD_CB_dd_9B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    155
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB9B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 3,(ix+d),e"
  }
};

// ld h,res 3,(ix+dd)
const variant_DD_CB_dd_9C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    156
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB9C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 3,(ix+d),h"
  }
};

// ld l,res 3,(ix+dd)
const variant_DD_CB_dd_9D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    157
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB9D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 3,(ix+d),l"
  }
};

// res 3,(ix+dd)
const variant_DD_CB_dd_9E: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    158
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB9E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 3,(ix+d)"
  }
};

// ld a,res 3,(ix+dd)
const variant_DD_CB_dd_9F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    159
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCB9F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 3,(ix+d),a"
  }
};

// ld res 3,(ix+dd)
const variant_DD_CB_dd_9F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 3",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    159
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCB9F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 3,(ix+d),a"
  }
};

// ld b,res 4,(ix+dd)
const variant_DD_CB_dd_A0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    160
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 4,(ix+d),b"
  }
};

// ld c,res 4,(ix+dd)
const variant_DD_CB_dd_A1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    161
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 4,(ix+d),c"
  }
};

// ld d,res 4,(ix+dd)
const variant_DD_CB_dd_A2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    162
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 4,(ix+d),d"
  }
};

// ld e,res 4,(ix+dd)
const variant_DD_CB_dd_A3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    163
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 4,(ix+d),e"
  }
};

// ld h,res 4,(ix+dd)
const variant_DD_CB_dd_A4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    164
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 4,(ix+d),h"
  }
};

// ld l,res 4,(ix+dd)
const variant_DD_CB_dd_A5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    165
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 4,(ix+d),l"
  }
};

// res 4,(ix+dd)
const variant_DD_CB_dd_A6: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    166
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 4,(ix+d)"
  }
};

// ld a,res 4,(ix+dd)
const variant_DD_CB_dd_A7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    167
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 4,(ix+d),a"
  }
};

// ld res 4,(ix+dd)
const variant_DD_CB_dd_A7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 4",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    167
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBA7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 4,(ix+d),a"
  }
};

// ld b,res 5,(ix+dd)
const variant_DD_CB_dd_A8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    168
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 5,(ix+d),b"
  }
};

// ld c,res 5,(ix+dd)
const variant_DD_CB_dd_A9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    169
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBA9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 5,(ix+d),c"
  }
};

// ld d,res 5,(ix+dd)
const variant_DD_CB_dd_AA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    170
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBAA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 5,(ix+d),d"
  }
};

// ld e,res 5,(ix+dd)
const variant_DD_CB_dd_AB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    171
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBAB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 5,(ix+d),e"
  }
};

// ld h,res 5,(ix+dd)
const variant_DD_CB_dd_AC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    172
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBAC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 5,(ix+d),h"
  }
};

// ld l,res 5,(ix+dd)
const variant_DD_CB_dd_AD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    173
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBAD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 5,(ix+d),l"
  }
};

// res 5,(ix+dd)
const variant_DD_CB_dd_AE: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    174
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBAE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 5,(ix+d)"
  }
};

// ld a,res 5,(ix+dd)
const variant_DD_CB_dd_AF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    175
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBAF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 5,(ix+d),a"
  }
};

// ld res 5,(ix+dd)
const variant_DD_CB_dd_AF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 5",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    175
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBAF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 5,(ix+d),a"
  }
};

// ld b,res 6,(ix+dd)
const variant_DD_CB_dd_B0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    176
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 6,(ix+d),b"
  }
};

// ld c,res 6,(ix+dd)
const variant_DD_CB_dd_B1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    177
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 6,(ix+d),c"
  }
};

// ld d,res 6,(ix+dd)
const variant_DD_CB_dd_B2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    178
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 6,(ix+d),d"
  }
};

// ld e,res 6,(ix+dd)
const variant_DD_CB_dd_B3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    179
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 6,(ix+d),e"
  }
};

// ld h,res 6,(ix+dd)
const variant_DD_CB_dd_B4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    180
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 6,(ix+d),h"
  }
};

// ld l,res 6,(ix+dd)
const variant_DD_CB_dd_B5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    181
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 6,(ix+d),l"
  }
};

// res 6,(ix+dd)
const variant_DD_CB_dd_B6: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    182
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 6,(ix+d)"
  }
};

// ld a,res 6,(ix+dd)
const variant_DD_CB_dd_B7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    183
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 6,(ix+d),a"
  }
};

// ld res 6,(ix+dd)
const variant_DD_CB_dd_B7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 6",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    183
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBB7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 6,(ix+d),a"
  }
};

// ld b,res 7,(ix+dd)
const variant_DD_CB_dd_B8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    184
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 7,(ix+d),b"
  }
};

// ld c,res 7,(ix+dd)
const variant_DD_CB_dd_B9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    185
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBB9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 7,(ix+d),c"
  }
};

// ld d,res 7,(ix+dd)
const variant_DD_CB_dd_BA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    186
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBBA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 7,(ix+d),d"
  }
};

// ld e,res 7,(ix+dd)
const variant_DD_CB_dd_BB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    187
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBBB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 7,(ix+d),e"
  }
};

// ld h,res 7,(ix+dd)
const variant_DD_CB_dd_BC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    188
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBBC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 7,(ix+d),h"
  }
};

// ld l,res 7,(ix+dd)
const variant_DD_CB_dd_BD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    189
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBBD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 7,(ix+d),l"
  }
};

// res 7,(ix+dd)
const variant_DD_CB_dd_BE: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    190
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBBE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "res 7,(ix+d)"
  }
};

// ld a,res 7,(ix+dd)
const variant_DD_CB_dd_BF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    191
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBBF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 7,(ix+d),a"
  }
};

// ld res 7,(ix+dd)
const variant_DD_CB_dd_BF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 7",
    "(ix+dd)"
  ],
  "tokens": [
    "res",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    191
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBBF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 7,(ix+d),a"
  }
};

// ld b,set 0,(ix+dd)
const variant_DD_CB_dd_C0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    192
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 0,(ix+d),b"
  }
};

// ld c,set 0,(ix+dd)
const variant_DD_CB_dd_C1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    193
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 0,(ix+d),c"
  }
};

// ld d,set 0,(ix+dd)
const variant_DD_CB_dd_C2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    194
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 0,(ix+d),d"
  }
};

// ld e,set 0,(ix+dd)
const variant_DD_CB_dd_C3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    195
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 0,(ix+d),e"
  }
};

// ld h,set 0,(ix+dd)
const variant_DD_CB_dd_C4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    196
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 0,(ix+d),h"
  }
};

// ld l,set 0,(ix+dd)
const variant_DD_CB_dd_C5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    197
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 0,(ix+d),l"
  }
};

// set 0,(ix+dd)
const variant_DD_CB_dd_C6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    198
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 0,(ix+d)"
  }
};

// ld a,set 0,(ix+dd)
const variant_DD_CB_dd_C7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    199
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 0,(ix+d),a"
  }
};

// ld set 0,(ix+dd)
const variant_DD_CB_dd_C7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 0",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    199
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBC7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 0,(ix+d),a"
  }
};

// ld b,set 1,(ix+dd)
const variant_DD_CB_dd_C8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    200
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 1,(ix+d),b"
  }
};

// ld c,set 1,(ix+dd)
const variant_DD_CB_dd_C9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    201
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBC9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 1,(ix+d),c"
  }
};

// ld d,set 1,(ix+dd)
const variant_DD_CB_dd_CA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    202
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBCA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 1,(ix+d),d"
  }
};

// ld e,set 1,(ix+dd)
const variant_DD_CB_dd_CB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    203
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBCB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 1,(ix+d),e"
  }
};

// ld h,set 1,(ix+dd)
const variant_DD_CB_dd_CC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    204
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBCC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 1,(ix+d),h"
  }
};

// ld l,set 1,(ix+dd)
const variant_DD_CB_dd_CD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    205
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBCD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 1,(ix+d),l"
  }
};

// set 1,(ix+dd)
const variant_DD_CB_dd_CE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    206
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBCE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 1,(ix+d)"
  }
};

// ld a,set 1,(ix+dd)
const variant_DD_CB_dd_CF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    207
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBCF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 1,(ix+d),a"
  }
};

// ld set 1,(ix+dd)
const variant_DD_CB_dd_CF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 1",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    207
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBCF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 1,(ix+d),a"
  }
};

// ld b,set 2,(ix+dd)
const variant_DD_CB_dd_D0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    208
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 2,(ix+d),b"
  }
};

// ld c,set 2,(ix+dd)
const variant_DD_CB_dd_D1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    209
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 2,(ix+d),c"
  }
};

// ld d,set 2,(ix+dd)
const variant_DD_CB_dd_D2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    210
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 2,(ix+d),d"
  }
};

// ld e,set 2,(ix+dd)
const variant_DD_CB_dd_D3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    211
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 2,(ix+d),e"
  }
};

// ld h,set 2,(ix+dd)
const variant_DD_CB_dd_D4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    212
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 2,(ix+d),h"
  }
};

// ld l,set 2,(ix+dd)
const variant_DD_CB_dd_D5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    213
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 2,(ix+d),l"
  }
};

// set 2,(ix+dd)
const variant_DD_CB_dd_D6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    214
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 2,(ix+d)"
  }
};

// ld a,set 2,(ix+dd)
const variant_DD_CB_dd_D7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    215
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 2,(ix+d),a"
  }
};

// ld set 2,(ix+dd)
const variant_DD_CB_dd_D7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 2",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    215
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBD7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 2,(ix+d),a"
  }
};

// ld b,set 3,(ix+dd)
const variant_DD_CB_dd_D8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    216
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 3,(ix+d),b"
  }
};

// ld c,set 3,(ix+dd)
const variant_DD_CB_dd_D9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    217
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBD9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 3,(ix+d),c"
  }
};

// ld d,set 3,(ix+dd)
const variant_DD_CB_dd_DA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    218
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBDA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 3,(ix+d),d"
  }
};

// ld e,set 3,(ix+dd)
const variant_DD_CB_dd_DB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    219
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBDB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 3,(ix+d),e"
  }
};

// ld h,set 3,(ix+dd)
const variant_DD_CB_dd_DC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    220
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBDC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 3,(ix+d),h"
  }
};

// ld l,set 3,(ix+dd)
const variant_DD_CB_dd_DD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    221
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBDD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 3,(ix+d),l"
  }
};

// set 3,(ix+dd)
const variant_DD_CB_dd_DE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    222
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBDE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 3,(ix+d)"
  }
};

// ld a,set 3,(ix+dd)
const variant_DD_CB_dd_DF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    223
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBDF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 3,(ix+d),a"
  }
};

// ld set 3,(ix+dd)
const variant_DD_CB_dd_DF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 3",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    223
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBDF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 3,(ix+d),a"
  }
};

// ld b,set 4,(ix+dd)
const variant_DD_CB_dd_E0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    224
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 4,(ix+d),b"
  }
};

// ld c,set 4,(ix+dd)
const variant_DD_CB_dd_E1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    225
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 4,(ix+d),c"
  }
};

// ld d,set 4,(ix+dd)
const variant_DD_CB_dd_E2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    226
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 4,(ix+d),d"
  }
};

// ld e,set 4,(ix+dd)
const variant_DD_CB_dd_E3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    227
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 4,(ix+d),e"
  }
};

// ld h,set 4,(ix+dd)
const variant_DD_CB_dd_E4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    228
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 4,(ix+d),h"
  }
};

// ld l,set 4,(ix+dd)
const variant_DD_CB_dd_E5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    229
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 4,(ix+d),l"
  }
};

// set 4,(ix+dd)
const variant_DD_CB_dd_E6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    230
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 4,(ix+d)"
  }
};

// ld a,set 4,(ix+dd)
const variant_DD_CB_dd_E7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    231
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 4,(ix+d),a"
  }
};

// ld set 4,(ix+dd)
const variant_DD_CB_dd_E7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 4",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    231
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBE7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 4,(ix+d),a"
  }
};

// ld b,set 5,(ix+dd)
const variant_DD_CB_dd_E8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    232
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 5,(ix+d),b"
  }
};

// ld c,set 5,(ix+dd)
const variant_DD_CB_dd_E9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    233
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBE9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 5,(ix+d),c"
  }
};

// ld d,set 5,(ix+dd)
const variant_DD_CB_dd_EA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    234
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBEA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 5,(ix+d),d"
  }
};

// ld e,set 5,(ix+dd)
const variant_DD_CB_dd_EB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    235
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBEB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 5,(ix+d),e"
  }
};

// ld h,set 5,(ix+dd)
const variant_DD_CB_dd_EC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    236
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBEC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 5,(ix+d),h"
  }
};

// ld l,set 5,(ix+dd)
const variant_DD_CB_dd_ED: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    237
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBED",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 5,(ix+d),l"
  }
};

// set 5,(ix+dd)
const variant_DD_CB_dd_EE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    238
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBEE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 5,(ix+d)"
  }
};

// ld a,set 5,(ix+dd)
const variant_DD_CB_dd_EF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    239
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBEF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 5,(ix+d),a"
  }
};

// ld set 5,(ix+dd)
const variant_DD_CB_dd_EF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 5",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    239
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBEF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 5,(ix+d),a"
  }
};

// ld b,set 6,(ix+dd)
const variant_DD_CB_dd_F0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    240
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 6,(ix+d),b"
  }
};

// ld c,set 6,(ix+dd)
const variant_DD_CB_dd_F1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    241
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 6,(ix+d),c"
  }
};

// ld d,set 6,(ix+dd)
const variant_DD_CB_dd_F2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    242
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 6,(ix+d),d"
  }
};

// ld e,set 6,(ix+dd)
const variant_DD_CB_dd_F3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    243
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 6,(ix+d),e"
  }
};

// ld h,set 6,(ix+dd)
const variant_DD_CB_dd_F4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    244
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 6,(ix+d),h"
  }
};

// ld l,set 6,(ix+dd)
const variant_DD_CB_dd_F5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    245
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 6,(ix+d),l"
  }
};

// set 6,(ix+dd)
const variant_DD_CB_dd_F6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    246
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 6,(ix+d)"
  }
};

// ld a,set 6,(ix+dd)
const variant_DD_CB_dd_F7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    247
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 6,(ix+d),a"
  }
};

// ld set 6,(ix+dd)
const variant_DD_CB_dd_F7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 6",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    247
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBF7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 6,(ix+d),a"
  }
};

// ld b,set 7,(ix+dd)
const variant_DD_CB_dd_F8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    248
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 7,(ix+d),b"
  }
};

// ld c,set 7,(ix+dd)
const variant_DD_CB_dd_F9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    249
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBF9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 7,(ix+d),c"
  }
};

// ld d,set 7,(ix+dd)
const variant_DD_CB_dd_FA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    250
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBFA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 7,(ix+d),d"
  }
};

// ld e,set 7,(ix+dd)
const variant_DD_CB_dd_FB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    251
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBFB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 7,(ix+d),e"
  }
};

// ld h,set 7,(ix+dd)
const variant_DD_CB_dd_FC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    252
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBFC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 7,(ix+d),h"
  }
};

// ld l,set 7,(ix+dd)
const variant_DD_CB_dd_FD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    253
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBFD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 7,(ix+d),l"
  }
};

// set 7,(ix+dd)
const variant_DD_CB_dd_FE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    254
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBFE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "set 7,(ix+d)"
  }
};

// ld a,set 7,(ix+dd)
const variant_DD_CB_dd_FF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    255
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDCBFF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 7,(ix+d),a"
  }
};

// ld set 7,(ix+dd)
const variant_DD_CB_dd_FF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 7",
    "(ix+dd)"
  ],
  "tokens": [
    "set",
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    255
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDCBFF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IX plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 7,(ix+d),a"
  }
};

// pop ix
const variant_DD_E1: OpcodeVariant = {
  "mnemonic": "pop",
  "params": [
    "ix"
  ],
  "tokens": [
    "ix"
  ],
  "opcodes": [
    221,
    225
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDE1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "The memory location pointed to by SP is stored into IXL and SP is incremented. The memory location pointed to by SP is stored into IXH and SP is incremented again.",
    "instruction": "pop ix"
  }
};

// ex (sp),ix
const variant_DD_E3: OpcodeVariant = {
  "mnemonic": "ex",
  "params": [
    "(sp)",
    "ix"
  ],
  "tokens": [
    "(",
    "sp",
    ")",
    ",",
    "ix"
  ],
  "opcodes": [
    221,
    227
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDE3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Exchanges (SP) with IXL, and (SP+1) with IXH.",
    "instruction": "ex (sp),ix"
  }
};

// push ix
const variant_DD_E5: OpcodeVariant = {
  "mnemonic": "push",
  "params": [
    "ix"
  ],
  "tokens": [
    "ix"
  ],
  "opcodes": [
    221,
    229
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDE5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "SP is decremented and IXH is stored into the memory location pointed to by SP. SP is decremented again and IXL is stored into the memory location pointed to by SP.",
    "instruction": "push ix"
  }
};

// jp ix
const variant_DD_E9: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "ix"
  ],
  "tokens": [
    "ix"
  ],
  "opcodes": [
    221,
    233
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDE9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Loads the value of IX into PC.",
    "instruction": "jp (ix)"
  }
};

// jp (ix)
const variant_DD_E9_pseudo: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "(ix)"
  ],
  "tokens": [
    "(",
    "ix",
    ")"
  ],
  "opcodes": [
    221,
    233
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DDE9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Loads the value of IX into PC.",
    "instruction": "jp (ix)"
  }
};

// ld sp,ix
const variant_DD_F9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sp",
    "ix"
  ],
  "tokens": [
    "sp",
    ",",
    "ix"
  ],
  "opcodes": [
    221,
    249
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DDF9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads the value of IX into SP.",
    "instruction": "ld sp,ix"
  }
};

// sbc a,nn
const variant_DE_nn: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    222,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts <var>n</var> and the carry flag from A.",
    "instruction": "sbc a,n"
  }
};

// sbc nn
const variant_DE_nn_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    222,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "DE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts <var>n</var> and the carry flag from A.",
    "instruction": "sbc a,n"
  }
};

// rst 24
const variant_DF: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "18"
  ],
  "tokens": [
    "24"
  ],
  "opcodes": [
    223
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "DF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 24.",
    "instruction": "rst 18h"
  }
};

// ret po
const variant_E0: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "po"
  ],
  "tokens": [
    "po"
  ],
  "opcodes": [
    224
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the parity/overflow flag is unset, the top stack entry is popped into PC.",
    "instruction": "ret po"
  }
};

// ret nv
const variant_E0_pseudo: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "nv"
  ],
  "tokens": [
    "nv"
  ],
  "opcodes": [
    224
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "E0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the parity/overflow flag is unset, the top stack entry is popped into PC.",
    "instruction": "ret po"
  }
};

// pop hl
const variant_E1: OpcodeVariant = {
  "mnemonic": "pop",
  "params": [
    "hl"
  ],
  "tokens": [
    "hl"
  ],
  "opcodes": [
    225
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "The memory location pointed to by SP is stored into L and SP is incremented. The memory location pointed to by SP is stored into H and SP is incremented again.",
    "instruction": "pop hl"
  }
};

// jp po,nnnn
const variant_E2_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "po",
    "nnnn"
  ],
  "tokens": [
    "po",
    ",",
    "nnnn"
  ],
  "opcodes": [
    226,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is unset, <var>nn</var> is copied to PC.",
    "instruction": "jp po,nn"
  }
};

// jp nv,nnnn
const variant_E2_nnnn_pseudo: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "nv",
    "nnnn"
  ],
  "tokens": [
    "nv",
    ",",
    "nnnn"
  ],
  "opcodes": [
    226,
    "nnnn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "E2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is unset, <var>nn</var> is copied to PC.",
    "instruction": "jp po,nn"
  }
};

// ex (sp),hl
const variant_E3: OpcodeVariant = {
  "mnemonic": "ex",
  "params": [
    "(sp)",
    "hl"
  ],
  "tokens": [
    "(",
    "sp",
    ")",
    ",",
    "hl"
  ],
  "opcodes": [
    227
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Exchanges (SP) with L, and (SP+1) with H.",
    "instruction": "ex (sp),hl"
  }
};

// call po,nnnn
const variant_E4_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "po",
    "nnnn"
  ],
  "tokens": [
    "po",
    ",",
    "nnnn"
  ],
  "opcodes": [
    228,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is unset, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call po,nn"
  }
};

// call nv,nnnn
const variant_E4_nnnn_pseudo: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "nv",
    "nnnn"
  ],
  "tokens": [
    "nv",
    ",",
    "nnnn"
  ],
  "opcodes": [
    228,
    "nnnn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "E4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is unset, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call po,nn"
  }
};

// push hl
const variant_E5: OpcodeVariant = {
  "mnemonic": "push",
  "params": [
    "hl"
  ],
  "tokens": [
    "hl"
  ],
  "opcodes": [
    229
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "SP is decremented and H is stored into the memory location pointed to by SP. SP is decremented again and L is stored into the memory location pointed to by SP.",
    "instruction": "push hl"
  }
};

// and a,nn
const variant_E6_nn: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    230,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise AND on A with <var>n</var>.",
    "instruction": "and n"
  }
};

// and nn
const variant_E6_nn_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    230,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "E6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise AND on A with <var>n</var>.",
    "instruction": "and n"
  }
};

// rst 32
const variant_E7: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "20"
  ],
  "tokens": [
    "32"
  ],
  "opcodes": [
    231
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 32.",
    "instruction": "rst 20h"
  }
};

// ret pe
const variant_E8: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "pe"
  ],
  "tokens": [
    "pe"
  ],
  "opcodes": [
    232
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the parity/overflow flag is set, the top stack entry is popped into PC.",
    "instruction": "ret pe"
  }
};

// ret v
const variant_E8_pseudo: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "v"
  ],
  "tokens": [
    "v"
  ],
  "opcodes": [
    232
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "E8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the parity/overflow flag is set, the top stack entry is popped into PC.",
    "instruction": "ret pe"
  }
};

// jp hl
const variant_E9: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "hl"
  ],
  "tokens": [
    "hl"
  ],
  "opcodes": [
    233
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "E9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Loads the value of HL into PC.",
    "instruction": "jp (hl)"
  }
};

// jp (hl)
const variant_E9_pseudo: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "(hl)"
  ],
  "tokens": [
    "(",
    "hl",
    ")"
  ],
  "opcodes": [
    233
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "E9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Loads the value of HL into PC.",
    "instruction": "jp (hl)"
  }
};

// jp pe,nnnn
const variant_EA_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "pe",
    "nnnn"
  ],
  "tokens": [
    "pe",
    ",",
    "nnnn"
  ],
  "opcodes": [
    234,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is set, <var>nn</var> is copied to PC.",
    "instruction": "jp pe,nn"
  }
};

// jp v,nnnn
const variant_EA_nnnn_pseudo: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "v",
    "nnnn"
  ],
  "tokens": [
    "v",
    ",",
    "nnnn"
  ],
  "opcodes": [
    234,
    "nnnn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "EA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is set, <var>nn</var> is copied to PC.",
    "instruction": "jp pe,nn"
  }
};

// ex de,hl
const variant_EB: OpcodeVariant = {
  "mnemonic": "ex",
  "params": [
    "de",
    "hl"
  ],
  "tokens": [
    "de",
    ",",
    "hl"
  ],
  "opcodes": [
    235
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Exchanges the 16-bit contents of DE and HL.",
    "instruction": "ex de,hl"
  }
};

// call pe,nnnn
const variant_EC_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "pe",
    "nnnn"
  ],
  "tokens": [
    "pe",
    ",",
    "nnnn"
  ],
  "opcodes": [
    236,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is set, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call pe,nn"
  }
};

// call v,nnnn
const variant_EC_nnnn_pseudo: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "v",
    "nnnn"
  ],
  "tokens": [
    "v",
    ",",
    "nnnn"
  ],
  "opcodes": [
    236,
    "nnnn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "EC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the parity/overflow flag is set, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call pe,nn"
  }
};

// in b,(c)
const variant_ED_40: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "b",
    "(c)"
  ],
  "tokens": [
    "b",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    64
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED40",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to B.",
    "instruction": "in b,(c)"
  }
};

// out (c),b
const variant_ED_41: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "b"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "b"
  ],
  "opcodes": [
    237,
    65
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED41",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of B is written to port C.",
    "instruction": "out (c),b"
  }
};

// sbc hl,bc
const variant_ED_42: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "hl",
    "bc"
  ],
  "tokens": [
    "hl",
    ",",
    "bc"
  ],
  "opcodes": [
    237,
    66
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED42",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Subtracts BC and the carry flag from HL.",
    "instruction": "sbc hl,bc"
  }
};

// ld (nnnn),bc
const variant_ED_43_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "bc"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "bc"
  ],
  "opcodes": [
    237,
    67,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED43",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Stores BC into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),bc"
  }
};

// neg 
const variant_ED_44: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    68
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED44",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are negated (two's complement). Operation is the same as subtracting A from zero.",
    "instruction": "neg"
  }
};

// retn 
const variant_ED_45: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    69
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED45",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// im 0
const variant_ED_46: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "0"
  ],
  "tokens": [
    "0"
  ],
  "opcodes": [
    237,
    70
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED46",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 0.",
    "instruction": "im 0"
  }
};

// ld i,a
const variant_ED_47: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "i",
    "a"
  ],
  "tokens": [
    "i",
    ",",
    "a"
  ],
  "opcodes": [
    237,
    71
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED47",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 9,
    "without_jump_clock_count": 9,
    "description": "Stores the value of A into register I.",
    "instruction": "ld i,a"
  }
};

// in c,(c)
const variant_ED_48: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "c",
    "(c)"
  ],
  "tokens": [
    "c",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    72
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED48",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to C.",
    "instruction": "in c,(c)"
  }
};

// out (c),c
const variant_ED_49: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "c"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "c"
  ],
  "opcodes": [
    237,
    73
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED49",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of C is written to port C.",
    "instruction": "out (c),c"
  }
};

// adc hl,bc
const variant_ED_4A: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "hl",
    "bc"
  ],
  "tokens": [
    "hl",
    ",",
    "bc"
  ],
  "opcodes": [
    237,
    74
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED4A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Adds BC and the carry flag to HL.",
    "instruction": "adc hl,bc"
  }
};

// ld bc,(nnnn)
const variant_ED_4B_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "bc",
    "(nnnn)"
  ],
  "tokens": [
    "bc",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    237,
    75,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED4B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Loads the value pointed to by <var>nn</var> into BC.",
    "instruction": "ld bc,(nn)"
  }
};

// reti 
const variant_ED_4D: OpcodeVariant = {
  "mnemonic": "reti",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    77
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED4D",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of A maskable interrupt service routine. The top stack entry is popped into PC, and signals an I/O device that the interrupt has finished, allowing nested interrupts (not A consideration on the TI).",
    "instruction": "reti"
  }
};

// ld r,a
const variant_ED_4F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "r",
    "a"
  ],
  "tokens": [
    "r",
    ",",
    "a"
  ],
  "opcodes": [
    237,
    79
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED4F",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 9,
    "without_jump_clock_count": 9,
    "description": "Stores the value of A into register R.",
    "instruction": "ld r,a"
  }
};

// in d,(c)
const variant_ED_50: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "d",
    "(c)"
  ],
  "tokens": [
    "d",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    80
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED50",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to D.",
    "instruction": "in d,(c)"
  }
};

// out (c),d
const variant_ED_51: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "d"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "d"
  ],
  "opcodes": [
    237,
    81
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED51",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of D is written to port C.",
    "instruction": "out (c),d"
  }
};

// sbc hl,de
const variant_ED_52: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "hl",
    "de"
  ],
  "tokens": [
    "hl",
    ",",
    "de"
  ],
  "opcodes": [
    237,
    82
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED52",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Subtracts DE and the carry flag from HL.",
    "instruction": "sbc hl,de"
  }
};

// ld (nnnn),de
const variant_ED_53_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "de"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "de"
  ],
  "opcodes": [
    237,
    83,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED53",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Stores DE into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),de"
  }
};

// im 1
const variant_ED_56: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "1"
  ],
  "tokens": [
    "1"
  ],
  "opcodes": [
    237,
    86
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED56",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 1.",
    "instruction": "im 1"
  }
};

// ld a,i
const variant_ED_57: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "i"
  ],
  "tokens": [
    "a",
    ",",
    "i"
  ],
  "opcodes": [
    237,
    87
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED57",
    "undocumented": false,
    "z180": false,
    "flags": "-0*0++",
    "byte_count": 2,
    "with_jump_clock_count": 9,
    "without_jump_clock_count": 9,
    "description": "Stores the value of register I into A.",
    "instruction": "ld a,i"
  }
};

// ld i
const variant_ED_57_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "i"
  ],
  "tokens": [
    "i"
  ],
  "opcodes": [
    237,
    87
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "ED57",
    "undocumented": false,
    "z180": false,
    "flags": "-0*0++",
    "byte_count": 2,
    "with_jump_clock_count": 9,
    "without_jump_clock_count": 9,
    "description": "Stores the value of register I into A.",
    "instruction": "ld a,i"
  }
};

// in e,(c)
const variant_ED_58: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "e",
    "(c)"
  ],
  "tokens": [
    "e",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    88
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED58",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to E.",
    "instruction": "in e,(c)"
  }
};

// out (c),e
const variant_ED_59: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "e"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "e"
  ],
  "opcodes": [
    237,
    89
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED59",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of E is written to port C.",
    "instruction": "out (c),e"
  }
};

// adc hl,de
const variant_ED_5A: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "hl",
    "de"
  ],
  "tokens": [
    "hl",
    ",",
    "de"
  ],
  "opcodes": [
    237,
    90
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED5A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Adds DE and the carry flag to HL.",
    "instruction": "adc hl,de"
  }
};

// ld de,(nnnn)
const variant_ED_5B_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "de",
    "(nnnn)"
  ],
  "tokens": [
    "de",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    237,
    91,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED5B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Loads the value pointed to by <var>nn</var> into DE.",
    "instruction": "ld de,(nn)"
  }
};

// im 2
const variant_ED_5E: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "2"
  ],
  "tokens": [
    "2"
  ],
  "opcodes": [
    237,
    94
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED5E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 2.",
    "instruction": "im 2"
  }
};

// ld a,r
const variant_ED_5F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "r"
  ],
  "tokens": [
    "a",
    ",",
    "r"
  ],
  "opcodes": [
    237,
    95
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED5F",
    "undocumented": false,
    "z180": false,
    "flags": "-0*0++",
    "byte_count": 2,
    "with_jump_clock_count": 9,
    "without_jump_clock_count": 9,
    "description": "Stores the value of register R into A.",
    "instruction": "ld a,r"
  }
};

// ld r
const variant_ED_5F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "r"
  ],
  "tokens": [
    "r"
  ],
  "opcodes": [
    237,
    95
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "ED5F",
    "undocumented": false,
    "z180": false,
    "flags": "-0*0++",
    "byte_count": 2,
    "with_jump_clock_count": 9,
    "without_jump_clock_count": 9,
    "description": "Stores the value of register R into A.",
    "instruction": "ld a,r"
  }
};

// in h,(c)
const variant_ED_60: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "h",
    "(c)"
  ],
  "tokens": [
    "h",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    96
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED60",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to H.",
    "instruction": "in h,(c)"
  }
};

// out (c),h
const variant_ED_61: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "h"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "h"
  ],
  "opcodes": [
    237,
    97
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED61",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of H is written to port C.",
    "instruction": "out (c),h"
  }
};

// sbc hl,hl
const variant_ED_62: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "hl",
    "hl"
  ],
  "tokens": [
    "hl",
    ",",
    "hl"
  ],
  "opcodes": [
    237,
    98
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED62",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Subtracts HL and the carry flag from HL.",
    "instruction": "sbc hl,hl"
  }
};

// rrd 
const variant_ED_67: OpcodeVariant = {
  "mnemonic": "rrd",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    103
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED67",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 18,
    "without_jump_clock_count": 18,
    "description": "The contents of the low-order nibble of (HL) are copied to the low-order nibble of A. The previous contents are copied to the high-order nibble of (HL). The previous contents are copied to the low-order nibble of (HL).",
    "instruction": "rrd"
  }
};

// in l,(c)
const variant_ED_68: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "l",
    "(c)"
  ],
  "tokens": [
    "l",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    104
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED68",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to L.",
    "instruction": "in l,(c)"
  }
};

// out (c),l
const variant_ED_69: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "l"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "l"
  ],
  "opcodes": [
    237,
    105
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED69",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of L is written to port C.",
    "instruction": "out (c),l"
  }
};

// adc hl,hl
const variant_ED_6A: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "hl",
    "hl"
  ],
  "tokens": [
    "hl",
    ",",
    "hl"
  ],
  "opcodes": [
    237,
    106
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED6A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Adds HL and the carry flag to HL.",
    "instruction": "adc hl,hl"
  }
};

// rld 
const variant_ED_6F: OpcodeVariant = {
  "mnemonic": "rld",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    111
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED6F",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 18,
    "without_jump_clock_count": 18,
    "description": "The contents of the low-order nibble of (HL) are copied to the high-order nibble of (HL). The previous contents are copied to the low-order nibble of A. The previous contents are copied to the low-order nibble of (HL).",
    "instruction": "rld"
  }
};

// in f,(c)
const variant_ED_70: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "f",
    "(c)"
  ],
  "tokens": [
    "f",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    112
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED70",
    "undocumented": true,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Inputs a byte from port C and affects flags only.",
    "instruction": "in (c)"
  }
};

// out (c),0
const variant_ED_71: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "0"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "0"
  ],
  "opcodes": [
    237,
    113
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED71",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Outputs a zero to port C.",
    "instruction": "out (c),0"
  }
};

// sbc hl,sp
const variant_ED_72: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "hl",
    "sp"
  ],
  "tokens": [
    "hl",
    ",",
    "sp"
  ],
  "opcodes": [
    237,
    114
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED72",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Subtracts SP and the carry flag from HL.",
    "instruction": "sbc hl,sp"
  }
};

// ld (nnnn),sp
const variant_ED_73_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "sp"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "sp"
  ],
  "opcodes": [
    237,
    115,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED73",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Stores SP into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),sp"
  }
};

// in a,(c)
const variant_ED_78: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "a",
    "(c)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    120
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED78",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to A.",
    "instruction": "in a,(c)"
  }
};

// in (c)
const variant_ED_78_pseudo: OpcodeVariant = {
  "mnemonic": "in",
  "params": [
    "(c)"
  ],
  "tokens": [
    "(",
    "c",
    ")"
  ],
  "opcodes": [
    237,
    120
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "ED78",
    "undocumented": false,
    "z180": false,
    "flags": "-0P0++",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "a byte from port C is written to A.",
    "instruction": "in a,(c)"
  }
};

// out (c),a
const variant_ED_79: OpcodeVariant = {
  "mnemonic": "out",
  "params": [
    "(c)",
    "a"
  ],
  "tokens": [
    "(",
    "c",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    237,
    121
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED79",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "The value of A is written to port C.",
    "instruction": "out (c),a"
  }
};

// adc hl,sp
const variant_ED_7A: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "hl",
    "sp"
  ],
  "tokens": [
    "hl",
    ",",
    "sp"
  ],
  "opcodes": [
    237,
    122
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED7A",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "Adds SP and the carry flag to HL.",
    "instruction": "adc hl,sp"
  }
};

// ld sp,(nnnn)
const variant_ED_7B_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sp",
    "(nnnn)"
  ],
  "tokens": [
    "sp",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    237,
    123,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "ED7B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Loads the value pointed to by <var>nn</var> into SP.",
    "instruction": "ld sp,(nn)"
  }
};

// ldi 
const variant_ED_A0: OpcodeVariant = {
  "mnemonic": "ldi",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    160
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDA0",
    "undocumented": false,
    "z180": false,
    "flags": "-0*0--",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "Transfers a byte of data from the memory location pointed to by HL to the memory location pointed to by DE. Then HL and DE are incremented and BC is decremented. p/v is reset if BC becomes zero and set otherwise.",
    "instruction": "ldi"
  }
};

// cpi 
const variant_ED_A1: OpcodeVariant = {
  "mnemonic": "cpi",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    161
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDA1",
    "undocumented": false,
    "z180": false,
    "flags": "-1*+++",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "Compares the value of the memory location pointed to by HL with A. Then HL is incremented and BC is decremented. p/v is reset if BC becomes zero and set otherwise.",
    "instruction": "cpi"
  }
};

// ini 
const variant_ED_A2: OpcodeVariant = {
  "mnemonic": "ini",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    162
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDA2",
    "undocumented": false,
    "z180": false,
    "flags": "-1  * ",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "a byte from port C is written to the memory location pointed to by HL. Then HL is incremented and B is decremented.",
    "instruction": "ini"
  }
};

// outi 
const variant_ED_A3: OpcodeVariant = {
  "mnemonic": "outi",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    163
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDA3",
    "undocumented": false,
    "z180": false,
    "flags": "-1  * ",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "B is decremented. a byte from the memory location pointed to by HL is written to port C. Then HL is incremented.",
    "instruction": "outi"
  }
};

// ldd 
const variant_ED_A8: OpcodeVariant = {
  "mnemonic": "ldd",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    168
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDA8",
    "undocumented": false,
    "z180": false,
    "flags": "-0*0--",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "Transfers a byte of data from the memory location pointed to by HL to the memory location pointed to by DE. Then HL, DE, and BC are decremented. p/v is reset if BC becomes zero and set otherwise.",
    "instruction": "ldd"
  }
};

// cpd 
const variant_ED_A9: OpcodeVariant = {
  "mnemonic": "cpd",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    169
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDA9",
    "undocumented": false,
    "z180": false,
    "flags": "-1*+++",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "Compares the value of the memory location pointed to by HL with A. Then HL and BC are decremented. p/v is reset if BC becomes zero and set otherwise.",
    "instruction": "cpd"
  }
};

// ind 
const variant_ED_AA: OpcodeVariant = {
  "mnemonic": "ind",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    170
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDAA",
    "undocumented": false,
    "z180": false,
    "flags": "-1  * ",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "a byte from port C is written to the memory location pointed to by HL. Then HL and B are decremented.",
    "instruction": "ind"
  }
};

// outd 
const variant_ED_AB: OpcodeVariant = {
  "mnemonic": "outd",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    171
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDAB",
    "undocumented": false,
    "z180": false,
    "flags": "-1  * ",
    "byte_count": 2,
    "with_jump_clock_count": 16,
    "without_jump_clock_count": 16,
    "description": "B is decremented. a byte from the memory location pointed to by HL is written to port C. Then HL is decremented.",
    "instruction": "outd"
  }
};

// ldir 
const variant_ED_B0: OpcodeVariant = {
  "mnemonic": "ldir",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    176
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDB0",
    "undocumented": false,
    "z180": false,
    "flags": "-000--",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "Transfers a byte of data from the memory location pointed to by HL to the memory location pointed to by DE. Then HL and DE are incremented and BC is decremented. If BC is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.",
    "instruction": "ldir"
  }
};

// cpir 
const variant_ED_B1: OpcodeVariant = {
  "mnemonic": "cpir",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    177
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDB1",
    "undocumented": false,
    "z180": false,
    "flags": "-1*+++",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "Compares the value of the memory location pointed to by HL with A. Then HL is incremented and BC is decremented. If BC is not zero and Z is not set, this operation is repeated. p/v is reset if BC becomes zero and set otherwise, acting as an indicator that HL reached A memory location whose value equalled A before the counter went to zero. Interrupts can trigger while this instruction is processing.",
    "instruction": "cpir"
  }
};

// inir 
const variant_ED_B2: OpcodeVariant = {
  "mnemonic": "inir",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    178
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDB2",
    "undocumented": false,
    "z180": false,
    "flags": "-1  1 ",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "a byte from port C is written to the memory location pointed to by HL. Then HL is incremented and B is decremented. If B is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.",
    "instruction": "inir"
  }
};

// otir 
const variant_ED_B3: OpcodeVariant = {
  "mnemonic": "otir",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    179
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDB3",
    "undocumented": false,
    "z180": false,
    "flags": "-1  1 ",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "B is decremented. a byte from the memory location pointed to by HL is written to port C. Then HL is incremented. If B is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.",
    "instruction": "otir"
  }
};

// lddr 
const variant_ED_B8: OpcodeVariant = {
  "mnemonic": "lddr",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    184
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDB8",
    "undocumented": false,
    "z180": false,
    "flags": "-000--",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "Transfers a byte of data from the memory location pointed to by HL to the memory location pointed to by DE. Then HL, DE, and BC are decremented. If BC is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.",
    "instruction": "lddr"
  }
};

// cpdr 
const variant_ED_B9: OpcodeVariant = {
  "mnemonic": "cpdr",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    185
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDB9",
    "undocumented": false,
    "z180": false,
    "flags": "-1*+++",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "Compares the value of the memory location pointed to by HL with A. Then HL and BC are decremented. If BC is not zero and Z is not set, this operation is repeated. p/v is reset if BC becomes zero and set otherwise, acting as an indicator that HL reached A memory location whose value equalled A before the counter went to zero. Interrupts can trigger while this instruction is processing.",
    "instruction": "cpdr"
  }
};

// indr 
const variant_ED_BA: OpcodeVariant = {
  "mnemonic": "indr",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    186
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDBA",
    "undocumented": false,
    "z180": false,
    "flags": "-1  1 ",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "a byte from port C is written to the memory location pointed to by HL. Then HL and B are decremented. If B is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.",
    "instruction": "indr"
  }
};

// otdr 
const variant_ED_BB: OpcodeVariant = {
  "mnemonic": "otdr",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    187
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EDBB",
    "undocumented": false,
    "z180": false,
    "flags": "-1  1 ",
    "byte_count": 2,
    "with_jump_clock_count": 21,
    "without_jump_clock_count": 16,
    "description": "B is decremented. a byte from the memory location pointed to by HL is written to port C. Then HL is decremented. If B is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.",
    "instruction": "otdr"
  }
};

// xor a,nn
const variant_EE_nn: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    238,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise XOR on A with <var>n</var>.",
    "instruction": "xor n"
  }
};

// xor nn
const variant_EE_nn_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    238,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "EE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise XOR on A with <var>n</var>.",
    "instruction": "xor n"
  }
};

// rst 40
const variant_EF: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "28"
  ],
  "tokens": [
    "40"
  ],
  "opcodes": [
    239
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "EF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 40.",
    "instruction": "rst 28h"
  }
};

// ret p
const variant_F0: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "p"
  ],
  "tokens": [
    "p"
  ],
  "opcodes": [
    240
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F0",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the sign flag is unset, the top stack entry is popped into PC.",
    "instruction": "ret p"
  }
};

// pop af
const variant_F1: OpcodeVariant = {
  "mnemonic": "pop",
  "params": [
    "af"
  ],
  "tokens": [
    "af"
  ],
  "opcodes": [
    241
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "The memory location pointed to by SP is stored into F and SP is incremented. The memory location pointed to by SP is stored into A and SP is incremented again.",
    "instruction": "pop af"
  }
};

// jp p,nnnn
const variant_F2_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "p",
    "nnnn"
  ],
  "tokens": [
    "p",
    ",",
    "nnnn"
  ],
  "opcodes": [
    242,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F2",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the sign flag is unset, <var>nn</var> is copied to PC.",
    "instruction": "jp p,nn"
  }
};

// di 
const variant_F3: OpcodeVariant = {
  "mnemonic": "di",
  "params": [],
  "tokens": [],
  "opcodes": [
    243
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Resets both interrupt flip-flops, thus preventing maskable interrupts from triggering.",
    "instruction": "di"
  }
};

// call p,nnnn
const variant_F4_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "p",
    "nnnn"
  ],
  "tokens": [
    "p",
    ",",
    "nnnn"
  ],
  "opcodes": [
    244,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F4",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the sign flag is unset, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call p,nn"
  }
};

// push af
const variant_F5: OpcodeVariant = {
  "mnemonic": "push",
  "params": [
    "af"
  ],
  "tokens": [
    "af"
  ],
  "opcodes": [
    245
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "SP is decremented and A is stored into the memory location pointed to by SP. SP is decremented again and F is stored into the memory location pointed to by SP.",
    "instruction": "push af"
  }
};

// or a,nn
const variant_F6_nn: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    246,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise OR on A with <var>n</var>.",
    "instruction": "or n"
  }
};

// or nn
const variant_F6_nn_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    246,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "F6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Bitwise OR on A with <var>n</var>.",
    "instruction": "or n"
  }
};

// rst 48
const variant_F7: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "30"
  ],
  "tokens": [
    "48"
  ],
  "opcodes": [
    247
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F7",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 48.",
    "instruction": "rst 30h"
  }
};

// ret m
const variant_F8: OpcodeVariant = {
  "mnemonic": "ret",
  "params": [
    "m"
  ],
  "tokens": [
    "m"
  ],
  "opcodes": [
    248
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F8",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 5,
    "description": "If the sign flag is set, the top stack entry is popped into PC.",
    "instruction": "ret m"
  }
};

// ld sp,hl
const variant_F9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sp",
    "hl"
  ],
  "tokens": [
    "sp",
    ",",
    "hl"
  ],
  "opcodes": [
    249
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "F9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 6,
    "without_jump_clock_count": 6,
    "description": "Loads the value of HL into SP.",
    "instruction": "ld sp,hl"
  }
};

// jp m,nnnn
const variant_FA_nnnn: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "m",
    "nnnn"
  ],
  "tokens": [
    "m",
    ",",
    "nnnn"
  ],
  "opcodes": [
    250,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FA",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "If the sign flag is set, <var>nn</var> is copied to PC.",
    "instruction": "jp m,nn"
  }
};

// ei 
const variant_FB: OpcodeVariant = {
  "mnemonic": "ei",
  "params": [],
  "tokens": [],
  "opcodes": [
    251
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FB",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 4,
    "without_jump_clock_count": 4,
    "description": "Sets both interrupt flip-flops, thus allowing maskable interrupts to occur. An interrupt will not occur until after the immediately following instruction.",
    "instruction": "ei"
  }
};

// call m,nnnn
const variant_FC_nnnn: OpcodeVariant = {
  "mnemonic": "call",
  "params": [
    "m",
    "nnnn"
  ],
  "tokens": [
    "m",
    ",",
    "nnnn"
  ],
  "opcodes": [
    252,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FC",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 10,
    "description": "If the sign flag is set, the current PC value plus three is pushed onto the stack, then is loaded with <var>nn</var>.",
    "instruction": "call m,nn"
  }
};

// add iy,bc
const variant_FD_09: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "iy",
    "bc"
  ],
  "tokens": [
    "iy",
    ",",
    "bc"
  ],
  "opcodes": [
    253,
    9
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD09",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of BC is added to IY.",
    "instruction": "add iy,bc"
  }
};

// add iy,de
const variant_FD_19: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "iy",
    "de"
  ],
  "tokens": [
    "iy",
    ",",
    "de"
  ],
  "opcodes": [
    253,
    25
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD19",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of DE is added to IY.",
    "instruction": "add iy,de"
  }
};

// ld iy,nnnn
const variant_FD_21_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iy",
    "nnnn"
  ],
  "tokens": [
    "iy",
    ",",
    "nnnn"
  ],
  "opcodes": [
    253,
    33,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD21",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Loads <var>nn</var> into register IY.",
    "instruction": "ld iy,nn"
  }
};

// ld (nnnn),iy
const variant_FD_22_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "iy"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "iy"
  ],
  "opcodes": [
    253,
    34,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD22",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Stores IY into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),iy"
  }
};

// inc iy
const variant_FD_23: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "iy"
  ],
  "tokens": [
    "iy"
  ],
  "opcodes": [
    253,
    35
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD23",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Adds one to IY.",
    "instruction": "inc iy"
  }
};

// inc iyh
const variant_FD_24: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    36
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD24",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds one to IYH.",
    "instruction": "inc iyh"
  }
};

// dec iyh
const variant_FD_25: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    37
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD25",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts one from IYH.",
    "instruction": "dec iyh"
  }
};

// ld iyh,nn
const variant_FD_26_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "nn"
  ],
  "tokens": [
    "iyh",
    ",",
    "nn"
  ],
  "opcodes": [
    253,
    38,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD26",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "Loads <var>n</var> into IYH.",
    "instruction": "ld iyh,n"
  }
};

// add iy,iy
const variant_FD_29: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "iy",
    "iy"
  ],
  "tokens": [
    "iy",
    ",",
    "iy"
  ],
  "opcodes": [
    253,
    41
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD29",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of IY is added to IY.",
    "instruction": "add iy,iy"
  }
};

// ld iy,(nnnn)
const variant_FD_2A_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iy",
    "(nnnn)"
  ],
  "tokens": [
    "iy",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    253,
    42,
    "nnnn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD2A",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Loads the value pointed to by <var>nn</var> into IY.",
    "instruction": "ld iy,(nn)"
  }
};

// dec iy
const variant_FD_2B: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "iy"
  ],
  "tokens": [
    "iy"
  ],
  "opcodes": [
    253,
    43
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD2B",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Subtracts one from IY.",
    "instruction": "dec iy"
  }
};

// inc iyl
const variant_FD_2C: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    44
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD2C",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds one to IYL.",
    "instruction": "inc iyl"
  }
};

// dec iyl
const variant_FD_2D: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    45
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD2D",
    "undocumented": true,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts one from IYL.",
    "instruction": "dec iyl"
  }
};

// ld iyl,nn
const variant_FD_2E_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "nn"
  ],
  "tokens": [
    "iyl",
    ",",
    "nn"
  ],
  "opcodes": [
    253,
    46,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD2E",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "Loads <var>n</var> into IYL.",
    "instruction": "ld iyl,n"
  }
};

// inc (iy+dd)
const variant_FD_34_dd: OpcodeVariant = {
  "mnemonic": "inc",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    52,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD34",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 3,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Adds one to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "inc (iy+d)"
  }
};

// dec (iy+dd)
const variant_FD_35_dd: OpcodeVariant = {
  "mnemonic": "dec",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    53,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD35",
    "undocumented": false,
    "z180": false,
    "flags": "-+V+++",
    "byte_count": 3,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Subtracts one from the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "dec (iy+d)"
  }
};

// ld (iy+dd),nn
const variant_FD_36_dd_nn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "nn"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "nn"
  ],
  "opcodes": [
    253,
    54,
    "dd",
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD36",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores <var>n</var> to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),n"
  }
};

// add iy,sp
const variant_FD_39: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "iy",
    "sp"
  ],
  "tokens": [
    "iy",
    ",",
    "sp"
  ],
  "opcodes": [
    253,
    57
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD39",
    "undocumented": false,
    "z180": false,
    "flags": "++-+--",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "The value of SP is added to IY.",
    "instruction": "add iy,sp"
  }
};

// ld b,iyh
const variant_FD_44: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "iyh"
  ],
  "tokens": [
    "b",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    68
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD44",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into B.",
    "instruction": "ld b,iyh"
  }
};

// ld b,iyl
const variant_FD_45: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "iyl"
  ],
  "tokens": [
    "b",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    69
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD45",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into B.",
    "instruction": "ld b,iyl"
  }
};

// ld b,(iy+dd)
const variant_FD_46_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    70,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD46",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into B.",
    "instruction": "ld b,(iy+d)"
  }
};

// ld c,iyh
const variant_FD_4C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "iyh"
  ],
  "tokens": [
    "c",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    76
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD4C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into C.",
    "instruction": "ld c,iyh"
  }
};

// ld c,iyl
const variant_FD_4D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "iyl"
  ],
  "tokens": [
    "c",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    77
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD4D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into C.",
    "instruction": "ld c,iyl"
  }
};

// ld c,(iy+dd)
const variant_FD_4E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    78,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD4E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into C.",
    "instruction": "ld c,(iy+d)"
  }
};

// ld d,iyh
const variant_FD_54: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "iyh"
  ],
  "tokens": [
    "d",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    84
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD54",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into D.",
    "instruction": "ld d,iyh"
  }
};

// ld d,iyl
const variant_FD_55: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "iyl"
  ],
  "tokens": [
    "d",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    85
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD55",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into D.",
    "instruction": "ld d,iyl"
  }
};

// ld d,(iy+dd)
const variant_FD_56_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    86,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD56",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into D.",
    "instruction": "ld d,(iy+d)"
  }
};

// ld e,iyh
const variant_FD_5C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "iyh"
  ],
  "tokens": [
    "e",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    92
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD5C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into E.",
    "instruction": "ld e,iyh"
  }
};

// ld e,iyl
const variant_FD_5D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "iyl"
  ],
  "tokens": [
    "e",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    93
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD5D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into E.",
    "instruction": "ld e,iyl"
  }
};

// ld e,(iy+dd)
const variant_FD_5E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    94,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD5E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into E.",
    "instruction": "ld e,(iy+d)"
  }
};

// ld iyh,b
const variant_FD_60: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "b"
  ],
  "tokens": [
    "iyh",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    96
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD60",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into IYH.",
    "instruction": "ld iyh,b"
  }
};

// ld iyh,c
const variant_FD_61: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "c"
  ],
  "tokens": [
    "iyh",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    97
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD61",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into IYH.",
    "instruction": "ld iyh,c"
  }
};

// ld iyh,d
const variant_FD_62: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "d"
  ],
  "tokens": [
    "iyh",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    98
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD62",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into IYH.",
    "instruction": "ld iyh,d"
  }
};

// ld iyh,e
const variant_FD_63: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "e"
  ],
  "tokens": [
    "iyh",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    99
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD63",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into IYH.",
    "instruction": "ld iyh,e"
  }
};

// ld iyh,iyh
const variant_FD_64: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "iyh"
  ],
  "tokens": [
    "iyh",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    100
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD64",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into IYH.",
    "instruction": "ld iyh,iyh"
  }
};

// ld iyh,iyl
const variant_FD_65: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "iyl"
  ],
  "tokens": [
    "iyh",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    101
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD65",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into IYH.",
    "instruction": "ld iyh,iyl"
  }
};

// ld h,(iy+dd)
const variant_FD_66_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    102,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD66",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into H.",
    "instruction": "ld h,(iy+d)"
  }
};

// ld iyh,a
const variant_FD_67: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh",
    "a"
  ],
  "tokens": [
    "iyh",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    103
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD67",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into IYH.",
    "instruction": "ld iyh,a"
  }
};

// ld iyl,b
const variant_FD_68: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "b"
  ],
  "tokens": [
    "iyl",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    104
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD68",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into IYL.",
    "instruction": "ld iyl,b"
  }
};

// ld iyl,c
const variant_FD_69: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "c"
  ],
  "tokens": [
    "iyl",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    105
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD69",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into IYL.",
    "instruction": "ld iyl,c"
  }
};

// ld iyl,d
const variant_FD_6A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "d"
  ],
  "tokens": [
    "iyl",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    106
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD6A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into IYL.",
    "instruction": "ld iyl,d"
  }
};

// ld iyl,e
const variant_FD_6B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "e"
  ],
  "tokens": [
    "iyl",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    107
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD6B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into IYL.",
    "instruction": "ld iyl,e"
  }
};

// ld iyl,iyh
const variant_FD_6C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "iyh"
  ],
  "tokens": [
    "iyl",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    108
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD6C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into IYL.",
    "instruction": "ld iyl,iyh"
  }
};

// ld iyl,iyl
const variant_FD_6D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "iyl"
  ],
  "tokens": [
    "iyl",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    109
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD6D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into IYL.",
    "instruction": "ld iyl,iyl"
  }
};

// ld l,(iy+dd)
const variant_FD_6E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    110,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD6E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into L.",
    "instruction": "ld l,(iy+d)"
  }
};

// ld iyl,a
const variant_FD_6F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl",
    "a"
  ],
  "tokens": [
    "iyl",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    111
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD6F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into IYL.",
    "instruction": "ld iyl,a"
  }
};

// ld (iy+dd),b
const variant_FD_70_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "b"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    112,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD70",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores B to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),b"
  }
};

// ld (iy+dd),c
const variant_FD_71_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "c"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    113,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD71",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores C to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),c"
  }
};

// ld (iy+dd),d
const variant_FD_72_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "d"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    114,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD72",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores D to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),d"
  }
};

// ld (iy+dd),e
const variant_FD_73_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "e"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    115,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD73",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores E to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),e"
  }
};

// ld (iy+dd),h
const variant_FD_74_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "h"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "h"
  ],
  "opcodes": [
    253,
    116,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD74",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores H to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),h"
  }
};

// ld (iy+dd),l
const variant_FD_75_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "l"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "l"
  ],
  "opcodes": [
    253,
    117,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD75",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores L to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),l"
  }
};

// ld (iy+dd),a
const variant_FD_77_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)",
    "a"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    119,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD77",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Stores A to the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "ld (iy+d),a"
  }
};

// ld a,iyh
const variant_FD_7C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    124
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD7C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into A.",
    "instruction": "ld a,iyh"
  }
};

// ld iyh
const variant_FD_7C_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    124
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD7C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYH are loaded into A.",
    "instruction": "ld a,iyh"
  }
};

// ld a,iyl
const variant_FD_7D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    125
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD7D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into A.",
    "instruction": "ld a,iyl"
  }
};

// ld iyl
const variant_FD_7D_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    125
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD7D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of IYL are loaded into A.",
    "instruction": "ld a,iyl"
  }
};

// ld a,(iy+dd)
const variant_FD_7E_dd: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    126,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD7E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into A.",
    "instruction": "ld a,(iy+d)"
  }
};

// ld (iy+dd)
const variant_FD_7E_dd_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    126,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD7E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Loads the value pointed to by IY plus <var>D</var> into A.",
    "instruction": "ld a,(iy+d)"
  }
};

// add a,iyh
const variant_FD_84: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    132
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD84",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYH to A.",
    "instruction": "add a,iyh"
  }
};

// add iyh
const variant_FD_84_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    132
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD84",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYH to A.",
    "instruction": "add a,iyh"
  }
};

// add a,iyl
const variant_FD_85: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    133
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD85",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYL to A.",
    "instruction": "add a,iyl"
  }
};

// add iyl
const variant_FD_85_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    133
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD85",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYL to A.",
    "instruction": "add a,iyl"
  }
};

// add a,(iy+dd)
const variant_FD_86_dd: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    134,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD86",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IY plus <var>D</var> to A.",
    "instruction": "add a,(iy+d)"
  }
};

// add (iy+dd)
const variant_FD_86_dd_pseudo: OpcodeVariant = {
  "mnemonic": "add",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    134,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD86",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IY plus <var>D</var> to A.",
    "instruction": "add a,(iy+d)"
  }
};

// adc a,iyh
const variant_FD_8C: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    140
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD8C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYH and the carry flag to A.",
    "instruction": "adc a,iyh"
  }
};

// adc iyh
const variant_FD_8C_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    140
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD8C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYH and the carry flag to A.",
    "instruction": "adc a,iyh"
  }
};

// adc a,iyl
const variant_FD_8D: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    141
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD8D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYL and the carry flag to A.",
    "instruction": "adc a,iyl"
  }
};

// adc iyl
const variant_FD_8D_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    141
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD8D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Adds IYL and the carry flag to A.",
    "instruction": "adc a,iyl"
  }
};

// adc a,(iy+dd)
const variant_FD_8E_dd: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    142,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD8E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IY plus <var>D</var> and the carry flag to A.",
    "instruction": "adc a,(iy+d)"
  }
};

// adc (iy+dd)
const variant_FD_8E_dd_pseudo: OpcodeVariant = {
  "mnemonic": "adc",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    142,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD8E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Adds the value pointed to by IY plus <var>D</var> and the carry flag to A.",
    "instruction": "adc a,(iy+d)"
  }
};

// sub a,iyh
const variant_FD_94: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    148
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD94",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYH from A.",
    "instruction": "sub iyh"
  }
};

// sub iyh
const variant_FD_94_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    148
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD94",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYH from A.",
    "instruction": "sub iyh"
  }
};

// sub a,iyl
const variant_FD_95: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    149
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD95",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYL from A.",
    "instruction": "sub iyl"
  }
};

// sub iyl
const variant_FD_95_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    149
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD95",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYL from A.",
    "instruction": "sub iyl"
  }
};

// sub a,(iy+dd)
const variant_FD_96_dd: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    150,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD96",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IY plus <var>D</var> from A.",
    "instruction": "sub (iy+d)"
  }
};

// sub (iy+dd)
const variant_FD_96_dd_pseudo: OpcodeVariant = {
  "mnemonic": "sub",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    150,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD96",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IY plus <var>D</var> from A.",
    "instruction": "sub (iy+d)"
  }
};

// sbc a,iyh
const variant_FD_9C: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    156
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD9C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYH and the carry flag from A.",
    "instruction": "sbc a,iyh"
  }
};

// sbc iyh
const variant_FD_9C_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    156
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD9C",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYH and the carry flag from A.",
    "instruction": "sbc a,iyh"
  }
};

// sbc a,iyl
const variant_FD_9D: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    157
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD9D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYL and the carry flag from A.",
    "instruction": "sbc a,iyl"
  }
};

// sbc iyl
const variant_FD_9D_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    157
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD9D",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYL and the carry flag from A.",
    "instruction": "sbc a,iyl"
  }
};

// sbc a,(iy+dd)
const variant_FD_9E_dd: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    158,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FD9E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IY plus <var>D</var> and the carry flag from A.",
    "instruction": "sbc a,(iy+d)"
  }
};

// sbc (iy+dd)
const variant_FD_9E_dd_pseudo: OpcodeVariant = {
  "mnemonic": "sbc",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    158,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FD9E",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IY plus <var>D</var> and the carry flag from A.",
    "instruction": "sbc a,(iy+d)"
  }
};

// and a,iyh
const variant_FD_A4: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    164
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDA4",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IYH.",
    "instruction": "and iyh"
  }
};

// and iyh
const variant_FD_A4_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    164
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDA4",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IYH.",
    "instruction": "and iyh"
  }
};

// and a,iyl
const variant_FD_A5: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    165
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDA5",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IYL.",
    "instruction": "and iyl"
  }
};

// and iyl
const variant_FD_A5_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    165
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDA5",
    "undocumented": true,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise AND on A with IYL.",
    "instruction": "and iyl"
  }
};

// and a,(iy+dd)
const variant_FD_A6_dd: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    166,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDA6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise AND on A with the value pointed to by IY plus <var>D</var>.",
    "instruction": "and (iy+d)"
  }
};

// and (iy+dd)
const variant_FD_A6_dd_pseudo: OpcodeVariant = {
  "mnemonic": "and",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    166,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDA6",
    "undocumented": false,
    "z180": false,
    "flags": "00P1++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise AND on A with the value pointed to by IY plus <var>D</var>.",
    "instruction": "and (iy+d)"
  }
};

// xor a,iyh
const variant_FD_AC: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    172
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDAC",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IYH.",
    "instruction": "xor iyh"
  }
};

// xor iyh
const variant_FD_AC_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    172
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDAC",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IYH.",
    "instruction": "xor iyh"
  }
};

// xor a,iyl
const variant_FD_AD: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    173
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDAD",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IYL.",
    "instruction": "xor iyl"
  }
};

// xor iyl
const variant_FD_AD_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    173
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDAD",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise XOR on A with IYL.",
    "instruction": "xor iyl"
  }
};

// xor a,(iy+dd)
const variant_FD_AE_dd: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    174,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDAE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise XOR on A with the value pointed to by IY plus <var>D</var>.",
    "instruction": "xor (iy+d)"
  }
};

// xor (iy+dd)
const variant_FD_AE_dd_pseudo: OpcodeVariant = {
  "mnemonic": "xor",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    174,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDAE",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise XOR on A with the value pointed to by IY plus <var>D</var>.",
    "instruction": "xor (iy+d)"
  }
};

// or a,iyh
const variant_FD_B4: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    180
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDB4",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IYH.",
    "instruction": "or iyh"
  }
};

// or iyh
const variant_FD_B4_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    180
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDB4",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IYH.",
    "instruction": "or iyh"
  }
};

// or a,iyl
const variant_FD_B5: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    181
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDB5",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IYL.",
    "instruction": "or iyl"
  }
};

// or iyl
const variant_FD_B5_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    181
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDB5",
    "undocumented": true,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Bitwise OR on A with IYL.",
    "instruction": "or iyl"
  }
};

// or a,(iy+dd)
const variant_FD_B6_dd: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    182,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDB6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise OR on A with the value pointed to by IY plus <var>D</var>.",
    "instruction": "or (iy+d)"
  }
};

// or (iy+dd)
const variant_FD_B6_dd_pseudo: OpcodeVariant = {
  "mnemonic": "or",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    182,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDB6",
    "undocumented": false,
    "z180": false,
    "flags": "00P0++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Bitwise OR on A with the value pointed to by IY plus <var>D</var>.",
    "instruction": "or (iy+d)"
  }
};

// cp a,iyh
const variant_FD_BC: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "iyh"
  ],
  "tokens": [
    "a",
    ",",
    "iyh"
  ],
  "opcodes": [
    253,
    188
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDBC",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYH from A and affects flags according to the result. A is not modified.",
    "instruction": "cp iyh"
  }
};

// cp iyh
const variant_FD_BC_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "iyh"
  ],
  "tokens": [
    "iyh"
  ],
  "opcodes": [
    253,
    188
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDBC",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYH from A and affects flags according to the result. A is not modified.",
    "instruction": "cp iyh"
  }
};

// cp a,iyl
const variant_FD_BD: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "iyl"
  ],
  "tokens": [
    "a",
    ",",
    "iyl"
  ],
  "opcodes": [
    253,
    189
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDBD",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYL from A and affects flags according to the result. A is not modified.",
    "instruction": "cp iyl"
  }
};

// cp iyl
const variant_FD_BD_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "iyl"
  ],
  "tokens": [
    "iyl"
  ],
  "opcodes": [
    253,
    189
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDBD",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Subtracts IYL from A and affects flags according to the result. A is not modified.",
    "instruction": "cp iyl"
  }
};

// cp a,(iy+dd)
const variant_FD_BE_dd: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    190,
    "dd"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDBE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IY plus <var>D</var> from A and affects flags according to the result. A is not modified.",
    "instruction": "cp (iy+d)"
  }
};

// cp (iy+dd)
const variant_FD_BE_dd_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    190,
    "dd"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDBE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 3,
    "with_jump_clock_count": 19,
    "without_jump_clock_count": 19,
    "description": "Subtracts the value pointed to by IY plus <var>D</var> from A and affects flags according to the result. A is not modified.",
    "instruction": "cp (iy+d)"
  }
};

// ld b,rlc(iy+dd)
const variant_FD_CB_dd_00: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    0
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB00",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in B.",
    "instruction": "rlc (iy+d),b"
  }
};

// ld c,rlc(iy+dd)
const variant_FD_CB_dd_01: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    1
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB01",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in C.",
    "instruction": "rlc (iy+d),c"
  }
};

// ld d,rlc(iy+dd)
const variant_FD_CB_dd_02: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    2
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB02",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in D.",
    "instruction": "rlc (iy+d),d"
  }
};

// ld e,rlc(iy+dd)
const variant_FD_CB_dd_03: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    3
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB03",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in E.",
    "instruction": "rlc (iy+d),e"
  }
};

// ld h,rlc(iy+dd)
const variant_FD_CB_dd_04: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    4
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB04",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in H.",
    "instruction": "rlc (iy+d),h"
  }
};

// ld l,rlc(iy+dd)
const variant_FD_CB_dd_05: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    5
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB05",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in L.",
    "instruction": "rlc (iy+d),l"
  }
};

// rlc (iy+dd)
const variant_FD_CB_dd_06: OpcodeVariant = {
  "mnemonic": "rlc",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    6
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB06",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
    "instruction": "rlc (iy+d)"
  }
};

// ld a,rlc(iy+dd)
const variant_FD_CB_dd_07: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rlc (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    7
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB07",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in A.",
    "instruction": "rlc (iy+d),a"
  }
};

// ld rlc(iy+dd)
const variant_FD_CB_dd_07_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rlc (iy+dd)"
  ],
  "tokens": [
    "rlc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    7
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB07",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in A.",
    "instruction": "rlc (iy+d),a"
  }
};

// ld b,rrc(iy+dd)
const variant_FD_CB_dd_08: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    8
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB08",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in B.",
    "instruction": "rrc (iy+d),b"
  }
};

// ld c,rrc(iy+dd)
const variant_FD_CB_dd_09: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    9
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB09",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in C.",
    "instruction": "rrc (iy+d),c"
  }
};

// ld d,rrc(iy+dd)
const variant_FD_CB_dd_0A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    10
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB0A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in D.",
    "instruction": "rrc (iy+d),d"
  }
};

// ld e,rrc(iy+dd)
const variant_FD_CB_dd_0B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    11
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB0B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in E.",
    "instruction": "rrc (iy+d),e"
  }
};

// ld h,rrc(iy+dd)
const variant_FD_CB_dd_0C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    12
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB0C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in H.",
    "instruction": "rrc (iy+d),h"
  }
};

// ld l,rrc(iy+dd)
const variant_FD_CB_dd_0D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    13
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB0D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in L.",
    "instruction": "rrc (iy+d),l"
  }
};

// rrc (iy+dd)
const variant_FD_CB_dd_0E: OpcodeVariant = {
  "mnemonic": "rrc",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    14
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB0E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
    "instruction": "rrc (iy+d)"
  }
};

// ld a,rrc(iy+dd)
const variant_FD_CB_dd_0F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rrc (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    15
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB0F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in A.",
    "instruction": "rrc (iy+d),a"
  }
};

// ld rrc(iy+dd)
const variant_FD_CB_dd_0F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rrc (iy+dd)"
  ],
  "tokens": [
    "rrc",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    15
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB0F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in A.",
    "instruction": "rrc (iy+d),a"
  }
};

// ld b,rl(iy+dd)
const variant_FD_CB_dd_10: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rl (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    16
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB10",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in B.",
    "instruction": "rl (iy+d),b"
  }
};

// ld c,rl(iy+dd)
const variant_FD_CB_dd_11: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rl (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    17
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB11",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in C.",
    "instruction": "rl (iy+d),c"
  }
};

// ld d,rl(iy+dd)
const variant_FD_CB_dd_12: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rl (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    18
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB12",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in D.",
    "instruction": "rl (iy+d),d"
  }
};

// ld e,rl(iy+dd)
const variant_FD_CB_dd_13: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rl (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    19
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB13",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in E.",
    "instruction": "rl (iy+d),e"
  }
};

// ld h,rl(iy+dd)
const variant_FD_CB_dd_14: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rl (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    20
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB14",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in H.",
    "instruction": "rl (iy+d),h"
  }
};

// ld l,rl(iy+dd)
const variant_FD_CB_dd_15: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rl (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    21
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB15",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in L.",
    "instruction": "rl (iy+d),l"
  }
};

// rl (iy+dd)
const variant_FD_CB_dd_16: OpcodeVariant = {
  "mnemonic": "rl",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    22
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB16",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
    "instruction": "rl (iy+d)"
  }
};

// ld a,rl(iy+dd)
const variant_FD_CB_dd_17: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rl (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    23
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB17",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in A.",
    "instruction": "rl (iy+d),a"
  }
};

// ld rl(iy+dd)
const variant_FD_CB_dd_17_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rl (iy+dd)"
  ],
  "tokens": [
    "rl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    23
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB17",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in A.",
    "instruction": "rl (iy+d),a"
  }
};

// ld b,rr(iy+dd)
const variant_FD_CB_dd_18: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "rr (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    24
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB18",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in B.",
    "instruction": "rr (iy+d),b"
  }
};

// ld c,rr(iy+dd)
const variant_FD_CB_dd_19: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "rr (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    25
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB19",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in C.",
    "instruction": "rr (iy+d),c"
  }
};

// ld d,rr(iy+dd)
const variant_FD_CB_dd_1A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "rr (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    26
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB1A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in D.",
    "instruction": "rr (iy+d),d"
  }
};

// ld e,rr(iy+dd)
const variant_FD_CB_dd_1B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "rr (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    27
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB1B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in E.",
    "instruction": "rr (iy+d),e"
  }
};

// ld h,rr(iy+dd)
const variant_FD_CB_dd_1C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "rr (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    28
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB1C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in H.",
    "instruction": "rr (iy+d),h"
  }
};

// ld l,rr(iy+dd)
const variant_FD_CB_dd_1D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "rr (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    29
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB1D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in L.",
    "instruction": "rr (iy+d),l"
  }
};

// rr (iy+dd)
const variant_FD_CB_dd_1E: OpcodeVariant = {
  "mnemonic": "rr",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    30
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB1E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
    "instruction": "rr (iy+d)"
  }
};

// ld a,rr(iy+dd)
const variant_FD_CB_dd_1F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "rr (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    31
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB1F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in A.",
    "instruction": "rr (iy+d),a"
  }
};

// ld rr(iy+dd)
const variant_FD_CB_dd_1F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "rr (iy+dd)"
  ],
  "tokens": [
    "rr",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    31
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB1F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in A.",
    "instruction": "rr (iy+d),a"
  }
};

// ld b,sla(iy+dd)
const variant_FD_CB_dd_20: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "sla (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    32
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB20",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in B.",
    "instruction": "sla (iy+d),b"
  }
};

// ld c,sla(iy+dd)
const variant_FD_CB_dd_21: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "sla (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    33
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB21",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in C.",
    "instruction": "sla (iy+d),c"
  }
};

// ld d,sla(iy+dd)
const variant_FD_CB_dd_22: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "sla (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    34
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB22",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in D.",
    "instruction": "sla (iy+d),d"
  }
};

// ld e,sla(iy+dd)
const variant_FD_CB_dd_23: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "sla (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    35
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB23",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in E.",
    "instruction": "sla (iy+d),e"
  }
};

// ld h,sla(iy+dd)
const variant_FD_CB_dd_24: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "sla (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    36
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB24",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in H.",
    "instruction": "sla (iy+d),h"
  }
};

// ld l,sla(iy+dd)
const variant_FD_CB_dd_25: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "sla (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    37
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB25",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in L.",
    "instruction": "sla (iy+d),l"
  }
};

// sla (iy+dd)
const variant_FD_CB_dd_26: OpcodeVariant = {
  "mnemonic": "sla",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    38
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB26",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.",
    "instruction": "sla (iy+d)"
  }
};

// ld a,sla(iy+dd)
const variant_FD_CB_dd_27: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "sla (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    39
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB27",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in A.",
    "instruction": "sla (iy+d),a"
  }
};

// ld sla(iy+dd)
const variant_FD_CB_dd_27_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sla (iy+dd)"
  ],
  "tokens": [
    "sla",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    39
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB27",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in A.",
    "instruction": "sla (iy+d),a"
  }
};

// ld b,sra(iy+dd)
const variant_FD_CB_dd_28: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "sra (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    40
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB28",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in B.",
    "instruction": "sra (iy+d),b"
  }
};

// ld c,sra(iy+dd)
const variant_FD_CB_dd_29: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "sra (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    41
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB29",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in C.",
    "instruction": "sra (iy+d),c"
  }
};

// ld d,sra(iy+dd)
const variant_FD_CB_dd_2A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "sra (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    42
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB2A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in D.",
    "instruction": "sra (iy+d),d"
  }
};

// ld e,sra(iy+dd)
const variant_FD_CB_dd_2B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "sra (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    43
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB2B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in E.",
    "instruction": "sra (iy+d),e"
  }
};

// ld h,sra(iy+dd)
const variant_FD_CB_dd_2C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "sra (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    44
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB2C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in H.",
    "instruction": "sra (iy+d),h"
  }
};

// ld l,sra(iy+dd)
const variant_FD_CB_dd_2D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "sra (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    45
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB2D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in L.",
    "instruction": "sra (iy+d),l"
  }
};

// sra (iy+dd)
const variant_FD_CB_dd_2E: OpcodeVariant = {
  "mnemonic": "sra",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    46
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB2E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.",
    "instruction": "sra (iy+d)"
  }
};

// ld a,sra(iy+dd)
const variant_FD_CB_dd_2F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "sra (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    47
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB2F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in A.",
    "instruction": "sra (iy+d),a"
  }
};

// ld sra(iy+dd)
const variant_FD_CB_dd_2F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sra (iy+dd)"
  ],
  "tokens": [
    "sra",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    47
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB2F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in A.",
    "instruction": "sra (iy+d),a"
  }
};

// ld b,sll(iy+dd)
const variant_FD_CB_dd_30: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "sll (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    48
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB30",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in B.",
    "instruction": "sll (iy+d),b"
  }
};

// ld c,sll(iy+dd)
const variant_FD_CB_dd_31: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "sll (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    49
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB31",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in C.",
    "instruction": "sll (iy+d),c"
  }
};

// ld d,sll(iy+dd)
const variant_FD_CB_dd_32: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "sll (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    50
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB32",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in D.",
    "instruction": "sll (iy+d),d"
  }
};

// ld e,sll(iy+dd)
const variant_FD_CB_dd_33: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "sll (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    51
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB33",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in E.",
    "instruction": "sll (iy+d),e"
  }
};

// ld h,sll(iy+dd)
const variant_FD_CB_dd_34: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "sll (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    52
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB34",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in H.",
    "instruction": "sll (iy+d),h"
  }
};

// ld l,sll(iy+dd)
const variant_FD_CB_dd_35: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "sll (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    53
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB35",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in L.",
    "instruction": "sll (iy+d),l"
  }
};

// sll (iy+dd)
const variant_FD_CB_dd_36: OpcodeVariant = {
  "mnemonic": "sll",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    54
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB36",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.",
    "instruction": "sll (iy+d)"
  }
};

// ld a,sll(iy+dd)
const variant_FD_CB_dd_37: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "sll (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    55
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB37",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in A.",
    "instruction": "sll (iy+d),a"
  }
};

// ld sll(iy+dd)
const variant_FD_CB_dd_37_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sll (iy+dd)"
  ],
  "tokens": [
    "sll",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    55
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB37",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in A.",
    "instruction": "sll (iy+d),a"
  }
};

// ld b,srl(iy+dd)
const variant_FD_CB_dd_38: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "srl (iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    56
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB38",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in B.",
    "instruction": "srl (iy+d),b"
  }
};

// ld c,srl(iy+dd)
const variant_FD_CB_dd_39: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "srl (iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    57
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB39",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in C.",
    "instruction": "srl (iy+d),c"
  }
};

// ld d,srl(iy+dd)
const variant_FD_CB_dd_3A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "srl (iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    58
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB3A",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in D.",
    "instruction": "srl (iy+d),d"
  }
};

// ld e,srl(iy+dd)
const variant_FD_CB_dd_3B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "srl (iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    59
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB3B",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in E.",
    "instruction": "srl (iy+d),e"
  }
};

// ld h,srl(iy+dd)
const variant_FD_CB_dd_3C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "srl (iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    60
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB3C",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in H.",
    "instruction": "srl (iy+d),h"
  }
};

// ld l,srl(iy+dd)
const variant_FD_CB_dd_3D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "srl (iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    61
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB3D",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in L.",
    "instruction": "srl (iy+d),l"
  }
};

// srl (iy+dd)
const variant_FD_CB_dd_3E: OpcodeVariant = {
  "mnemonic": "srl",
  "params": [
    "(iy+dd)"
  ],
  "tokens": [
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    62
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB3E",
    "undocumented": false,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.",
    "instruction": "srl (iy+d)"
  }
};

// ld a,srl(iy+dd)
const variant_FD_CB_dd_3F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "srl (iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    63
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB3F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in A.",
    "instruction": "srl (iy+d),a"
  }
};

// ld srl(iy+dd)
const variant_FD_CB_dd_3F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "srl (iy+dd)"
  ],
  "tokens": [
    "srl",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    63
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB3F",
    "undocumented": true,
    "z180": false,
    "flags": "+0P0++",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "The contents of the memory location pointed to by IY plus <var>D</var> are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in A.",
    "instruction": "srl (iy+d),a"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_46: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    70
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB46",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_4E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    78
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB4E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_56: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    86
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB56",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_5E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    94
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB5E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_66: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    102
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB66",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_6E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    110
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB6E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_76: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    118
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB76",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_7E: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    126
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB7E",
    "undocumented": false,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// ld b,res 0,(iy+dd)
const variant_FD_CB_dd_80: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    128
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB80",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 0,(iy+d),b"
  }
};

// ld c,res 0,(iy+dd)
const variant_FD_CB_dd_81: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    129
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB81",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 0,(iy+d),c"
  }
};

// ld d,res 0,(iy+dd)
const variant_FD_CB_dd_82: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    130
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB82",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 0,(iy+d),d"
  }
};

// ld e,res 0,(iy+dd)
const variant_FD_CB_dd_83: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    131
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB83",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 0,(iy+d),e"
  }
};

// ld h,res 0,(iy+dd)
const variant_FD_CB_dd_84: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    132
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB84",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 0,(iy+d),h"
  }
};

// ld l,res 0,(iy+dd)
const variant_FD_CB_dd_85: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    133
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB85",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 0,(iy+d),l"
  }
};

// res 0,(iy+dd)
const variant_FD_CB_dd_86: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    134
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB86",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 0,(iy+d)"
  }
};

// ld a,res 0,(iy+dd)
const variant_FD_CB_dd_87: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    135
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB87",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 0,(iy+d),a"
  }
};

// ld res 0,(iy+dd)
const variant_FD_CB_dd_87_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 0",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    135
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB87",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 0,(iy+d),a"
  }
};

// ld b,res 1,(iy+dd)
const variant_FD_CB_dd_88: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    136
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB88",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 1,(iy+d),b"
  }
};

// ld c,res 1,(iy+dd)
const variant_FD_CB_dd_89: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    137
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB89",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 1,(iy+d),c"
  }
};

// ld d,res 1,(iy+dd)
const variant_FD_CB_dd_8A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    138
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB8A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 1,(iy+d),d"
  }
};

// ld e,res 1,(iy+dd)
const variant_FD_CB_dd_8B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    139
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB8B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 1,(iy+d),e"
  }
};

// ld h,res 1,(iy+dd)
const variant_FD_CB_dd_8C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    140
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB8C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 1,(iy+d),h"
  }
};

// ld l,res 1,(iy+dd)
const variant_FD_CB_dd_8D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    141
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB8D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 1,(iy+d),l"
  }
};

// res 1,(iy+dd)
const variant_FD_CB_dd_8E: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    142
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB8E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 1,(iy+d)"
  }
};

// ld a,res 1,(iy+dd)
const variant_FD_CB_dd_8F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    143
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB8F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 1,(iy+d),a"
  }
};

// ld res 1,(iy+dd)
const variant_FD_CB_dd_8F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 1",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    143
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB8F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 1,(iy+d),a"
  }
};

// ld b,res 2,(iy+dd)
const variant_FD_CB_dd_90: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    144
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB90",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 2,(iy+d),b"
  }
};

// ld c,res 2,(iy+dd)
const variant_FD_CB_dd_91: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    145
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB91",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 2,(iy+d),c"
  }
};

// ld d,res 2,(iy+dd)
const variant_FD_CB_dd_92: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    146
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB92",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 2,(iy+d),d"
  }
};

// ld e,res 2,(iy+dd)
const variant_FD_CB_dd_93: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    147
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB93",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 2,(iy+d),e"
  }
};

// ld h,res 2,(iy+dd)
const variant_FD_CB_dd_94: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    148
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB94",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 2,(iy+d),h"
  }
};

// ld l,res 2,(iy+dd)
const variant_FD_CB_dd_95: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    149
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB95",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 2,(iy+d),l"
  }
};

// res 2,(iy+dd)
const variant_FD_CB_dd_96: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    150
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB96",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 2,(iy+d)"
  }
};

// ld a,res 2,(iy+dd)
const variant_FD_CB_dd_97: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    151
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB97",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 2,(iy+d),a"
  }
};

// ld res 2,(iy+dd)
const variant_FD_CB_dd_97_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 2",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    151
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB97",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 2,(iy+d),a"
  }
};

// ld b,res 3,(iy+dd)
const variant_FD_CB_dd_98: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    152
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB98",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 3,(iy+d),b"
  }
};

// ld c,res 3,(iy+dd)
const variant_FD_CB_dd_99: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    153
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB99",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 3,(iy+d),c"
  }
};

// ld d,res 3,(iy+dd)
const variant_FD_CB_dd_9A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    154
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB9A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 3,(iy+d),d"
  }
};

// ld e,res 3,(iy+dd)
const variant_FD_CB_dd_9B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    155
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB9B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 3,(iy+d),e"
  }
};

// ld h,res 3,(iy+dd)
const variant_FD_CB_dd_9C: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    156
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB9C",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 3,(iy+d),h"
  }
};

// ld l,res 3,(iy+dd)
const variant_FD_CB_dd_9D: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    157
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB9D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 3,(iy+d),l"
  }
};

// res 3,(iy+dd)
const variant_FD_CB_dd_9E: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    158
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB9E",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 3,(iy+d)"
  }
};

// ld a,res 3,(iy+dd)
const variant_FD_CB_dd_9F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    159
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCB9F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 3,(iy+d),a"
  }
};

// ld res 3,(iy+dd)
const variant_FD_CB_dd_9F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 3",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    159
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCB9F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 3,(iy+d),a"
  }
};

// ld b,res 4,(iy+dd)
const variant_FD_CB_dd_A0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    160
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 4,(iy+d),b"
  }
};

// ld c,res 4,(iy+dd)
const variant_FD_CB_dd_A1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    161
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 4,(iy+d),c"
  }
};

// ld d,res 4,(iy+dd)
const variant_FD_CB_dd_A2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    162
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 4,(iy+d),d"
  }
};

// ld e,res 4,(iy+dd)
const variant_FD_CB_dd_A3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    163
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 4,(iy+d),e"
  }
};

// ld h,res 4,(iy+dd)
const variant_FD_CB_dd_A4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    164
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 4,(iy+d),h"
  }
};

// ld l,res 4,(iy+dd)
const variant_FD_CB_dd_A5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    165
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 4,(iy+d),l"
  }
};

// res 4,(iy+dd)
const variant_FD_CB_dd_A6: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    166
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 4,(iy+d)"
  }
};

// ld a,res 4,(iy+dd)
const variant_FD_CB_dd_A7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    167
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 4,(iy+d),a"
  }
};

// ld res 4,(iy+dd)
const variant_FD_CB_dd_A7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 4",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    167
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBA7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 4,(iy+d),a"
  }
};

// ld b,res 5,(iy+dd)
const variant_FD_CB_dd_A8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    168
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 5,(iy+d),b"
  }
};

// ld c,res 5,(iy+dd)
const variant_FD_CB_dd_A9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    169
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBA9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 5,(iy+d),c"
  }
};

// ld d,res 5,(iy+dd)
const variant_FD_CB_dd_AA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    170
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBAA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 5,(iy+d),d"
  }
};

// ld e,res 5,(iy+dd)
const variant_FD_CB_dd_AB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    171
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBAB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 5,(iy+d),e"
  }
};

// ld h,res 5,(iy+dd)
const variant_FD_CB_dd_AC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    172
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBAC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 5,(iy+d),h"
  }
};

// ld l,res 5,(iy+dd)
const variant_FD_CB_dd_AD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    173
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBAD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 5,(iy+d),l"
  }
};

// res 5,(iy+dd)
const variant_FD_CB_dd_AE: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    174
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBAE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 5,(iy+d)"
  }
};

// ld a,res 5,(iy+dd)
const variant_FD_CB_dd_AF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    175
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBAF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 5,(iy+d),a"
  }
};

// ld res 5,(iy+dd)
const variant_FD_CB_dd_AF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 5",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    175
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBAF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 5,(iy+d),a"
  }
};

// ld b,res 6,(iy+dd)
const variant_FD_CB_dd_B0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    176
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 6,(iy+d),b"
  }
};

// ld c,res 6,(iy+dd)
const variant_FD_CB_dd_B1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    177
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 6,(iy+d),c"
  }
};

// ld d,res 6,(iy+dd)
const variant_FD_CB_dd_B2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    178
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 6,(iy+d),d"
  }
};

// ld e,res 6,(iy+dd)
const variant_FD_CB_dd_B3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    179
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 6,(iy+d),e"
  }
};

// ld h,res 6,(iy+dd)
const variant_FD_CB_dd_B4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    180
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 6,(iy+d),h"
  }
};

// ld l,res 6,(iy+dd)
const variant_FD_CB_dd_B5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    181
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 6,(iy+d),l"
  }
};

// res 6,(iy+dd)
const variant_FD_CB_dd_B6: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    182
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 6,(iy+d)"
  }
};

// ld a,res 6,(iy+dd)
const variant_FD_CB_dd_B7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    183
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 6,(iy+d),a"
  }
};

// ld res 6,(iy+dd)
const variant_FD_CB_dd_B7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 6",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    183
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBB7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 6,(iy+d),a"
  }
};

// ld b,res 7,(iy+dd)
const variant_FD_CB_dd_B8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    184
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "res 7,(iy+d),b"
  }
};

// ld c,res 7,(iy+dd)
const variant_FD_CB_dd_B9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    185
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBB9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "res 7,(iy+d),c"
  }
};

// ld d,res 7,(iy+dd)
const variant_FD_CB_dd_BA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    186
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBBA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "res 7,(iy+d),d"
  }
};

// ld e,res 7,(iy+dd)
const variant_FD_CB_dd_BB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    187
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBBB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "res 7,(iy+d),e"
  }
};

// ld h,res 7,(iy+dd)
const variant_FD_CB_dd_BC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    188
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBBC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "res 7,(iy+d),h"
  }
};

// ld l,res 7,(iy+dd)
const variant_FD_CB_dd_BD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    189
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBBD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "res 7,(iy+d),l"
  }
};

// res 7,(iy+dd)
const variant_FD_CB_dd_BE: OpcodeVariant = {
  "mnemonic": "res",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    190
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBBE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "res 7,(iy+d)"
  }
};

// ld a,res 7,(iy+dd)
const variant_FD_CB_dd_BF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    191
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBBF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 7,(iy+d),a"
  }
};

// ld res 7,(iy+dd)
const variant_FD_CB_dd_BF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "res 7",
    "(iy+dd)"
  ],
  "tokens": [
    "res",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    191
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBBF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Resets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "res 7,(iy+d),a"
  }
};

// ld b,set 0,(iy+dd)
const variant_FD_CB_dd_C0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    192
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 0,(iy+d),b"
  }
};

// ld c,set 0,(iy+dd)
const variant_FD_CB_dd_C1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    193
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 0,(iy+d),c"
  }
};

// ld d,set 0,(iy+dd)
const variant_FD_CB_dd_C2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    194
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 0,(iy+d),d"
  }
};

// ld e,set 0,(iy+dd)
const variant_FD_CB_dd_C3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    195
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 0,(iy+d),e"
  }
};

// ld h,set 0,(iy+dd)
const variant_FD_CB_dd_C4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    196
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 0,(iy+d),h"
  }
};

// ld l,set 0,(iy+dd)
const variant_FD_CB_dd_C5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    197
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 0,(iy+d),l"
  }
};

// set 0,(iy+dd)
const variant_FD_CB_dd_C6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    198
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 0,(iy+d)"
  }
};

// ld a,set 0,(iy+dd)
const variant_FD_CB_dd_C7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    199
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 0,(iy+d),a"
  }
};

// ld set 0,(iy+dd)
const variant_FD_CB_dd_C7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 0",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    199
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBC7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 0 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 0,(iy+d),a"
  }
};

// ld b,set 1,(iy+dd)
const variant_FD_CB_dd_C8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    200
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 1,(iy+d),b"
  }
};

// ld c,set 1,(iy+dd)
const variant_FD_CB_dd_C9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    201
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBC9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 1,(iy+d),c"
  }
};

// ld d,set 1,(iy+dd)
const variant_FD_CB_dd_CA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    202
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBCA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 1,(iy+d),d"
  }
};

// ld e,set 1,(iy+dd)
const variant_FD_CB_dd_CB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    203
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBCB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 1,(iy+d),e"
  }
};

// ld h,set 1,(iy+dd)
const variant_FD_CB_dd_CC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    204
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBCC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 1,(iy+d),h"
  }
};

// ld l,set 1,(iy+dd)
const variant_FD_CB_dd_CD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    205
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBCD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 1,(iy+d),l"
  }
};

// set 1,(iy+dd)
const variant_FD_CB_dd_CE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    206
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBCE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 1,(iy+d)"
  }
};

// ld a,set 1,(iy+dd)
const variant_FD_CB_dd_CF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    207
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBCF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 1,(iy+d),a"
  }
};

// ld set 1,(iy+dd)
const variant_FD_CB_dd_CF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 1",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    207
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBCF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 1 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 1,(iy+d),a"
  }
};

// ld b,set 2,(iy+dd)
const variant_FD_CB_dd_D0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    208
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 2,(iy+d),b"
  }
};

// ld c,set 2,(iy+dd)
const variant_FD_CB_dd_D1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    209
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 2,(iy+d),c"
  }
};

// ld d,set 2,(iy+dd)
const variant_FD_CB_dd_D2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    210
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 2,(iy+d),d"
  }
};

// ld e,set 2,(iy+dd)
const variant_FD_CB_dd_D3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    211
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 2,(iy+d),e"
  }
};

// ld h,set 2,(iy+dd)
const variant_FD_CB_dd_D4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    212
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 2,(iy+d),h"
  }
};

// ld l,set 2,(iy+dd)
const variant_FD_CB_dd_D5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    213
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 2,(iy+d),l"
  }
};

// set 2,(iy+dd)
const variant_FD_CB_dd_D6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    214
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 2,(iy+d)"
  }
};

// ld a,set 2,(iy+dd)
const variant_FD_CB_dd_D7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    215
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 2,(iy+d),a"
  }
};

// ld set 2,(iy+dd)
const variant_FD_CB_dd_D7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 2",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    215
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBD7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 2 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 2,(iy+d),a"
  }
};

// ld b,set 3,(iy+dd)
const variant_FD_CB_dd_D8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    216
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 3,(iy+d),b"
  }
};

// ld c,set 3,(iy+dd)
const variant_FD_CB_dd_D9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    217
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBD9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 3,(iy+d),c"
  }
};

// ld d,set 3,(iy+dd)
const variant_FD_CB_dd_DA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    218
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBDA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 3,(iy+d),d"
  }
};

// ld e,set 3,(iy+dd)
const variant_FD_CB_dd_DB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    219
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBDB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 3,(iy+d),e"
  }
};

// ld h,set 3,(iy+dd)
const variant_FD_CB_dd_DC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    220
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBDC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 3,(iy+d),h"
  }
};

// ld l,set 3,(iy+dd)
const variant_FD_CB_dd_DD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    221
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBDD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 3,(iy+d),l"
  }
};

// set 3,(iy+dd)
const variant_FD_CB_dd_DE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    222
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBDE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 3,(iy+d)"
  }
};

// ld a,set 3,(iy+dd)
const variant_FD_CB_dd_DF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    223
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBDF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 3,(iy+d),a"
  }
};

// ld set 3,(iy+dd)
const variant_FD_CB_dd_DF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 3",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    223
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBDF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 3 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 3,(iy+d),a"
  }
};

// ld b,set 4,(iy+dd)
const variant_FD_CB_dd_E0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    224
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 4,(iy+d),b"
  }
};

// ld c,set 4,(iy+dd)
const variant_FD_CB_dd_E1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    225
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 4,(iy+d),c"
  }
};

// ld d,set 4,(iy+dd)
const variant_FD_CB_dd_E2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    226
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 4,(iy+d),d"
  }
};

// ld e,set 4,(iy+dd)
const variant_FD_CB_dd_E3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    227
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 4,(iy+d),e"
  }
};

// ld h,set 4,(iy+dd)
const variant_FD_CB_dd_E4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    228
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 4,(iy+d),h"
  }
};

// ld l,set 4,(iy+dd)
const variant_FD_CB_dd_E5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    229
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 4,(iy+d),l"
  }
};

// set 4,(iy+dd)
const variant_FD_CB_dd_E6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    230
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 4,(iy+d)"
  }
};

// ld a,set 4,(iy+dd)
const variant_FD_CB_dd_E7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    231
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 4,(iy+d),a"
  }
};

// ld set 4,(iy+dd)
const variant_FD_CB_dd_E7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 4",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    231
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBE7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 4 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 4,(iy+d),a"
  }
};

// ld b,set 5,(iy+dd)
const variant_FD_CB_dd_E8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    232
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 5,(iy+d),b"
  }
};

// ld c,set 5,(iy+dd)
const variant_FD_CB_dd_E9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    233
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBE9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 5,(iy+d),c"
  }
};

// ld d,set 5,(iy+dd)
const variant_FD_CB_dd_EA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    234
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBEA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 5,(iy+d),d"
  }
};

// ld e,set 5,(iy+dd)
const variant_FD_CB_dd_EB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    235
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBEB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 5,(iy+d),e"
  }
};

// ld h,set 5,(iy+dd)
const variant_FD_CB_dd_EC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    236
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBEC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 5,(iy+d),h"
  }
};

// ld l,set 5,(iy+dd)
const variant_FD_CB_dd_ED: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    237
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBED",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 5,(iy+d),l"
  }
};

// set 5,(iy+dd)
const variant_FD_CB_dd_EE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    238
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBEE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 5,(iy+d)"
  }
};

// ld a,set 5,(iy+dd)
const variant_FD_CB_dd_EF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    239
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBEF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 5,(iy+d),a"
  }
};

// ld set 5,(iy+dd)
const variant_FD_CB_dd_EF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 5",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    239
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBEF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 5 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 5,(iy+d),a"
  }
};

// ld b,set 6,(iy+dd)
const variant_FD_CB_dd_F0: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    240
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF0",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 6,(iy+d),b"
  }
};

// ld c,set 6,(iy+dd)
const variant_FD_CB_dd_F1: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    241
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF1",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 6,(iy+d),c"
  }
};

// ld d,set 6,(iy+dd)
const variant_FD_CB_dd_F2: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    242
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF2",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 6,(iy+d),d"
  }
};

// ld e,set 6,(iy+dd)
const variant_FD_CB_dd_F3: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    243
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF3",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 6,(iy+d),e"
  }
};

// ld h,set 6,(iy+dd)
const variant_FD_CB_dd_F4: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    244
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF4",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 6,(iy+d),h"
  }
};

// ld l,set 6,(iy+dd)
const variant_FD_CB_dd_F5: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    245
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF5",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 6,(iy+d),l"
  }
};

// set 6,(iy+dd)
const variant_FD_CB_dd_F6: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    246
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF6",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 6,(iy+d)"
  }
};

// ld a,set 6,(iy+dd)
const variant_FD_CB_dd_F7: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    247
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 6,(iy+d),a"
  }
};

// ld set 6,(iy+dd)
const variant_FD_CB_dd_F7_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 6",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    247
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBF7",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 6 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 6,(iy+d),a"
  }
};

// ld b,set 7,(iy+dd)
const variant_FD_CB_dd_F8: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "b",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    248
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF8",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in B.",
    "instruction": "set 7,(iy+d),b"
  }
};

// ld c,set 7,(iy+dd)
const variant_FD_CB_dd_F9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "c",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    249
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBF9",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in C.",
    "instruction": "set 7,(iy+d),c"
  }
};

// ld d,set 7,(iy+dd)
const variant_FD_CB_dd_FA: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "d",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    250
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBFA",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in D.",
    "instruction": "set 7,(iy+d),d"
  }
};

// ld e,set 7,(iy+dd)
const variant_FD_CB_dd_FB: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "e",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    251
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBFB",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in E.",
    "instruction": "set 7,(iy+d),e"
  }
};

// ld h,set 7,(iy+dd)
const variant_FD_CB_dd_FC: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "h",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "h",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    252
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBFC",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in H.",
    "instruction": "set 7,(iy+d),h"
  }
};

// ld l,set 7,(iy+dd)
const variant_FD_CB_dd_FD: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "l",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "l",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    253
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBFD",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in L.",
    "instruction": "set 7,(iy+d),l"
  }
};

// set 7,(iy+dd)
const variant_FD_CB_dd_FE: OpcodeVariant = {
  "mnemonic": "set",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    254
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBFE",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "set 7,(iy+d)"
  }
};

// ld a,set 7,(iy+dd)
const variant_FD_CB_dd_FF: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "a",
    ",",
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    255
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDCBFF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 7,(iy+d),a"
  }
};

// ld set 7,(iy+dd)
const variant_FD_CB_dd_FF_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "set 7",
    "(iy+dd)"
  ],
  "tokens": [
    "set",
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    255
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDCBFF",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Sets bit 7 of the memory location pointed to by IY plus <var>D</var>. The result is then stored in A.",
    "instruction": "set 7,(iy+d),a"
  }
};

// pop iy
const variant_FD_E1: OpcodeVariant = {
  "mnemonic": "pop",
  "params": [
    "iy"
  ],
  "tokens": [
    "iy"
  ],
  "opcodes": [
    253,
    225
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDE1",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "The memory location pointed to by SP is stored into IYL and SP is incremented. The memory location pointed to by SP is stored into IYH and SP is incremented again.",
    "instruction": "pop iy"
  }
};

// ex (sp),iy
const variant_FD_E3: OpcodeVariant = {
  "mnemonic": "ex",
  "params": [
    "(sp)",
    "iy"
  ],
  "tokens": [
    "(",
    "sp",
    ")",
    ",",
    "iy"
  ],
  "opcodes": [
    253,
    227
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDE3",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 23,
    "without_jump_clock_count": 23,
    "description": "Exchanges (SP) with IYL, and (SP+1) with IYH.",
    "instruction": "ex (sp),iy"
  }
};

// push iy
const variant_FD_E5: OpcodeVariant = {
  "mnemonic": "push",
  "params": [
    "iy"
  ],
  "tokens": [
    "iy"
  ],
  "opcodes": [
    253,
    229
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDE5",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 15,
    "without_jump_clock_count": 15,
    "description": "SP is decremented and IYH is stored into the memory location pointed to by SP. SP is decremented again and IYL is stored into the memory location pointed to by SP.",
    "instruction": "push iy"
  }
};

// jp iy
const variant_FD_E9: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "iy"
  ],
  "tokens": [
    "iy"
  ],
  "opcodes": [
    253,
    233
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDE9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Loads the value of IY into PC.",
    "instruction": "jp (iy)"
  }
};

// jp (iy)
const variant_FD_E9_pseudo: OpcodeVariant = {
  "mnemonic": "jp",
  "params": [
    "(iy)"
  ],
  "tokens": [
    "(",
    "iy",
    ")"
  ],
  "opcodes": [
    253,
    233
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FDE9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Loads the value of IY into PC.",
    "instruction": "jp (iy)"
  }
};

// ld sp,iy
const variant_FD_F9: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "sp",
    "iy"
  ],
  "tokens": [
    "sp",
    ",",
    "iy"
  ],
  "opcodes": [
    253,
    249
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FDF9",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Loads the value of IY into SP.",
    "instruction": "ld sp,iy"
  }
};

// cp a,nn
const variant_FE_nn: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "a",
    "nn"
  ],
  "tokens": [
    "a",
    ",",
    "nn"
  ],
  "opcodes": [
    254,
    "nn"
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts <var>n</var> from A and affects flags according to the result. A is not modified.",
    "instruction": "cp n"
  }
};

// cp nn
const variant_FE_nn_pseudo: OpcodeVariant = {
  "mnemonic": "cp",
  "params": [
    "nn"
  ],
  "tokens": [
    "nn"
  ],
  "opcodes": [
    254,
    "nn"
  ],
  "isPseudo": true,
  "clr": {
    "opcodes": "FE",
    "undocumented": false,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 7,
    "without_jump_clock_count": 7,
    "description": "Subtracts <var>n</var> from A and affects flags according to the result. A is not modified.",
    "instruction": "cp n"
  }
};

// rst 56
const variant_FF: OpcodeVariant = {
  "mnemonic": "rst",
  "params": [
    "38"
  ],
  "tokens": [
    "56"
  ],
  "opcodes": [
    255
  ],
  "isPseudo": false,
  "clr": {
    "opcodes": "FF",
    "undocumented": false,
    "z180": false,
    "flags": "------",
    "byte_count": 1,
    "with_jump_clock_count": 11,
    "without_jump_clock_count": 11,
    "description": "The current PC value plus one is pushed onto the stack, then is loaded with 56.",
    "instruction": "rst 38h"
  }
};

// ld b,b
const variant_DD_40: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "b"
  ],
  "tokens": [
    "b",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    64
  ],
  "isPseudo": false,
  "aliasOf": variant_40,
  "clr": {
    "opcodes": "DD40",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into B.",
    "instruction": "ld b,b"
  }
};

// ld b,c
const variant_DD_41: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "c"
  ],
  "tokens": [
    "b",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    65
  ],
  "isPseudo": false,
  "aliasOf": variant_41,
  "clr": {
    "opcodes": "DD41",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into B.",
    "instruction": "ld b,c"
  }
};

// ld b,d
const variant_DD_42: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "d"
  ],
  "tokens": [
    "b",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    66
  ],
  "isPseudo": false,
  "aliasOf": variant_42,
  "clr": {
    "opcodes": "DD42",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into B.",
    "instruction": "ld b,d"
  }
};

// ld b,e
const variant_DD_43: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "e"
  ],
  "tokens": [
    "b",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    67
  ],
  "isPseudo": false,
  "aliasOf": variant_43,
  "clr": {
    "opcodes": "DD43",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into B.",
    "instruction": "ld b,e"
  }
};

// ld b,a
const variant_DD_47: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "a"
  ],
  "tokens": [
    "b",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    71
  ],
  "isPseudo": false,
  "aliasOf": variant_47,
  "clr": {
    "opcodes": "DD47",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into B.",
    "instruction": "ld b,a"
  }
};

// ld c,b
const variant_DD_48: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "b"
  ],
  "tokens": [
    "c",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    72
  ],
  "isPseudo": false,
  "aliasOf": variant_48,
  "clr": {
    "opcodes": "DD48",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into C.",
    "instruction": "ld c,b"
  }
};

// ld c,c
const variant_DD_49: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "c"
  ],
  "tokens": [
    "c",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    73
  ],
  "isPseudo": false,
  "aliasOf": variant_49,
  "clr": {
    "opcodes": "DD49",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into C.",
    "instruction": "ld c,c"
  }
};

// ld c,d
const variant_DD_4A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "d"
  ],
  "tokens": [
    "c",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    74
  ],
  "isPseudo": false,
  "aliasOf": variant_4A,
  "clr": {
    "opcodes": "DD4A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into C.",
    "instruction": "ld c,d"
  }
};

// ld c,e
const variant_DD_4B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "e"
  ],
  "tokens": [
    "c",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    75
  ],
  "isPseudo": false,
  "aliasOf": variant_4B,
  "clr": {
    "opcodes": "DD4B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into C.",
    "instruction": "ld c,e"
  }
};

// ld c,a
const variant_DD_4F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "a"
  ],
  "tokens": [
    "c",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    79
  ],
  "isPseudo": false,
  "aliasOf": variant_4F,
  "clr": {
    "opcodes": "DD4F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into C.",
    "instruction": "ld c,a"
  }
};

// ld d,b
const variant_DD_50: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "b"
  ],
  "tokens": [
    "d",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    80
  ],
  "isPseudo": false,
  "aliasOf": variant_50,
  "clr": {
    "opcodes": "DD50",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into D.",
    "instruction": "ld d,b"
  }
};

// ld d,c
const variant_DD_51: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "c"
  ],
  "tokens": [
    "d",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    81
  ],
  "isPseudo": false,
  "aliasOf": variant_51,
  "clr": {
    "opcodes": "DD51",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into D.",
    "instruction": "ld d,c"
  }
};

// ld d,d
const variant_DD_52: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "d"
  ],
  "tokens": [
    "d",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    82
  ],
  "isPseudo": false,
  "aliasOf": variant_52,
  "clr": {
    "opcodes": "DD52",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into D.",
    "instruction": "ld d,d"
  }
};

// ld d,e
const variant_DD_53: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "e"
  ],
  "tokens": [
    "d",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    83
  ],
  "isPseudo": false,
  "aliasOf": variant_53,
  "clr": {
    "opcodes": "DD53",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into D.",
    "instruction": "ld d,e"
  }
};

// ld d,a
const variant_DD_57: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "a"
  ],
  "tokens": [
    "d",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    87
  ],
  "isPseudo": false,
  "aliasOf": variant_57,
  "clr": {
    "opcodes": "DD57",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into D.",
    "instruction": "ld d,a"
  }
};

// ld e,b
const variant_DD_58: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "b"
  ],
  "tokens": [
    "e",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    88
  ],
  "isPseudo": false,
  "aliasOf": variant_58,
  "clr": {
    "opcodes": "DD58",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into E.",
    "instruction": "ld e,b"
  }
};

// ld e,c
const variant_DD_59: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "c"
  ],
  "tokens": [
    "e",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    89
  ],
  "isPseudo": false,
  "aliasOf": variant_59,
  "clr": {
    "opcodes": "DD59",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into E.",
    "instruction": "ld e,c"
  }
};

// ld e,d
const variant_DD_5A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "d"
  ],
  "tokens": [
    "e",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    90
  ],
  "isPseudo": false,
  "aliasOf": variant_5A,
  "clr": {
    "opcodes": "DD5A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into E.",
    "instruction": "ld e,d"
  }
};

// ld e,e
const variant_DD_5B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "e"
  ],
  "tokens": [
    "e",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    91
  ],
  "isPseudo": false,
  "aliasOf": variant_5B,
  "clr": {
    "opcodes": "DD5B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into E.",
    "instruction": "ld e,e"
  }
};

// ld e,a
const variant_DD_5F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "a"
  ],
  "tokens": [
    "e",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    95
  ],
  "isPseudo": false,
  "aliasOf": variant_5F,
  "clr": {
    "opcodes": "DD5F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into E.",
    "instruction": "ld e,a"
  }
};

// ld a,b
const variant_DD_78: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    221,
    120
  ],
  "isPseudo": false,
  "aliasOf": variant_78,
  "clr": {
    "opcodes": "DD78",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into A.",
    "instruction": "ld a,b"
  }
};

// ld b
const variant_DD_78_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    221,
    120
  ],
  "isPseudo": true,
  "aliasOf": variant_78_pseudo,
  "clr": {
    "opcodes": "DD78",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into A.",
    "instruction": "ld a,b"
  }
};

// ld a,c
const variant_DD_79: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    221,
    121
  ],
  "isPseudo": false,
  "aliasOf": variant_79,
  "clr": {
    "opcodes": "DD79",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into A.",
    "instruction": "ld a,c"
  }
};

// ld c
const variant_DD_79_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    221,
    121
  ],
  "isPseudo": true,
  "aliasOf": variant_79_pseudo,
  "clr": {
    "opcodes": "DD79",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into A.",
    "instruction": "ld a,c"
  }
};

// ld a,d
const variant_DD_7A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    221,
    122
  ],
  "isPseudo": false,
  "aliasOf": variant_7A,
  "clr": {
    "opcodes": "DD7A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into A.",
    "instruction": "ld a,d"
  }
};

// ld d
const variant_DD_7A_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    221,
    122
  ],
  "isPseudo": true,
  "aliasOf": variant_7A_pseudo,
  "clr": {
    "opcodes": "DD7A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into A.",
    "instruction": "ld a,d"
  }
};

// ld a,e
const variant_DD_7B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    221,
    123
  ],
  "isPseudo": false,
  "aliasOf": variant_7B,
  "clr": {
    "opcodes": "DD7B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into A.",
    "instruction": "ld a,e"
  }
};

// ld e
const variant_DD_7B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    221,
    123
  ],
  "isPseudo": true,
  "aliasOf": variant_7B_pseudo,
  "clr": {
    "opcodes": "DD7B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into A.",
    "instruction": "ld a,e"
  }
};

// ld a,a
const variant_DD_7F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    221,
    127
  ],
  "isPseudo": false,
  "aliasOf": variant_7F,
  "clr": {
    "opcodes": "DD7F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into A.",
    "instruction": "ld a,a"
  }
};

// ld a
const variant_DD_7F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    221,
    127
  ],
  "isPseudo": true,
  "aliasOf": variant_7F_pseudo,
  "clr": {
    "opcodes": "DD7F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into A.",
    "instruction": "ld a,a"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_40: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    64
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB40",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_41: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    65
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB41",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_42: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    66
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB42",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_43: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    67
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB43",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_44: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    68
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB44",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_45: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    69
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB45",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 0,(ix+dd)
const variant_DD_CB_dd_47: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(ix+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    71
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_46,
  "clr": {
    "opcodes": "DDCB47",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 0,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_48: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    72
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB48",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_49: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    73
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB49",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_4A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    74
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB4A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_4B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    75
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB4B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_4C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    76
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB4C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_4D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    77
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB4D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 1,(ix+dd)
const variant_DD_CB_dd_4F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(ix+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    79
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_4E,
  "clr": {
    "opcodes": "DDCB4F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 1,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_50: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    80
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB50",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_51: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    81
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB51",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_52: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    82
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB52",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_53: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    83
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB53",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_54: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    84
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB54",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_55: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    85
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB55",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 2,(ix+dd)
const variant_DD_CB_dd_57: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(ix+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    87
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_56,
  "clr": {
    "opcodes": "DDCB57",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 2,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_58: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    88
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB58",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_59: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    89
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB59",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_5A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    90
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB5A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_5B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    91
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB5B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_5C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    92
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB5C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_5D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    93
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB5D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 3,(ix+dd)
const variant_DD_CB_dd_5F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(ix+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    95
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_5E,
  "clr": {
    "opcodes": "DDCB5F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 3,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_60: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    96
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB60",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_61: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    97
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB61",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_62: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    98
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB62",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_63: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    99
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB63",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_64: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    100
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB64",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_65: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    101
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB65",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 4,(ix+dd)
const variant_DD_CB_dd_67: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(ix+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    103
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_66,
  "clr": {
    "opcodes": "DDCB67",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 4,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_68: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    104
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB68",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_69: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    105
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB69",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_6A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    106
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB6A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_6B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    107
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB6B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_6C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    108
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB6C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_6D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    109
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB6D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 5,(ix+dd)
const variant_DD_CB_dd_6F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(ix+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    111
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_6E,
  "clr": {
    "opcodes": "DDCB6F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 5,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_70: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    112
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB70",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_71: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    113
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB71",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_72: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    114
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB72",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_73: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    115
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB73",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_74: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    116
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB74",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_75: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    117
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB75",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 6,(ix+dd)
const variant_DD_CB_dd_77: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(ix+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    119
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_76,
  "clr": {
    "opcodes": "DDCB77",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 6,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_78: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    120
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB78",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_79: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    121
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB79",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_7A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    122
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB7A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_7B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    123
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB7B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_7C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    124
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB7C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_7D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    125
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB7D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// bit 7,(ix+dd)
const variant_DD_CB_dd_7F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(ix+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "ix",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    221,
    203,
    "dd",
    127
  ],
  "isPseudo": false,
  "aliasOf": variant_DD_CB_dd_7E,
  "clr": {
    "opcodes": "DDCB7F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IX plus <var>D</var>.",
    "instruction": "bit 7,(ix+d)"
  }
};

// neg 
const variant_ED_4C: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    76
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED4C",
    "undocumented": false,
    "z180": true,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 17,
    "description": "The contents of B and C are multiplied and stored in BC.",
    "instruction": "mlt bc"
  }
};

// im 0
const variant_ED_4E: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "0"
  ],
  "tokens": [
    "0"
  ],
  "opcodes": [
    237,
    78
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_46,
  "clr": {
    "opcodes": "ED4E",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 0.",
    "instruction": "im 0"
  }
};

// neg 
const variant_ED_54: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    84
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED54",
    "undocumented": true,
    "z180": false,
    "flags": "++V+++",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are negated (two's complement). Operation is the same as subtracting A from zero.",
    "instruction": "neg"
  }
};

// retn 
const variant_ED_55: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    85
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_45,
  "clr": {
    "opcodes": "ED55",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// neg 
const variant_ED_5C: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    92
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED5C",
    "undocumented": false,
    "z180": true,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 17,
    "description": "The contents of D and E are multiplied and stored in DE.",
    "instruction": "mlt de"
  }
};

// retn 
const variant_ED_5D: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    93
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_45,
  "clr": {
    "opcodes": "ED5D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// ld (nnnn),hl
const variant_ED_63_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "(nnnn)",
    "hl"
  ],
  "tokens": [
    "(",
    "nnnn",
    ")",
    ",",
    "hl"
  ],
  "opcodes": [
    237,
    99,
    "nnnn"
  ],
  "isPseudo": false,
  "aliasOf": variant_22_nnnn,
  "clr": {
    "opcodes": "ED63",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Stores HL into the memory location pointed to by <var>nn</var>.",
    "instruction": "ld (nn),hl"
  }
};

// neg 
const variant_ED_64: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    100
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED64",
    "undocumented": false,
    "z180": true,
    "flags": "00P1++",
    "byte_count": 3,
    "with_jump_clock_count": 10,
    "without_jump_clock_count": 10,
    "description": "Calculates the bitwise AND of <var>n</var> with A and affects flags according to the result. A is not modified.",
    "instruction": "tst n"
  }
};

// retn 
const variant_ED_65: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    101
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_45,
  "clr": {
    "opcodes": "ED65",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// im 0
const variant_ED_66: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "0"
  ],
  "tokens": [
    "0"
  ],
  "opcodes": [
    237,
    102
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_46,
  "clr": {
    "opcodes": "ED66",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 0.",
    "instruction": "im 0"
  }
};

// ld hl,(nnnn)
const variant_ED_6B_nnnn: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "hl",
    "(nnnn)"
  ],
  "tokens": [
    "hl",
    ",",
    "(",
    "nnnn",
    ")"
  ],
  "opcodes": [
    237,
    107,
    "nnnn"
  ],
  "isPseudo": false,
  "aliasOf": variant_2A_nnnn,
  "clr": {
    "opcodes": "ED6B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Loads the value pointed to by <var>nn</var> into HL.",
    "instruction": "ld hl,(nn)"
  }
};

// neg 
const variant_ED_6C: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    108
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED6C",
    "undocumented": false,
    "z180": true,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 17,
    "description": "The contents of H and L are multiplied and stored in HL.",
    "instruction": "mlt hl"
  }
};

// retn 
const variant_ED_6D: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    109
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_45,
  "clr": {
    "opcodes": "ED6D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// im 0
const variant_ED_6E: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "0"
  ],
  "tokens": [
    "0"
  ],
  "opcodes": [
    237,
    110
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_46,
  "clr": {
    "opcodes": "ED6E",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 0.",
    "instruction": "im 0"
  }
};

// neg 
const variant_ED_74: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    116
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED74",
    "undocumented": false,
    "z180": true,
    "flags": "00P1++",
    "byte_count": 3,
    "with_jump_clock_count": 12,
    "without_jump_clock_count": 12,
    "description": "Calculates the bitwise AND of <var>n</var> with (C) and affects flags according to the result. (C) is not modified.",
    "instruction": "tstio n"
  }
};

// retn 
const variant_ED_75: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    117
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_45,
  "clr": {
    "opcodes": "ED75",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// im 1
const variant_ED_76: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "1"
  ],
  "tokens": [
    "1"
  ],
  "opcodes": [
    237,
    118
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_56,
  "clr": {
    "opcodes": "ED76",
    "undocumented": false,
    "z180": true,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The CPU enters SLEEP mode.",
    "instruction": "slp"
  }
};

// neg 
const variant_ED_7C: OpcodeVariant = {
  "mnemonic": "neg",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    124
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_44,
  "clr": {
    "opcodes": "ED7C",
    "undocumented": false,
    "z180": true,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 17,
    "without_jump_clock_count": 17,
    "description": "The contents of SPH and SPL are multiplied and stored in SP.",
    "instruction": "mlt sp"
  }
};

// retn 
const variant_ED_7D: OpcodeVariant = {
  "mnemonic": "retn",
  "params": [],
  "tokens": [],
  "opcodes": [
    237,
    125
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_45,
  "clr": {
    "opcodes": "ED7D",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 14,
    "without_jump_clock_count": 14,
    "description": "Used at the end of a non-maskable interrupt service routine (located at 0066h) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.",
    "instruction": "retn"
  }
};

// im 2
const variant_ED_7E: OpcodeVariant = {
  "mnemonic": "im",
  "params": [
    "2"
  ],
  "tokens": [
    "2"
  ],
  "opcodes": [
    237,
    126
  ],
  "isPseudo": false,
  "aliasOf": variant_ED_5E,
  "clr": {
    "opcodes": "ED7E",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "Sets interrupt mode 2.",
    "instruction": "im 2"
  }
};

// ld b,b
const variant_FD_40: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "b"
  ],
  "tokens": [
    "b",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    64
  ],
  "isPseudo": false,
  "aliasOf": variant_40,
  "clr": {
    "opcodes": "FD40",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into B.",
    "instruction": "ld b,b"
  }
};

// ld b,c
const variant_FD_41: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "c"
  ],
  "tokens": [
    "b",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    65
  ],
  "isPseudo": false,
  "aliasOf": variant_41,
  "clr": {
    "opcodes": "FD41",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into B.",
    "instruction": "ld b,c"
  }
};

// ld b,d
const variant_FD_42: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "d"
  ],
  "tokens": [
    "b",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    66
  ],
  "isPseudo": false,
  "aliasOf": variant_42,
  "clr": {
    "opcodes": "FD42",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into B.",
    "instruction": "ld b,d"
  }
};

// ld b,e
const variant_FD_43: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "e"
  ],
  "tokens": [
    "b",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    67
  ],
  "isPseudo": false,
  "aliasOf": variant_43,
  "clr": {
    "opcodes": "FD43",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into B.",
    "instruction": "ld b,e"
  }
};

// ld b,a
const variant_FD_47: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b",
    "a"
  ],
  "tokens": [
    "b",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    71
  ],
  "isPseudo": false,
  "aliasOf": variant_47,
  "clr": {
    "opcodes": "FD47",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into B.",
    "instruction": "ld b,a"
  }
};

// ld c,b
const variant_FD_48: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "b"
  ],
  "tokens": [
    "c",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    72
  ],
  "isPseudo": false,
  "aliasOf": variant_48,
  "clr": {
    "opcodes": "FD48",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into C.",
    "instruction": "ld c,b"
  }
};

// ld c,c
const variant_FD_49: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "c"
  ],
  "tokens": [
    "c",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    73
  ],
  "isPseudo": false,
  "aliasOf": variant_49,
  "clr": {
    "opcodes": "FD49",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into C.",
    "instruction": "ld c,c"
  }
};

// ld c,d
const variant_FD_4A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "d"
  ],
  "tokens": [
    "c",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    74
  ],
  "isPseudo": false,
  "aliasOf": variant_4A,
  "clr": {
    "opcodes": "FD4A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into C.",
    "instruction": "ld c,d"
  }
};

// ld c,e
const variant_FD_4B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "e"
  ],
  "tokens": [
    "c",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    75
  ],
  "isPseudo": false,
  "aliasOf": variant_4B,
  "clr": {
    "opcodes": "FD4B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into C.",
    "instruction": "ld c,e"
  }
};

// ld c,a
const variant_FD_4F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c",
    "a"
  ],
  "tokens": [
    "c",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    79
  ],
  "isPseudo": false,
  "aliasOf": variant_4F,
  "clr": {
    "opcodes": "FD4F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into C.",
    "instruction": "ld c,a"
  }
};

// ld d,b
const variant_FD_50: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "b"
  ],
  "tokens": [
    "d",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    80
  ],
  "isPseudo": false,
  "aliasOf": variant_50,
  "clr": {
    "opcodes": "FD50",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into D.",
    "instruction": "ld d,b"
  }
};

// ld d,c
const variant_FD_51: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "c"
  ],
  "tokens": [
    "d",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    81
  ],
  "isPseudo": false,
  "aliasOf": variant_51,
  "clr": {
    "opcodes": "FD51",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into D.",
    "instruction": "ld d,c"
  }
};

// ld d,d
const variant_FD_52: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "d"
  ],
  "tokens": [
    "d",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    82
  ],
  "isPseudo": false,
  "aliasOf": variant_52,
  "clr": {
    "opcodes": "FD52",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into D.",
    "instruction": "ld d,d"
  }
};

// ld d,e
const variant_FD_53: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "e"
  ],
  "tokens": [
    "d",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    83
  ],
  "isPseudo": false,
  "aliasOf": variant_53,
  "clr": {
    "opcodes": "FD53",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into D.",
    "instruction": "ld d,e"
  }
};

// ld d,a
const variant_FD_57: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d",
    "a"
  ],
  "tokens": [
    "d",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    87
  ],
  "isPseudo": false,
  "aliasOf": variant_57,
  "clr": {
    "opcodes": "FD57",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into D.",
    "instruction": "ld d,a"
  }
};

// ld e,b
const variant_FD_58: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "b"
  ],
  "tokens": [
    "e",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    88
  ],
  "isPseudo": false,
  "aliasOf": variant_58,
  "clr": {
    "opcodes": "FD58",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into E.",
    "instruction": "ld e,b"
  }
};

// ld e,c
const variant_FD_59: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "c"
  ],
  "tokens": [
    "e",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    89
  ],
  "isPseudo": false,
  "aliasOf": variant_59,
  "clr": {
    "opcodes": "FD59",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into E.",
    "instruction": "ld e,c"
  }
};

// ld e,d
const variant_FD_5A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "d"
  ],
  "tokens": [
    "e",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    90
  ],
  "isPseudo": false,
  "aliasOf": variant_5A,
  "clr": {
    "opcodes": "FD5A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into E.",
    "instruction": "ld e,d"
  }
};

// ld e,e
const variant_FD_5B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "e"
  ],
  "tokens": [
    "e",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    91
  ],
  "isPseudo": false,
  "aliasOf": variant_5B,
  "clr": {
    "opcodes": "FD5B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into E.",
    "instruction": "ld e,e"
  }
};

// ld e,a
const variant_FD_5F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e",
    "a"
  ],
  "tokens": [
    "e",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    95
  ],
  "isPseudo": false,
  "aliasOf": variant_5F,
  "clr": {
    "opcodes": "FD5F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into E.",
    "instruction": "ld e,a"
  }
};

// ld a,b
const variant_FD_78: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "b"
  ],
  "tokens": [
    "a",
    ",",
    "b"
  ],
  "opcodes": [
    253,
    120
  ],
  "isPseudo": false,
  "aliasOf": variant_78,
  "clr": {
    "opcodes": "FD78",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into A.",
    "instruction": "ld a,b"
  }
};

// ld b
const variant_FD_78_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "b"
  ],
  "tokens": [
    "b"
  ],
  "opcodes": [
    253,
    120
  ],
  "isPseudo": true,
  "aliasOf": variant_78_pseudo,
  "clr": {
    "opcodes": "FD78",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of B are loaded into A.",
    "instruction": "ld a,b"
  }
};

// ld a,c
const variant_FD_79: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "c"
  ],
  "tokens": [
    "a",
    ",",
    "c"
  ],
  "opcodes": [
    253,
    121
  ],
  "isPseudo": false,
  "aliasOf": variant_79,
  "clr": {
    "opcodes": "FD79",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into A.",
    "instruction": "ld a,c"
  }
};

// ld c
const variant_FD_79_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "c"
  ],
  "tokens": [
    "c"
  ],
  "opcodes": [
    253,
    121
  ],
  "isPseudo": true,
  "aliasOf": variant_79_pseudo,
  "clr": {
    "opcodes": "FD79",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of C are loaded into A.",
    "instruction": "ld a,c"
  }
};

// ld a,d
const variant_FD_7A: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "d"
  ],
  "tokens": [
    "a",
    ",",
    "d"
  ],
  "opcodes": [
    253,
    122
  ],
  "isPseudo": false,
  "aliasOf": variant_7A,
  "clr": {
    "opcodes": "FD7A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into A.",
    "instruction": "ld a,d"
  }
};

// ld d
const variant_FD_7A_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "d"
  ],
  "tokens": [
    "d"
  ],
  "opcodes": [
    253,
    122
  ],
  "isPseudo": true,
  "aliasOf": variant_7A_pseudo,
  "clr": {
    "opcodes": "FD7A",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of D are loaded into A.",
    "instruction": "ld a,d"
  }
};

// ld a,e
const variant_FD_7B: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "e"
  ],
  "tokens": [
    "a",
    ",",
    "e"
  ],
  "opcodes": [
    253,
    123
  ],
  "isPseudo": false,
  "aliasOf": variant_7B,
  "clr": {
    "opcodes": "FD7B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into A.",
    "instruction": "ld a,e"
  }
};

// ld e
const variant_FD_7B_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "e"
  ],
  "tokens": [
    "e"
  ],
  "opcodes": [
    253,
    123
  ],
  "isPseudo": true,
  "aliasOf": variant_7B_pseudo,
  "clr": {
    "opcodes": "FD7B",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of E are loaded into A.",
    "instruction": "ld a,e"
  }
};

// ld a,a
const variant_FD_7F: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a",
    "a"
  ],
  "tokens": [
    "a",
    ",",
    "a"
  ],
  "opcodes": [
    253,
    127
  ],
  "isPseudo": false,
  "aliasOf": variant_7F,
  "clr": {
    "opcodes": "FD7F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into A.",
    "instruction": "ld a,a"
  }
};

// ld a
const variant_FD_7F_pseudo: OpcodeVariant = {
  "mnemonic": "ld",
  "params": [
    "a"
  ],
  "tokens": [
    "a"
  ],
  "opcodes": [
    253,
    127
  ],
  "isPseudo": true,
  "aliasOf": variant_7F_pseudo,
  "clr": {
    "opcodes": "FD7F",
    "undocumented": true,
    "z180": false,
    "flags": "------",
    "byte_count": 2,
    "with_jump_clock_count": 8,
    "without_jump_clock_count": 8,
    "description": "The contents of A are loaded into A.",
    "instruction": "ld a,a"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_40: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    64
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB40",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_41: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    65
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB41",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_42: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    66
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB42",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_43: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    67
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB43",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_44: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    68
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB44",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_45: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    69
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB45",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 0,(iy+dd)
const variant_FD_CB_dd_47: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "0",
    "(iy+dd)"
  ],
  "tokens": [
    "0",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    71
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_46,
  "clr": {
    "opcodes": "FDCB47",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 0 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 0,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_48: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    72
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB48",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_49: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    73
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB49",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_4A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    74
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB4A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_4B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    75
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB4B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_4C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    76
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB4C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_4D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    77
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB4D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 1,(iy+dd)
const variant_FD_CB_dd_4F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "1",
    "(iy+dd)"
  ],
  "tokens": [
    "1",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    79
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_4E,
  "clr": {
    "opcodes": "FDCB4F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 1 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 1,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_50: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    80
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB50",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_51: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    81
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB51",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_52: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    82
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB52",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_53: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    83
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB53",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_54: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    84
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB54",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_55: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    85
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB55",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 2,(iy+dd)
const variant_FD_CB_dd_57: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "2",
    "(iy+dd)"
  ],
  "tokens": [
    "2",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    87
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_56,
  "clr": {
    "opcodes": "FDCB57",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 2 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 2,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_58: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    88
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB58",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_59: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    89
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB59",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_5A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    90
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB5A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_5B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    91
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB5B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_5C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    92
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB5C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_5D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    93
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB5D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 3,(iy+dd)
const variant_FD_CB_dd_5F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "3",
    "(iy+dd)"
  ],
  "tokens": [
    "3",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    95
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_5E,
  "clr": {
    "opcodes": "FDCB5F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 3 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 3,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_60: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    96
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB60",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_61: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    97
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB61",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_62: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    98
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB62",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_63: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    99
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB63",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_64: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    100
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB64",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_65: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    101
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB65",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 4,(iy+dd)
const variant_FD_CB_dd_67: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "4",
    "(iy+dd)"
  ],
  "tokens": [
    "4",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    103
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_66,
  "clr": {
    "opcodes": "FDCB67",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 4 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 4,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_68: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    104
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB68",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_69: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    105
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB69",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_6A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    106
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB6A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_6B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    107
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB6B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_6C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    108
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB6C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_6D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    109
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB6D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 5,(iy+dd)
const variant_FD_CB_dd_6F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "5",
    "(iy+dd)"
  ],
  "tokens": [
    "5",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    111
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_6E,
  "clr": {
    "opcodes": "FDCB6F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 5 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 5,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_70: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    112
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB70",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_71: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    113
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB71",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_72: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    114
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB72",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_73: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    115
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB73",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_74: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    116
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB74",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_75: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    117
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB75",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 6,(iy+dd)
const variant_FD_CB_dd_77: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "6",
    "(iy+dd)"
  ],
  "tokens": [
    "6",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    119
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_76,
  "clr": {
    "opcodes": "FDCB77",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 6 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 6,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_78: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    120
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB78",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_79: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    121
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB79",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_7A: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    122
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB7A",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_7B: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    123
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB7B",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_7C: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    124
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB7C",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_7D: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    125
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB7D",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// bit 7,(iy+dd)
const variant_FD_CB_dd_7F: OpcodeVariant = {
  "mnemonic": "bit",
  "params": [
    "7",
    "(iy+dd)"
  ],
  "tokens": [
    "7",
    ",",
    "(",
    "iy",
    "+",
    "dd",
    ")"
  ],
  "opcodes": [
    253,
    203,
    "dd",
    127
  ],
  "isPseudo": false,
  "aliasOf": variant_FD_CB_dd_7E,
  "clr": {
    "opcodes": "FDCB7F",
    "undocumented": true,
    "z180": false,
    "flags": "-0 1+ ",
    "byte_count": 4,
    "with_jump_clock_count": 20,
    "without_jump_clock_count": 20,
    "description": "Tests bit 7 of the memory location pointed to by IY plus <var>D</var>.",
    "instruction": "bit 7,(iy+d)"
  }
};

// Map from mnemonic to array of variants.
export const mnemonicMap = new Map<string,OpcodeVariant[]>([
  [
    "adc",
    [
      variant_88, // adc a,b
      variant_88_pseudo, // adc b
      variant_89, // adc a,c
      variant_89_pseudo, // adc c
      variant_8A, // adc a,d
      variant_8A_pseudo, // adc d
      variant_8B, // adc a,e
      variant_8B_pseudo, // adc e
      variant_8C, // adc a,h
      variant_8C_pseudo, // adc h
      variant_8D, // adc a,l
      variant_8D_pseudo, // adc l
      variant_8E, // adc a,(hl)
      variant_8E_pseudo, // adc (hl)
      variant_8F, // adc a,a
      variant_8F_pseudo, // adc a
      variant_CE_nn, // adc a,nn
      variant_CE_nn_pseudo, // adc nn
      variant_DD_8C, // adc a,ixh
      variant_DD_8C_pseudo, // adc ixh
      variant_DD_8D, // adc a,ixl
      variant_DD_8D_pseudo, // adc ixl
      variant_DD_8E_dd, // adc a,(ix+dd)
      variant_DD_8E_dd_pseudo, // adc (ix+dd)
      variant_ED_4A, // adc hl,bc
      variant_ED_5A, // adc hl,de
      variant_ED_6A, // adc hl,hl
      variant_ED_7A, // adc hl,sp
      variant_FD_8C, // adc a,iyh
      variant_FD_8C_pseudo, // adc iyh
      variant_FD_8D, // adc a,iyl
      variant_FD_8D_pseudo, // adc iyl
      variant_FD_8E_dd, // adc a,(iy+dd)
      variant_FD_8E_dd_pseudo, // adc (iy+dd)
    ],
  ],
  [
    "add",
    [
      variant_09, // add hl,bc
      variant_19, // add hl,de
      variant_29, // add hl,hl
      variant_39, // add hl,sp
      variant_80, // add a,b
      variant_80_pseudo, // add b
      variant_81, // add a,c
      variant_81_pseudo, // add c
      variant_82, // add a,d
      variant_82_pseudo, // add d
      variant_83, // add a,e
      variant_83_pseudo, // add e
      variant_84, // add a,h
      variant_84_pseudo, // add h
      variant_85, // add a,l
      variant_85_pseudo, // add l
      variant_86, // add a,(hl)
      variant_86_pseudo, // add (hl)
      variant_87, // add a,a
      variant_87_pseudo, // add a
      variant_C6_nn, // add a,nn
      variant_C6_nn_pseudo, // add nn
      variant_DD_09, // add ix,bc
      variant_DD_19, // add ix,de
      variant_DD_29, // add ix,ix
      variant_DD_39, // add ix,sp
      variant_DD_84, // add a,ixh
      variant_DD_84_pseudo, // add ixh
      variant_DD_85, // add a,ixl
      variant_DD_85_pseudo, // add ixl
      variant_DD_86_dd, // add a,(ix+dd)
      variant_DD_86_dd_pseudo, // add (ix+dd)
      variant_FD_09, // add iy,bc
      variant_FD_19, // add iy,de
      variant_FD_29, // add iy,iy
      variant_FD_39, // add iy,sp
      variant_FD_84, // add a,iyh
      variant_FD_84_pseudo, // add iyh
      variant_FD_85, // add a,iyl
      variant_FD_85_pseudo, // add iyl
      variant_FD_86_dd, // add a,(iy+dd)
      variant_FD_86_dd_pseudo, // add (iy+dd)
    ],
  ],
  [
    "and",
    [
      variant_A0, // and a,b
      variant_A0_pseudo, // and b
      variant_A1, // and a,c
      variant_A1_pseudo, // and c
      variant_A2, // and a,d
      variant_A2_pseudo, // and d
      variant_A3, // and a,e
      variant_A3_pseudo, // and e
      variant_A4, // and a,h
      variant_A4_pseudo, // and h
      variant_A5, // and a,l
      variant_A5_pseudo, // and l
      variant_A6, // and a,(hl)
      variant_A6_pseudo, // and (hl)
      variant_A7, // and a,a
      variant_A7_pseudo, // and a
      variant_DD_A4, // and a,ixh
      variant_DD_A4_pseudo, // and ixh
      variant_DD_A5, // and a,ixl
      variant_DD_A5_pseudo, // and ixl
      variant_DD_A6_dd, // and a,(ix+dd)
      variant_DD_A6_dd_pseudo, // and (ix+dd)
      variant_E6_nn, // and a,nn
      variant_E6_nn_pseudo, // and nn
      variant_FD_A4, // and a,iyh
      variant_FD_A4_pseudo, // and iyh
      variant_FD_A5, // and a,iyl
      variant_FD_A5_pseudo, // and iyl
      variant_FD_A6_dd, // and a,(iy+dd)
      variant_FD_A6_dd_pseudo, // and (iy+dd)
    ],
  ],
  [
    "bit",
    [
      variant_CB_40, // bit 0,b
      variant_CB_41, // bit 0,c
      variant_CB_42, // bit 0,d
      variant_CB_43, // bit 0,e
      variant_CB_44, // bit 0,h
      variant_CB_45, // bit 0,l
      variant_CB_46, // bit 0,(hl)
      variant_CB_47, // bit 0,a
      variant_CB_48, // bit 1,b
      variant_CB_49, // bit 1,c
      variant_CB_4A, // bit 1,d
      variant_CB_4B, // bit 1,e
      variant_CB_4C, // bit 1,h
      variant_CB_4D, // bit 1,l
      variant_CB_4E, // bit 1,(hl)
      variant_CB_4F, // bit 1,a
      variant_CB_50, // bit 2,b
      variant_CB_51, // bit 2,c
      variant_CB_52, // bit 2,d
      variant_CB_53, // bit 2,e
      variant_CB_54, // bit 2,h
      variant_CB_55, // bit 2,l
      variant_CB_56, // bit 2,(hl)
      variant_CB_57, // bit 2,a
      variant_CB_58, // bit 3,b
      variant_CB_59, // bit 3,c
      variant_CB_5A, // bit 3,d
      variant_CB_5B, // bit 3,e
      variant_CB_5C, // bit 3,h
      variant_CB_5D, // bit 3,l
      variant_CB_5E, // bit 3,(hl)
      variant_CB_5F, // bit 3,a
      variant_CB_60, // bit 4,b
      variant_CB_61, // bit 4,c
      variant_CB_62, // bit 4,d
      variant_CB_63, // bit 4,e
      variant_CB_64, // bit 4,h
      variant_CB_65, // bit 4,l
      variant_CB_66, // bit 4,(hl)
      variant_CB_67, // bit 4,a
      variant_CB_68, // bit 5,b
      variant_CB_69, // bit 5,c
      variant_CB_6A, // bit 5,d
      variant_CB_6B, // bit 5,e
      variant_CB_6C, // bit 5,h
      variant_CB_6D, // bit 5,l
      variant_CB_6E, // bit 5,(hl)
      variant_CB_6F, // bit 5,a
      variant_CB_70, // bit 6,b
      variant_CB_71, // bit 6,c
      variant_CB_72, // bit 6,d
      variant_CB_73, // bit 6,e
      variant_CB_74, // bit 6,h
      variant_CB_75, // bit 6,l
      variant_CB_76, // bit 6,(hl)
      variant_CB_77, // bit 6,a
      variant_CB_78, // bit 7,b
      variant_CB_79, // bit 7,c
      variant_CB_7A, // bit 7,d
      variant_CB_7B, // bit 7,e
      variant_CB_7C, // bit 7,h
      variant_CB_7D, // bit 7,l
      variant_CB_7E, // bit 7,(hl)
      variant_CB_7F, // bit 7,a
      variant_DD_CB_dd_46, // bit 0,(ix+dd)
      variant_DD_CB_dd_4E, // bit 1,(ix+dd)
      variant_DD_CB_dd_56, // bit 2,(ix+dd)
      variant_DD_CB_dd_5E, // bit 3,(ix+dd)
      variant_DD_CB_dd_66, // bit 4,(ix+dd)
      variant_DD_CB_dd_6E, // bit 5,(ix+dd)
      variant_DD_CB_dd_76, // bit 6,(ix+dd)
      variant_DD_CB_dd_7E, // bit 7,(ix+dd)
      variant_FD_CB_dd_46, // bit 0,(iy+dd)
      variant_FD_CB_dd_4E, // bit 1,(iy+dd)
      variant_FD_CB_dd_56, // bit 2,(iy+dd)
      variant_FD_CB_dd_5E, // bit 3,(iy+dd)
      variant_FD_CB_dd_66, // bit 4,(iy+dd)
      variant_FD_CB_dd_6E, // bit 5,(iy+dd)
      variant_FD_CB_dd_76, // bit 6,(iy+dd)
      variant_FD_CB_dd_7E, // bit 7,(iy+dd)
    ],
  ],
  [
    "call",
    [
      variant_C4_nnnn, // call nz,nnnn
      variant_CC_nnnn, // call z,nnnn
      variant_CD_nnnn, // call nnnn
      variant_D4_nnnn, // call nc,nnnn
      variant_DC_nnnn, // call c,nnnn
      variant_E4_nnnn, // call po,nnnn
      variant_E4_nnnn_pseudo, // call nv,nnnn
      variant_EC_nnnn, // call pe,nnnn
      variant_EC_nnnn_pseudo, // call v,nnnn
      variant_F4_nnnn, // call p,nnnn
      variant_FC_nnnn, // call m,nnnn
    ],
  ],
  [
    "ccf",
    [
      variant_3F, // ccf 
    ],
  ],
  [
    "cp",
    [
      variant_B8, // cp a,b
      variant_B8_pseudo, // cp b
      variant_B9, // cp a,c
      variant_B9_pseudo, // cp c
      variant_BA, // cp a,d
      variant_BA_pseudo, // cp d
      variant_BB, // cp a,e
      variant_BB_pseudo, // cp e
      variant_BC, // cp a,h
      variant_BC_pseudo, // cp h
      variant_BD, // cp a,l
      variant_BD_pseudo, // cp l
      variant_BE, // cp a,(hl)
      variant_BE_pseudo, // cp (hl)
      variant_BF, // cp a,a
      variant_BF_pseudo, // cp a
      variant_DD_BC, // cp a,ixh
      variant_DD_BC_pseudo, // cp ixh
      variant_DD_BD, // cp a,ixl
      variant_DD_BD_pseudo, // cp ixl
      variant_DD_BE_dd, // cp a,(ix+dd)
      variant_DD_BE_dd_pseudo, // cp (ix+dd)
      variant_FD_BC, // cp a,iyh
      variant_FD_BC_pseudo, // cp iyh
      variant_FD_BD, // cp a,iyl
      variant_FD_BD_pseudo, // cp iyl
      variant_FD_BE_dd, // cp a,(iy+dd)
      variant_FD_BE_dd_pseudo, // cp (iy+dd)
      variant_FE_nn, // cp a,nn
      variant_FE_nn_pseudo, // cp nn
    ],
  ],
  [
    "cpd",
    [
      variant_ED_A9, // cpd 
    ],
  ],
  [
    "cpdr",
    [
      variant_ED_B9, // cpdr 
    ],
  ],
  [
    "cpi",
    [
      variant_ED_A1, // cpi 
    ],
  ],
  [
    "cpir",
    [
      variant_ED_B1, // cpir 
    ],
  ],
  [
    "cpl",
    [
      variant_2F, // cpl 
    ],
  ],
  [
    "daa",
    [
      variant_27, // daa 
    ],
  ],
  [
    "dec",
    [
      variant_05, // dec b
      variant_0B, // dec bc
      variant_0D, // dec c
      variant_15, // dec d
      variant_1B, // dec de
      variant_1D, // dec e
      variant_25, // dec h
      variant_2B, // dec hl
      variant_2D, // dec l
      variant_35, // dec (hl)
      variant_3B, // dec sp
      variant_3D, // dec a
      variant_DD_25, // dec ixh
      variant_DD_2B, // dec ix
      variant_DD_2D, // dec ixl
      variant_DD_35_dd, // dec (ix+dd)
      variant_FD_25, // dec iyh
      variant_FD_2B, // dec iy
      variant_FD_2D, // dec iyl
      variant_FD_35_dd, // dec (iy+dd)
    ],
  ],
  [
    "di",
    [
      variant_F3, // di 
    ],
  ],
  [
    "djnz",
    [
      variant_10_offset, // djnz offset
    ],
  ],
  [
    "ei",
    [
      variant_FB, // ei 
    ],
  ],
  [
    "ex",
    [
      variant_08, // ex af,af'
      variant_DD_E3, // ex (sp),ix
      variant_E3, // ex (sp),hl
      variant_EB, // ex de,hl
      variant_FD_E3, // ex (sp),iy
    ],
  ],
  [
    "exx",
    [
      variant_D9, // exx 
    ],
  ],
  [
    "halt",
    [
      variant_76, // halt 
    ],
  ],
  [
    "im",
    [
      variant_ED_46, // im 0
      variant_ED_56, // im 1
      variant_ED_5E, // im 2
    ],
  ],
  [
    "in",
    [
      variant_DB_nn, // in a,(nn)
      variant_DB_nn_pseudo, // in (nn)
      variant_ED_40, // in b,(c)
      variant_ED_48, // in c,(c)
      variant_ED_50, // in d,(c)
      variant_ED_58, // in e,(c)
      variant_ED_60, // in h,(c)
      variant_ED_68, // in l,(c)
      variant_ED_70, // in f,(c)
      variant_ED_78, // in a,(c)
      variant_ED_78_pseudo, // in (c)
    ],
  ],
  [
    "inc",
    [
      variant_03, // inc bc
      variant_04, // inc b
      variant_0C, // inc c
      variant_13, // inc de
      variant_14, // inc d
      variant_1C, // inc e
      variant_23, // inc hl
      variant_24, // inc h
      variant_2C, // inc l
      variant_33, // inc sp
      variant_34, // inc (hl)
      variant_3C, // inc a
      variant_DD_23, // inc ix
      variant_DD_24, // inc ixh
      variant_DD_2C, // inc ixl
      variant_DD_34_dd, // inc (ix+dd)
      variant_FD_23, // inc iy
      variant_FD_24, // inc iyh
      variant_FD_2C, // inc iyl
      variant_FD_34_dd, // inc (iy+dd)
    ],
  ],
  [
    "ind",
    [
      variant_ED_AA, // ind 
    ],
  ],
  [
    "indr",
    [
      variant_ED_BA, // indr 
    ],
  ],
  [
    "ini",
    [
      variant_ED_A2, // ini 
    ],
  ],
  [
    "inir",
    [
      variant_ED_B2, // inir 
    ],
  ],
  [
    "jp",
    [
      variant_C2_nnnn, // jp nz,nnnn
      variant_C3_nnnn, // jp nnnn
      variant_CA_nnnn, // jp z,nnnn
      variant_D2_nnnn, // jp nc,nnnn
      variant_DA_nnnn, // jp c,nnnn
      variant_DD_E9, // jp ix
      variant_DD_E9_pseudo, // jp (ix)
      variant_E2_nnnn, // jp po,nnnn
      variant_E2_nnnn_pseudo, // jp nv,nnnn
      variant_E9, // jp hl
      variant_E9_pseudo, // jp (hl)
      variant_EA_nnnn, // jp pe,nnnn
      variant_EA_nnnn_pseudo, // jp v,nnnn
      variant_F2_nnnn, // jp p,nnnn
      variant_FA_nnnn, // jp m,nnnn
      variant_FD_E9, // jp iy
      variant_FD_E9_pseudo, // jp (iy)
    ],
  ],
  [
    "jr",
    [
      variant_18_offset, // jr offset
      variant_20_offset, // jr nz,offset
      variant_28_offset, // jr z,offset
      variant_30_offset, // jr nc,offset
      variant_38_offset, // jr c,offset
    ],
  ],
  [
    "ld",
    [
      variant_01_nnnn, // ld bc,nnnn
      variant_02, // ld (bc),a
      variant_06_nn, // ld b,nn
      variant_0A, // ld a,(bc)
      variant_0A_pseudo, // ld (bc)
      variant_0E_nn, // ld c,nn
      variant_11_nnnn, // ld de,nnnn
      variant_12, // ld (de),a
      variant_16_nn, // ld d,nn
      variant_1A, // ld a,(de)
      variant_1A_pseudo, // ld (de)
      variant_1E_nn, // ld e,nn
      variant_21_nnnn, // ld hl,nnnn
      variant_22_nnnn, // ld (nnnn),hl
      variant_26_nn, // ld h,nn
      variant_2A_nnnn, // ld hl,(nnnn)
      variant_2E_nn, // ld l,nn
      variant_31_nnnn, // ld sp,nnnn
      variant_32_nnnn, // ld (nnnn),a
      variant_36_nn, // ld (hl),nn
      variant_3A_nnnn, // ld a,(nnnn)
      variant_3A_nnnn_pseudo, // ld (nnnn)
      variant_3E_nn, // ld a,nn
      variant_3E_nn_pseudo, // ld nn
      variant_40, // ld b,b
      variant_41, // ld b,c
      variant_42, // ld b,d
      variant_43, // ld b,e
      variant_44, // ld b,h
      variant_44_4D_pseudo, // ld bc,hl
      variant_45, // ld b,l
      variant_46, // ld b,(hl)
      variant_47, // ld b,a
      variant_48, // ld c,b
      variant_49, // ld c,c
      variant_4A, // ld c,d
      variant_4B, // ld c,e
      variant_4C, // ld c,h
      variant_4D, // ld c,l
      variant_4E, // ld c,(hl)
      variant_4E_23_46_2B_pseudo, // ld bc,(hl)
      variant_4F, // ld c,a
      variant_50, // ld d,b
      variant_50_59_pseudo, // ld de,bc
      variant_51, // ld d,c
      variant_52, // ld d,d
      variant_53, // ld d,e
      variant_54, // ld d,h
      variant_54_5D_pseudo, // ld de,hl
      variant_55, // ld d,l
      variant_56, // ld d,(hl)
      variant_57, // ld d,a
      variant_58, // ld e,b
      variant_59, // ld e,c
      variant_5A, // ld e,d
      variant_5B, // ld e,e
      variant_5C, // ld e,h
      variant_5D, // ld e,l
      variant_5E, // ld e,(hl)
      variant_5F, // ld e,a
      variant_60, // ld h,b
      variant_60_69_pseudo, // ld hl,bc
      variant_61, // ld h,c
      variant_62, // ld h,d
      variant_62_6B_pseudo, // ld hl,de
      variant_63, // ld h,e
      variant_64, // ld h,h
      variant_65, // ld h,l
      variant_66, // ld h,(hl)
      variant_67, // ld h,a
      variant_68, // ld l,b
      variant_69, // ld l,c
      variant_6A, // ld l,d
      variant_6B, // ld l,e
      variant_6C, // ld l,h
      variant_6D, // ld l,l
      variant_6E, // ld l,(hl)
      variant_6F, // ld l,a
      variant_70, // ld (hl),b
      variant_71, // ld (hl),c
      variant_71_23_70_2B_pseudo, // ld (hl),bc
      variant_72, // ld (hl),d
      variant_73, // ld (hl),e
      variant_73_23_72_2B_pseudo, // ld (hl),de
      variant_74, // ld (hl),h
      variant_75, // ld (hl),l
      variant_77, // ld (hl),a
      variant_78, // ld a,b
      variant_78_pseudo, // ld b
      variant_79, // ld a,c
      variant_79_pseudo, // ld c
      variant_7A, // ld a,d
      variant_7A_pseudo, // ld d
      variant_7B, // ld a,e
      variant_7B_pseudo, // ld e
      variant_7C, // ld a,h
      variant_7C_pseudo, // ld h
      variant_7D, // ld a,l
      variant_7D_pseudo, // ld l
      variant_7E, // ld a,(hl)
      variant_7E_pseudo, // ld (hl)
      variant_7F, // ld a,a
      variant_7F_pseudo, // ld a
      variant_DD_21_nnnn, // ld ix,nnnn
      variant_DD_22_nnnn, // ld (nnnn),ix
      variant_DD_26_nn, // ld ixh,nn
      variant_DD_2A_nnnn, // ld ix,(nnnn)
      variant_DD_2E_nn, // ld ixl,nn
      variant_DD_36_dd_nn, // ld (ix+dd),nn
      variant_DD_44, // ld b,ixh
      variant_DD_45, // ld b,ixl
      variant_DD_46_dd, // ld b,(ix+dd)
      variant_DD_4C, // ld c,ixh
      variant_DD_4D, // ld c,ixl
      variant_DD_4E_dd, // ld c,(ix+dd)
      variant_DD_54, // ld d,ixh
      variant_DD_55, // ld d,ixl
      variant_DD_56_dd, // ld d,(ix+dd)
      variant_DD_5C, // ld e,ixh
      variant_DD_5D, // ld e,ixl
      variant_DD_5E_dd, // ld e,(ix+dd)
      variant_DD_60, // ld ixh,b
      variant_DD_61, // ld ixh,c
      variant_DD_62, // ld ixh,d
      variant_DD_63, // ld ixh,e
      variant_DD_64, // ld ixh,ixh
      variant_DD_65, // ld ixh,ixl
      variant_DD_66_dd, // ld h,(ix+dd)
      variant_DD_67, // ld ixh,a
      variant_DD_68, // ld ixl,b
      variant_DD_69, // ld ixl,c
      variant_DD_6A, // ld ixl,d
      variant_DD_6B, // ld ixl,e
      variant_DD_6C, // ld ixl,ixh
      variant_DD_6D, // ld ixl,ixl
      variant_DD_6E_dd, // ld l,(ix+dd)
      variant_DD_6F, // ld ixl,a
      variant_DD_70_dd, // ld (ix+dd),b
      variant_DD_71_dd, // ld (ix+dd),c
      variant_DD_72_dd, // ld (ix+dd),d
      variant_DD_73_dd, // ld (ix+dd),e
      variant_DD_74_dd, // ld (ix+dd),h
      variant_DD_75_dd, // ld (ix+dd),l
      variant_DD_77_dd, // ld (ix+dd),a
      variant_DD_7C, // ld a,ixh
      variant_DD_7C_pseudo, // ld ixh
      variant_DD_7D, // ld a,ixl
      variant_DD_7D_pseudo, // ld ixl
      variant_DD_7E_dd, // ld a,(ix+dd)
      variant_DD_7E_dd_pseudo, // ld (ix+dd)
      variant_DD_CB_dd_00, // ld b,rlc(ix+dd)
      variant_DD_CB_dd_01, // ld c,rlc(ix+dd)
      variant_DD_CB_dd_02, // ld d,rlc(ix+dd)
      variant_DD_CB_dd_03, // ld e,rlc(ix+dd)
      variant_DD_CB_dd_04, // ld h,rlc(ix+dd)
      variant_DD_CB_dd_05, // ld l,rlc(ix+dd)
      variant_DD_CB_dd_07, // ld a,rlc(ix+dd)
      variant_DD_CB_dd_07_pseudo, // ld rlc(ix+dd)
      variant_DD_CB_dd_08, // ld b,rrc(ix+dd)
      variant_DD_CB_dd_09, // ld c,rrc(ix+dd)
      variant_DD_CB_dd_0A, // ld d,rrc(ix+dd)
      variant_DD_CB_dd_0B, // ld e,rrc(ix+dd)
      variant_DD_CB_dd_0C, // ld h,rrc(ix+dd)
      variant_DD_CB_dd_0D, // ld l,rrc(ix+dd)
      variant_DD_CB_dd_0F, // ld a,rrc(ix+dd)
      variant_DD_CB_dd_0F_pseudo, // ld rrc(ix+dd)
      variant_DD_CB_dd_10, // ld b,rl(ix+dd)
      variant_DD_CB_dd_11, // ld c,rl(ix+dd)
      variant_DD_CB_dd_12, // ld d,rl(ix+dd)
      variant_DD_CB_dd_13, // ld e,rl(ix+dd)
      variant_DD_CB_dd_14, // ld h,rl(ix+dd)
      variant_DD_CB_dd_15, // ld l,rl(ix+dd)
      variant_DD_CB_dd_17, // ld a,rl(ix+dd)
      variant_DD_CB_dd_17_pseudo, // ld rl(ix+dd)
      variant_DD_CB_dd_18, // ld b,rr(ix+dd)
      variant_DD_CB_dd_19, // ld c,rr(ix+dd)
      variant_DD_CB_dd_1A, // ld d,rr(ix+dd)
      variant_DD_CB_dd_1B, // ld e,rr(ix+dd)
      variant_DD_CB_dd_1C, // ld h,rr(ix+dd)
      variant_DD_CB_dd_1D, // ld l,rr(ix+dd)
      variant_DD_CB_dd_1F, // ld a,rr(ix+dd)
      variant_DD_CB_dd_1F_pseudo, // ld rr(ix+dd)
      variant_DD_CB_dd_20, // ld b,sla(ix+dd)
      variant_DD_CB_dd_21, // ld c,sla(ix+dd)
      variant_DD_CB_dd_22, // ld d,sla(ix+dd)
      variant_DD_CB_dd_23, // ld e,sla(ix+dd)
      variant_DD_CB_dd_24, // ld h,sla(ix+dd)
      variant_DD_CB_dd_25, // ld l,sla(ix+dd)
      variant_DD_CB_dd_27, // ld a,sla(ix+dd)
      variant_DD_CB_dd_27_pseudo, // ld sla(ix+dd)
      variant_DD_CB_dd_28, // ld b,sra(ix+dd)
      variant_DD_CB_dd_29, // ld c,sra(ix+dd)
      variant_DD_CB_dd_2A, // ld d,sra(ix+dd)
      variant_DD_CB_dd_2B, // ld e,sra(ix+dd)
      variant_DD_CB_dd_2C, // ld h,sra(ix+dd)
      variant_DD_CB_dd_2D, // ld l,sra(ix+dd)
      variant_DD_CB_dd_2F, // ld a,sra(ix+dd)
      variant_DD_CB_dd_2F_pseudo, // ld sra(ix+dd)
      variant_DD_CB_dd_30, // ld b,sll(ix+dd)
      variant_DD_CB_dd_31, // ld c,sll(ix+dd)
      variant_DD_CB_dd_32, // ld d,sll(ix+dd)
      variant_DD_CB_dd_33, // ld e,sll(ix+dd)
      variant_DD_CB_dd_34, // ld h,sll(ix+dd)
      variant_DD_CB_dd_35, // ld l,sll(ix+dd)
      variant_DD_CB_dd_37, // ld a,sll(ix+dd)
      variant_DD_CB_dd_37_pseudo, // ld sll(ix+dd)
      variant_DD_CB_dd_38, // ld b,srl(ix+dd)
      variant_DD_CB_dd_39, // ld c,srl(ix+dd)
      variant_DD_CB_dd_3A, // ld d,srl(ix+dd)
      variant_DD_CB_dd_3B, // ld e,srl(ix+dd)
      variant_DD_CB_dd_3C, // ld h,srl(ix+dd)
      variant_DD_CB_dd_3D, // ld l,srl(ix+dd)
      variant_DD_CB_dd_3F, // ld a,srl(ix+dd)
      variant_DD_CB_dd_3F_pseudo, // ld srl(ix+dd)
      variant_DD_CB_dd_80, // ld b,res 0,(ix+dd)
      variant_DD_CB_dd_81, // ld c,res 0,(ix+dd)
      variant_DD_CB_dd_82, // ld d,res 0,(ix+dd)
      variant_DD_CB_dd_83, // ld e,res 0,(ix+dd)
      variant_DD_CB_dd_84, // ld h,res 0,(ix+dd)
      variant_DD_CB_dd_85, // ld l,res 0,(ix+dd)
      variant_DD_CB_dd_87, // ld a,res 0,(ix+dd)
      variant_DD_CB_dd_87_pseudo, // ld res 0,(ix+dd)
      variant_DD_CB_dd_88, // ld b,res 1,(ix+dd)
      variant_DD_CB_dd_89, // ld c,res 1,(ix+dd)
      variant_DD_CB_dd_8A, // ld d,res 1,(ix+dd)
      variant_DD_CB_dd_8B, // ld e,res 1,(ix+dd)
      variant_DD_CB_dd_8C, // ld h,res 1,(ix+dd)
      variant_DD_CB_dd_8D, // ld l,res 1,(ix+dd)
      variant_DD_CB_dd_8F, // ld a,res 1,(ix+dd)
      variant_DD_CB_dd_8F_pseudo, // ld res 1,(ix+dd)
      variant_DD_CB_dd_90, // ld b,res 2,(ix+dd)
      variant_DD_CB_dd_91, // ld c,res 2,(ix+dd)
      variant_DD_CB_dd_92, // ld d,res 2,(ix+dd)
      variant_DD_CB_dd_93, // ld e,res 2,(ix+dd)
      variant_DD_CB_dd_94, // ld h,res 2,(ix+dd)
      variant_DD_CB_dd_95, // ld l,res 2,(ix+dd)
      variant_DD_CB_dd_97, // ld a,res 2,(ix+dd)
      variant_DD_CB_dd_97_pseudo, // ld res 2,(ix+dd)
      variant_DD_CB_dd_98, // ld b,res 3,(ix+dd)
      variant_DD_CB_dd_99, // ld c,res 3,(ix+dd)
      variant_DD_CB_dd_9A, // ld d,res 3,(ix+dd)
      variant_DD_CB_dd_9B, // ld e,res 3,(ix+dd)
      variant_DD_CB_dd_9C, // ld h,res 3,(ix+dd)
      variant_DD_CB_dd_9D, // ld l,res 3,(ix+dd)
      variant_DD_CB_dd_9F, // ld a,res 3,(ix+dd)
      variant_DD_CB_dd_9F_pseudo, // ld res 3,(ix+dd)
      variant_DD_CB_dd_A0, // ld b,res 4,(ix+dd)
      variant_DD_CB_dd_A1, // ld c,res 4,(ix+dd)
      variant_DD_CB_dd_A2, // ld d,res 4,(ix+dd)
      variant_DD_CB_dd_A3, // ld e,res 4,(ix+dd)
      variant_DD_CB_dd_A4, // ld h,res 4,(ix+dd)
      variant_DD_CB_dd_A5, // ld l,res 4,(ix+dd)
      variant_DD_CB_dd_A7, // ld a,res 4,(ix+dd)
      variant_DD_CB_dd_A7_pseudo, // ld res 4,(ix+dd)
      variant_DD_CB_dd_A8, // ld b,res 5,(ix+dd)
      variant_DD_CB_dd_A9, // ld c,res 5,(ix+dd)
      variant_DD_CB_dd_AA, // ld d,res 5,(ix+dd)
      variant_DD_CB_dd_AB, // ld e,res 5,(ix+dd)
      variant_DD_CB_dd_AC, // ld h,res 5,(ix+dd)
      variant_DD_CB_dd_AD, // ld l,res 5,(ix+dd)
      variant_DD_CB_dd_AF, // ld a,res 5,(ix+dd)
      variant_DD_CB_dd_AF_pseudo, // ld res 5,(ix+dd)
      variant_DD_CB_dd_B0, // ld b,res 6,(ix+dd)
      variant_DD_CB_dd_B1, // ld c,res 6,(ix+dd)
      variant_DD_CB_dd_B2, // ld d,res 6,(ix+dd)
      variant_DD_CB_dd_B3, // ld e,res 6,(ix+dd)
      variant_DD_CB_dd_B4, // ld h,res 6,(ix+dd)
      variant_DD_CB_dd_B5, // ld l,res 6,(ix+dd)
      variant_DD_CB_dd_B7, // ld a,res 6,(ix+dd)
      variant_DD_CB_dd_B7_pseudo, // ld res 6,(ix+dd)
      variant_DD_CB_dd_B8, // ld b,res 7,(ix+dd)
      variant_DD_CB_dd_B9, // ld c,res 7,(ix+dd)
      variant_DD_CB_dd_BA, // ld d,res 7,(ix+dd)
      variant_DD_CB_dd_BB, // ld e,res 7,(ix+dd)
      variant_DD_CB_dd_BC, // ld h,res 7,(ix+dd)
      variant_DD_CB_dd_BD, // ld l,res 7,(ix+dd)
      variant_DD_CB_dd_BF, // ld a,res 7,(ix+dd)
      variant_DD_CB_dd_BF_pseudo, // ld res 7,(ix+dd)
      variant_DD_CB_dd_C0, // ld b,set 0,(ix+dd)
      variant_DD_CB_dd_C1, // ld c,set 0,(ix+dd)
      variant_DD_CB_dd_C2, // ld d,set 0,(ix+dd)
      variant_DD_CB_dd_C3, // ld e,set 0,(ix+dd)
      variant_DD_CB_dd_C4, // ld h,set 0,(ix+dd)
      variant_DD_CB_dd_C5, // ld l,set 0,(ix+dd)
      variant_DD_CB_dd_C7, // ld a,set 0,(ix+dd)
      variant_DD_CB_dd_C7_pseudo, // ld set 0,(ix+dd)
      variant_DD_CB_dd_C8, // ld b,set 1,(ix+dd)
      variant_DD_CB_dd_C9, // ld c,set 1,(ix+dd)
      variant_DD_CB_dd_CA, // ld d,set 1,(ix+dd)
      variant_DD_CB_dd_CB, // ld e,set 1,(ix+dd)
      variant_DD_CB_dd_CC, // ld h,set 1,(ix+dd)
      variant_DD_CB_dd_CD, // ld l,set 1,(ix+dd)
      variant_DD_CB_dd_CF, // ld a,set 1,(ix+dd)
      variant_DD_CB_dd_CF_pseudo, // ld set 1,(ix+dd)
      variant_DD_CB_dd_D0, // ld b,set 2,(ix+dd)
      variant_DD_CB_dd_D1, // ld c,set 2,(ix+dd)
      variant_DD_CB_dd_D2, // ld d,set 2,(ix+dd)
      variant_DD_CB_dd_D3, // ld e,set 2,(ix+dd)
      variant_DD_CB_dd_D4, // ld h,set 2,(ix+dd)
      variant_DD_CB_dd_D5, // ld l,set 2,(ix+dd)
      variant_DD_CB_dd_D7, // ld a,set 2,(ix+dd)
      variant_DD_CB_dd_D7_pseudo, // ld set 2,(ix+dd)
      variant_DD_CB_dd_D8, // ld b,set 3,(ix+dd)
      variant_DD_CB_dd_D9, // ld c,set 3,(ix+dd)
      variant_DD_CB_dd_DA, // ld d,set 3,(ix+dd)
      variant_DD_CB_dd_DB, // ld e,set 3,(ix+dd)
      variant_DD_CB_dd_DC, // ld h,set 3,(ix+dd)
      variant_DD_CB_dd_DD, // ld l,set 3,(ix+dd)
      variant_DD_CB_dd_DF, // ld a,set 3,(ix+dd)
      variant_DD_CB_dd_DF_pseudo, // ld set 3,(ix+dd)
      variant_DD_CB_dd_E0, // ld b,set 4,(ix+dd)
      variant_DD_CB_dd_E1, // ld c,set 4,(ix+dd)
      variant_DD_CB_dd_E2, // ld d,set 4,(ix+dd)
      variant_DD_CB_dd_E3, // ld e,set 4,(ix+dd)
      variant_DD_CB_dd_E4, // ld h,set 4,(ix+dd)
      variant_DD_CB_dd_E5, // ld l,set 4,(ix+dd)
      variant_DD_CB_dd_E7, // ld a,set 4,(ix+dd)
      variant_DD_CB_dd_E7_pseudo, // ld set 4,(ix+dd)
      variant_DD_CB_dd_E8, // ld b,set 5,(ix+dd)
      variant_DD_CB_dd_E9, // ld c,set 5,(ix+dd)
      variant_DD_CB_dd_EA, // ld d,set 5,(ix+dd)
      variant_DD_CB_dd_EB, // ld e,set 5,(ix+dd)
      variant_DD_CB_dd_EC, // ld h,set 5,(ix+dd)
      variant_DD_CB_dd_ED, // ld l,set 5,(ix+dd)
      variant_DD_CB_dd_EF, // ld a,set 5,(ix+dd)
      variant_DD_CB_dd_EF_pseudo, // ld set 5,(ix+dd)
      variant_DD_CB_dd_F0, // ld b,set 6,(ix+dd)
      variant_DD_CB_dd_F1, // ld c,set 6,(ix+dd)
      variant_DD_CB_dd_F2, // ld d,set 6,(ix+dd)
      variant_DD_CB_dd_F3, // ld e,set 6,(ix+dd)
      variant_DD_CB_dd_F4, // ld h,set 6,(ix+dd)
      variant_DD_CB_dd_F5, // ld l,set 6,(ix+dd)
      variant_DD_CB_dd_F7, // ld a,set 6,(ix+dd)
      variant_DD_CB_dd_F7_pseudo, // ld set 6,(ix+dd)
      variant_DD_CB_dd_F8, // ld b,set 7,(ix+dd)
      variant_DD_CB_dd_F9, // ld c,set 7,(ix+dd)
      variant_DD_CB_dd_FA, // ld d,set 7,(ix+dd)
      variant_DD_CB_dd_FB, // ld e,set 7,(ix+dd)
      variant_DD_CB_dd_FC, // ld h,set 7,(ix+dd)
      variant_DD_CB_dd_FD, // ld l,set 7,(ix+dd)
      variant_DD_CB_dd_FF, // ld a,set 7,(ix+dd)
      variant_DD_CB_dd_FF_pseudo, // ld set 7,(ix+dd)
      variant_DD_F9, // ld sp,ix
      variant_ED_43_nnnn, // ld (nnnn),bc
      variant_ED_47, // ld i,a
      variant_ED_4B_nnnn, // ld bc,(nnnn)
      variant_ED_4F, // ld r,a
      variant_ED_53_nnnn, // ld (nnnn),de
      variant_ED_57, // ld a,i
      variant_ED_57_pseudo, // ld i
      variant_ED_5B_nnnn, // ld de,(nnnn)
      variant_ED_5F, // ld a,r
      variant_ED_5F_pseudo, // ld r
      variant_ED_73_nnnn, // ld (nnnn),sp
      variant_ED_7B_nnnn, // ld sp,(nnnn)
      variant_F9, // ld sp,hl
      variant_FD_21_nnnn, // ld iy,nnnn
      variant_FD_22_nnnn, // ld (nnnn),iy
      variant_FD_26_nn, // ld iyh,nn
      variant_FD_2A_nnnn, // ld iy,(nnnn)
      variant_FD_2E_nn, // ld iyl,nn
      variant_FD_36_dd_nn, // ld (iy+dd),nn
      variant_FD_44, // ld b,iyh
      variant_FD_45, // ld b,iyl
      variant_FD_46_dd, // ld b,(iy+dd)
      variant_FD_4C, // ld c,iyh
      variant_FD_4D, // ld c,iyl
      variant_FD_4E_dd, // ld c,(iy+dd)
      variant_FD_54, // ld d,iyh
      variant_FD_55, // ld d,iyl
      variant_FD_56_dd, // ld d,(iy+dd)
      variant_FD_5C, // ld e,iyh
      variant_FD_5D, // ld e,iyl
      variant_FD_5E_dd, // ld e,(iy+dd)
      variant_FD_60, // ld iyh,b
      variant_FD_61, // ld iyh,c
      variant_FD_62, // ld iyh,d
      variant_FD_63, // ld iyh,e
      variant_FD_64, // ld iyh,iyh
      variant_FD_65, // ld iyh,iyl
      variant_FD_66_dd, // ld h,(iy+dd)
      variant_FD_67, // ld iyh,a
      variant_FD_68, // ld iyl,b
      variant_FD_69, // ld iyl,c
      variant_FD_6A, // ld iyl,d
      variant_FD_6B, // ld iyl,e
      variant_FD_6C, // ld iyl,iyh
      variant_FD_6D, // ld iyl,iyl
      variant_FD_6E_dd, // ld l,(iy+dd)
      variant_FD_6F, // ld iyl,a
      variant_FD_70_dd, // ld (iy+dd),b
      variant_FD_71_dd, // ld (iy+dd),c
      variant_FD_72_dd, // ld (iy+dd),d
      variant_FD_73_dd, // ld (iy+dd),e
      variant_FD_74_dd, // ld (iy+dd),h
      variant_FD_75_dd, // ld (iy+dd),l
      variant_FD_77_dd, // ld (iy+dd),a
      variant_FD_7C, // ld a,iyh
      variant_FD_7C_pseudo, // ld iyh
      variant_FD_7D, // ld a,iyl
      variant_FD_7D_pseudo, // ld iyl
      variant_FD_7E_dd, // ld a,(iy+dd)
      variant_FD_7E_dd_pseudo, // ld (iy+dd)
      variant_FD_CB_dd_00, // ld b,rlc(iy+dd)
      variant_FD_CB_dd_01, // ld c,rlc(iy+dd)
      variant_FD_CB_dd_02, // ld d,rlc(iy+dd)
      variant_FD_CB_dd_03, // ld e,rlc(iy+dd)
      variant_FD_CB_dd_04, // ld h,rlc(iy+dd)
      variant_FD_CB_dd_05, // ld l,rlc(iy+dd)
      variant_FD_CB_dd_07, // ld a,rlc(iy+dd)
      variant_FD_CB_dd_07_pseudo, // ld rlc(iy+dd)
      variant_FD_CB_dd_08, // ld b,rrc(iy+dd)
      variant_FD_CB_dd_09, // ld c,rrc(iy+dd)
      variant_FD_CB_dd_0A, // ld d,rrc(iy+dd)
      variant_FD_CB_dd_0B, // ld e,rrc(iy+dd)
      variant_FD_CB_dd_0C, // ld h,rrc(iy+dd)
      variant_FD_CB_dd_0D, // ld l,rrc(iy+dd)
      variant_FD_CB_dd_0F, // ld a,rrc(iy+dd)
      variant_FD_CB_dd_0F_pseudo, // ld rrc(iy+dd)
      variant_FD_CB_dd_10, // ld b,rl(iy+dd)
      variant_FD_CB_dd_11, // ld c,rl(iy+dd)
      variant_FD_CB_dd_12, // ld d,rl(iy+dd)
      variant_FD_CB_dd_13, // ld e,rl(iy+dd)
      variant_FD_CB_dd_14, // ld h,rl(iy+dd)
      variant_FD_CB_dd_15, // ld l,rl(iy+dd)
      variant_FD_CB_dd_17, // ld a,rl(iy+dd)
      variant_FD_CB_dd_17_pseudo, // ld rl(iy+dd)
      variant_FD_CB_dd_18, // ld b,rr(iy+dd)
      variant_FD_CB_dd_19, // ld c,rr(iy+dd)
      variant_FD_CB_dd_1A, // ld d,rr(iy+dd)
      variant_FD_CB_dd_1B, // ld e,rr(iy+dd)
      variant_FD_CB_dd_1C, // ld h,rr(iy+dd)
      variant_FD_CB_dd_1D, // ld l,rr(iy+dd)
      variant_FD_CB_dd_1F, // ld a,rr(iy+dd)
      variant_FD_CB_dd_1F_pseudo, // ld rr(iy+dd)
      variant_FD_CB_dd_20, // ld b,sla(iy+dd)
      variant_FD_CB_dd_21, // ld c,sla(iy+dd)
      variant_FD_CB_dd_22, // ld d,sla(iy+dd)
      variant_FD_CB_dd_23, // ld e,sla(iy+dd)
      variant_FD_CB_dd_24, // ld h,sla(iy+dd)
      variant_FD_CB_dd_25, // ld l,sla(iy+dd)
      variant_FD_CB_dd_27, // ld a,sla(iy+dd)
      variant_FD_CB_dd_27_pseudo, // ld sla(iy+dd)
      variant_FD_CB_dd_28, // ld b,sra(iy+dd)
      variant_FD_CB_dd_29, // ld c,sra(iy+dd)
      variant_FD_CB_dd_2A, // ld d,sra(iy+dd)
      variant_FD_CB_dd_2B, // ld e,sra(iy+dd)
      variant_FD_CB_dd_2C, // ld h,sra(iy+dd)
      variant_FD_CB_dd_2D, // ld l,sra(iy+dd)
      variant_FD_CB_dd_2F, // ld a,sra(iy+dd)
      variant_FD_CB_dd_2F_pseudo, // ld sra(iy+dd)
      variant_FD_CB_dd_30, // ld b,sll(iy+dd)
      variant_FD_CB_dd_31, // ld c,sll(iy+dd)
      variant_FD_CB_dd_32, // ld d,sll(iy+dd)
      variant_FD_CB_dd_33, // ld e,sll(iy+dd)
      variant_FD_CB_dd_34, // ld h,sll(iy+dd)
      variant_FD_CB_dd_35, // ld l,sll(iy+dd)
      variant_FD_CB_dd_37, // ld a,sll(iy+dd)
      variant_FD_CB_dd_37_pseudo, // ld sll(iy+dd)
      variant_FD_CB_dd_38, // ld b,srl(iy+dd)
      variant_FD_CB_dd_39, // ld c,srl(iy+dd)
      variant_FD_CB_dd_3A, // ld d,srl(iy+dd)
      variant_FD_CB_dd_3B, // ld e,srl(iy+dd)
      variant_FD_CB_dd_3C, // ld h,srl(iy+dd)
      variant_FD_CB_dd_3D, // ld l,srl(iy+dd)
      variant_FD_CB_dd_3F, // ld a,srl(iy+dd)
      variant_FD_CB_dd_3F_pseudo, // ld srl(iy+dd)
      variant_FD_CB_dd_80, // ld b,res 0,(iy+dd)
      variant_FD_CB_dd_81, // ld c,res 0,(iy+dd)
      variant_FD_CB_dd_82, // ld d,res 0,(iy+dd)
      variant_FD_CB_dd_83, // ld e,res 0,(iy+dd)
      variant_FD_CB_dd_84, // ld h,res 0,(iy+dd)
      variant_FD_CB_dd_85, // ld l,res 0,(iy+dd)
      variant_FD_CB_dd_87, // ld a,res 0,(iy+dd)
      variant_FD_CB_dd_87_pseudo, // ld res 0,(iy+dd)
      variant_FD_CB_dd_88, // ld b,res 1,(iy+dd)
      variant_FD_CB_dd_89, // ld c,res 1,(iy+dd)
      variant_FD_CB_dd_8A, // ld d,res 1,(iy+dd)
      variant_FD_CB_dd_8B, // ld e,res 1,(iy+dd)
      variant_FD_CB_dd_8C, // ld h,res 1,(iy+dd)
      variant_FD_CB_dd_8D, // ld l,res 1,(iy+dd)
      variant_FD_CB_dd_8F, // ld a,res 1,(iy+dd)
      variant_FD_CB_dd_8F_pseudo, // ld res 1,(iy+dd)
      variant_FD_CB_dd_90, // ld b,res 2,(iy+dd)
      variant_FD_CB_dd_91, // ld c,res 2,(iy+dd)
      variant_FD_CB_dd_92, // ld d,res 2,(iy+dd)
      variant_FD_CB_dd_93, // ld e,res 2,(iy+dd)
      variant_FD_CB_dd_94, // ld h,res 2,(iy+dd)
      variant_FD_CB_dd_95, // ld l,res 2,(iy+dd)
      variant_FD_CB_dd_97, // ld a,res 2,(iy+dd)
      variant_FD_CB_dd_97_pseudo, // ld res 2,(iy+dd)
      variant_FD_CB_dd_98, // ld b,res 3,(iy+dd)
      variant_FD_CB_dd_99, // ld c,res 3,(iy+dd)
      variant_FD_CB_dd_9A, // ld d,res 3,(iy+dd)
      variant_FD_CB_dd_9B, // ld e,res 3,(iy+dd)
      variant_FD_CB_dd_9C, // ld h,res 3,(iy+dd)
      variant_FD_CB_dd_9D, // ld l,res 3,(iy+dd)
      variant_FD_CB_dd_9F, // ld a,res 3,(iy+dd)
      variant_FD_CB_dd_9F_pseudo, // ld res 3,(iy+dd)
      variant_FD_CB_dd_A0, // ld b,res 4,(iy+dd)
      variant_FD_CB_dd_A1, // ld c,res 4,(iy+dd)
      variant_FD_CB_dd_A2, // ld d,res 4,(iy+dd)
      variant_FD_CB_dd_A3, // ld e,res 4,(iy+dd)
      variant_FD_CB_dd_A4, // ld h,res 4,(iy+dd)
      variant_FD_CB_dd_A5, // ld l,res 4,(iy+dd)
      variant_FD_CB_dd_A7, // ld a,res 4,(iy+dd)
      variant_FD_CB_dd_A7_pseudo, // ld res 4,(iy+dd)
      variant_FD_CB_dd_A8, // ld b,res 5,(iy+dd)
      variant_FD_CB_dd_A9, // ld c,res 5,(iy+dd)
      variant_FD_CB_dd_AA, // ld d,res 5,(iy+dd)
      variant_FD_CB_dd_AB, // ld e,res 5,(iy+dd)
      variant_FD_CB_dd_AC, // ld h,res 5,(iy+dd)
      variant_FD_CB_dd_AD, // ld l,res 5,(iy+dd)
      variant_FD_CB_dd_AF, // ld a,res 5,(iy+dd)
      variant_FD_CB_dd_AF_pseudo, // ld res 5,(iy+dd)
      variant_FD_CB_dd_B0, // ld b,res 6,(iy+dd)
      variant_FD_CB_dd_B1, // ld c,res 6,(iy+dd)
      variant_FD_CB_dd_B2, // ld d,res 6,(iy+dd)
      variant_FD_CB_dd_B3, // ld e,res 6,(iy+dd)
      variant_FD_CB_dd_B4, // ld h,res 6,(iy+dd)
      variant_FD_CB_dd_B5, // ld l,res 6,(iy+dd)
      variant_FD_CB_dd_B7, // ld a,res 6,(iy+dd)
      variant_FD_CB_dd_B7_pseudo, // ld res 6,(iy+dd)
      variant_FD_CB_dd_B8, // ld b,res 7,(iy+dd)
      variant_FD_CB_dd_B9, // ld c,res 7,(iy+dd)
      variant_FD_CB_dd_BA, // ld d,res 7,(iy+dd)
      variant_FD_CB_dd_BB, // ld e,res 7,(iy+dd)
      variant_FD_CB_dd_BC, // ld h,res 7,(iy+dd)
      variant_FD_CB_dd_BD, // ld l,res 7,(iy+dd)
      variant_FD_CB_dd_BF, // ld a,res 7,(iy+dd)
      variant_FD_CB_dd_BF_pseudo, // ld res 7,(iy+dd)
      variant_FD_CB_dd_C0, // ld b,set 0,(iy+dd)
      variant_FD_CB_dd_C1, // ld c,set 0,(iy+dd)
      variant_FD_CB_dd_C2, // ld d,set 0,(iy+dd)
      variant_FD_CB_dd_C3, // ld e,set 0,(iy+dd)
      variant_FD_CB_dd_C4, // ld h,set 0,(iy+dd)
      variant_FD_CB_dd_C5, // ld l,set 0,(iy+dd)
      variant_FD_CB_dd_C7, // ld a,set 0,(iy+dd)
      variant_FD_CB_dd_C7_pseudo, // ld set 0,(iy+dd)
      variant_FD_CB_dd_C8, // ld b,set 1,(iy+dd)
      variant_FD_CB_dd_C9, // ld c,set 1,(iy+dd)
      variant_FD_CB_dd_CA, // ld d,set 1,(iy+dd)
      variant_FD_CB_dd_CB, // ld e,set 1,(iy+dd)
      variant_FD_CB_dd_CC, // ld h,set 1,(iy+dd)
      variant_FD_CB_dd_CD, // ld l,set 1,(iy+dd)
      variant_FD_CB_dd_CF, // ld a,set 1,(iy+dd)
      variant_FD_CB_dd_CF_pseudo, // ld set 1,(iy+dd)
      variant_FD_CB_dd_D0, // ld b,set 2,(iy+dd)
      variant_FD_CB_dd_D1, // ld c,set 2,(iy+dd)
      variant_FD_CB_dd_D2, // ld d,set 2,(iy+dd)
      variant_FD_CB_dd_D3, // ld e,set 2,(iy+dd)
      variant_FD_CB_dd_D4, // ld h,set 2,(iy+dd)
      variant_FD_CB_dd_D5, // ld l,set 2,(iy+dd)
      variant_FD_CB_dd_D7, // ld a,set 2,(iy+dd)
      variant_FD_CB_dd_D7_pseudo, // ld set 2,(iy+dd)
      variant_FD_CB_dd_D8, // ld b,set 3,(iy+dd)
      variant_FD_CB_dd_D9, // ld c,set 3,(iy+dd)
      variant_FD_CB_dd_DA, // ld d,set 3,(iy+dd)
      variant_FD_CB_dd_DB, // ld e,set 3,(iy+dd)
      variant_FD_CB_dd_DC, // ld h,set 3,(iy+dd)
      variant_FD_CB_dd_DD, // ld l,set 3,(iy+dd)
      variant_FD_CB_dd_DF, // ld a,set 3,(iy+dd)
      variant_FD_CB_dd_DF_pseudo, // ld set 3,(iy+dd)
      variant_FD_CB_dd_E0, // ld b,set 4,(iy+dd)
      variant_FD_CB_dd_E1, // ld c,set 4,(iy+dd)
      variant_FD_CB_dd_E2, // ld d,set 4,(iy+dd)
      variant_FD_CB_dd_E3, // ld e,set 4,(iy+dd)
      variant_FD_CB_dd_E4, // ld h,set 4,(iy+dd)
      variant_FD_CB_dd_E5, // ld l,set 4,(iy+dd)
      variant_FD_CB_dd_E7, // ld a,set 4,(iy+dd)
      variant_FD_CB_dd_E7_pseudo, // ld set 4,(iy+dd)
      variant_FD_CB_dd_E8, // ld b,set 5,(iy+dd)
      variant_FD_CB_dd_E9, // ld c,set 5,(iy+dd)
      variant_FD_CB_dd_EA, // ld d,set 5,(iy+dd)
      variant_FD_CB_dd_EB, // ld e,set 5,(iy+dd)
      variant_FD_CB_dd_EC, // ld h,set 5,(iy+dd)
      variant_FD_CB_dd_ED, // ld l,set 5,(iy+dd)
      variant_FD_CB_dd_EF, // ld a,set 5,(iy+dd)
      variant_FD_CB_dd_EF_pseudo, // ld set 5,(iy+dd)
      variant_FD_CB_dd_F0, // ld b,set 6,(iy+dd)
      variant_FD_CB_dd_F1, // ld c,set 6,(iy+dd)
      variant_FD_CB_dd_F2, // ld d,set 6,(iy+dd)
      variant_FD_CB_dd_F3, // ld e,set 6,(iy+dd)
      variant_FD_CB_dd_F4, // ld h,set 6,(iy+dd)
      variant_FD_CB_dd_F5, // ld l,set 6,(iy+dd)
      variant_FD_CB_dd_F7, // ld a,set 6,(iy+dd)
      variant_FD_CB_dd_F7_pseudo, // ld set 6,(iy+dd)
      variant_FD_CB_dd_F8, // ld b,set 7,(iy+dd)
      variant_FD_CB_dd_F9, // ld c,set 7,(iy+dd)
      variant_FD_CB_dd_FA, // ld d,set 7,(iy+dd)
      variant_FD_CB_dd_FB, // ld e,set 7,(iy+dd)
      variant_FD_CB_dd_FC, // ld h,set 7,(iy+dd)
      variant_FD_CB_dd_FD, // ld l,set 7,(iy+dd)
      variant_FD_CB_dd_FF, // ld a,set 7,(iy+dd)
      variant_FD_CB_dd_FF_pseudo, // ld set 7,(iy+dd)
      variant_FD_F9, // ld sp,iy
    ],
  ],
  [
    "ldd",
    [
      variant_ED_A8, // ldd 
    ],
  ],
  [
    "lddr",
    [
      variant_ED_B8, // lddr 
    ],
  ],
  [
    "ldi",
    [
      variant_ED_A0, // ldi 
    ],
  ],
  [
    "ldir",
    [
      variant_ED_B0, // ldir 
    ],
  ],
  [
    "neg",
    [
      variant_ED_44, // neg 
    ],
  ],
  [
    "nop",
    [
      variant_00, // nop 
    ],
  ],
  [
    "or",
    [
      variant_B0, // or a,b
      variant_B0_pseudo, // or b
      variant_B1, // or a,c
      variant_B1_pseudo, // or c
      variant_B2, // or a,d
      variant_B2_pseudo, // or d
      variant_B3, // or a,e
      variant_B3_pseudo, // or e
      variant_B4, // or a,h
      variant_B4_pseudo, // or h
      variant_B5, // or a,l
      variant_B5_pseudo, // or l
      variant_B6, // or a,(hl)
      variant_B6_pseudo, // or (hl)
      variant_B7, // or a,a
      variant_B7_pseudo, // or a
      variant_DD_B4, // or a,ixh
      variant_DD_B4_pseudo, // or ixh
      variant_DD_B5, // or a,ixl
      variant_DD_B5_pseudo, // or ixl
      variant_DD_B6_dd, // or a,(ix+dd)
      variant_DD_B6_dd_pseudo, // or (ix+dd)
      variant_F6_nn, // or a,nn
      variant_F6_nn_pseudo, // or nn
      variant_FD_B4, // or a,iyh
      variant_FD_B4_pseudo, // or iyh
      variant_FD_B5, // or a,iyl
      variant_FD_B5_pseudo, // or iyl
      variant_FD_B6_dd, // or a,(iy+dd)
      variant_FD_B6_dd_pseudo, // or (iy+dd)
    ],
  ],
  [
    "otdr",
    [
      variant_ED_BB, // otdr 
    ],
  ],
  [
    "otir",
    [
      variant_ED_B3, // otir 
    ],
  ],
  [
    "out",
    [
      variant_D3_nn, // out (nn),a
      variant_ED_41, // out (c),b
      variant_ED_49, // out (c),c
      variant_ED_51, // out (c),d
      variant_ED_59, // out (c),e
      variant_ED_61, // out (c),h
      variant_ED_69, // out (c),l
      variant_ED_71, // out (c),0
      variant_ED_79, // out (c),a
    ],
  ],
  [
    "outd",
    [
      variant_ED_AB, // outd 
    ],
  ],
  [
    "outi",
    [
      variant_ED_A3, // outi 
    ],
  ],
  [
    "pop",
    [
      variant_C1, // pop bc
      variant_D1, // pop de
      variant_DD_E1, // pop ix
      variant_E1, // pop hl
      variant_F1, // pop af
      variant_FD_E1, // pop iy
    ],
  ],
  [
    "push",
    [
      variant_C5, // push bc
      variant_D5, // push de
      variant_DD_E5, // push ix
      variant_E5, // push hl
      variant_F5, // push af
      variant_FD_E5, // push iy
    ],
  ],
  [
    "res",
    [
      variant_CB_80, // res 0,b
      variant_CB_81, // res 0,c
      variant_CB_82, // res 0,d
      variant_CB_83, // res 0,e
      variant_CB_84, // res 0,h
      variant_CB_85, // res 0,l
      variant_CB_86, // res 0,(hl)
      variant_CB_87, // res 0,a
      variant_CB_88, // res 1,b
      variant_CB_89, // res 1,c
      variant_CB_8A, // res 1,d
      variant_CB_8B, // res 1,e
      variant_CB_8C, // res 1,h
      variant_CB_8D, // res 1,l
      variant_CB_8E, // res 1,(hl)
      variant_CB_8F, // res 1,a
      variant_CB_90, // res 2,b
      variant_CB_91, // res 2,c
      variant_CB_92, // res 2,d
      variant_CB_93, // res 2,e
      variant_CB_94, // res 2,h
      variant_CB_95, // res 2,l
      variant_CB_96, // res 2,(hl)
      variant_CB_97, // res 2,a
      variant_CB_98, // res 3,b
      variant_CB_99, // res 3,c
      variant_CB_9A, // res 3,d
      variant_CB_9B, // res 3,e
      variant_CB_9C, // res 3,h
      variant_CB_9D, // res 3,l
      variant_CB_9E, // res 3,(hl)
      variant_CB_9F, // res 3,a
      variant_CB_A0, // res 4,b
      variant_CB_A1, // res 4,c
      variant_CB_A2, // res 4,d
      variant_CB_A3, // res 4,e
      variant_CB_A4, // res 4,h
      variant_CB_A5, // res 4,l
      variant_CB_A6, // res 4,(hl)
      variant_CB_A7, // res 4,a
      variant_CB_A8, // res 5,b
      variant_CB_A9, // res 5,c
      variant_CB_AA, // res 5,d
      variant_CB_AB, // res 5,e
      variant_CB_AC, // res 5,h
      variant_CB_AD, // res 5,l
      variant_CB_AE, // res 5,(hl)
      variant_CB_AF, // res 5,a
      variant_CB_B0, // res 6,b
      variant_CB_B1, // res 6,c
      variant_CB_B2, // res 6,d
      variant_CB_B3, // res 6,e
      variant_CB_B4, // res 6,h
      variant_CB_B5, // res 6,l
      variant_CB_B6, // res 6,(hl)
      variant_CB_B7, // res 6,a
      variant_CB_B8, // res 7,b
      variant_CB_B9, // res 7,c
      variant_CB_BA, // res 7,d
      variant_CB_BB, // res 7,e
      variant_CB_BC, // res 7,h
      variant_CB_BD, // res 7,l
      variant_CB_BE, // res 7,(hl)
      variant_CB_BF, // res 7,a
      variant_DD_CB_dd_86, // res 0,(ix+dd)
      variant_DD_CB_dd_8E, // res 1,(ix+dd)
      variant_DD_CB_dd_96, // res 2,(ix+dd)
      variant_DD_CB_dd_9E, // res 3,(ix+dd)
      variant_DD_CB_dd_A6, // res 4,(ix+dd)
      variant_DD_CB_dd_AE, // res 5,(ix+dd)
      variant_DD_CB_dd_B6, // res 6,(ix+dd)
      variant_DD_CB_dd_BE, // res 7,(ix+dd)
      variant_FD_CB_dd_86, // res 0,(iy+dd)
      variant_FD_CB_dd_8E, // res 1,(iy+dd)
      variant_FD_CB_dd_96, // res 2,(iy+dd)
      variant_FD_CB_dd_9E, // res 3,(iy+dd)
      variant_FD_CB_dd_A6, // res 4,(iy+dd)
      variant_FD_CB_dd_AE, // res 5,(iy+dd)
      variant_FD_CB_dd_B6, // res 6,(iy+dd)
      variant_FD_CB_dd_BE, // res 7,(iy+dd)
    ],
  ],
  [
    "ret",
    [
      variant_C0, // ret nz
      variant_C8, // ret z
      variant_C9, // ret 
      variant_D0, // ret nc
      variant_D8, // ret c
      variant_E0, // ret po
      variant_E0_pseudo, // ret nv
      variant_E8, // ret pe
      variant_E8_pseudo, // ret v
      variant_F0, // ret p
      variant_F8, // ret m
    ],
  ],
  [
    "reti",
    [
      variant_ED_4D, // reti 
    ],
  ],
  [
    "retn",
    [
      variant_ED_45, // retn 
    ],
  ],
  [
    "rl",
    [
      variant_CB_10, // rl b
      variant_CB_11, // rl c
      variant_CB_12, // rl d
      variant_CB_13, // rl e
      variant_CB_14, // rl h
      variant_CB_15, // rl l
      variant_CB_16, // rl (hl)
      variant_CB_17, // rl a
      variant_DD_CB_dd_16, // rl (ix+dd)
      variant_FD_CB_dd_16, // rl (iy+dd)
    ],
  ],
  [
    "rla",
    [
      variant_17, // rla 
    ],
  ],
  [
    "rlc",
    [
      variant_CB_00, // rlc b
      variant_CB_01, // rlc c
      variant_CB_02, // rlc d
      variant_CB_03, // rlc e
      variant_CB_04, // rlc h
      variant_CB_05, // rlc l
      variant_CB_06, // rlc (hl)
      variant_CB_07, // rlc a
      variant_DD_CB_dd_06, // rlc (ix+dd)
      variant_FD_CB_dd_06, // rlc (iy+dd)
    ],
  ],
  [
    "rlca",
    [
      variant_07, // rlca 
    ],
  ],
  [
    "rld",
    [
      variant_ED_6F, // rld 
    ],
  ],
  [
    "rr",
    [
      variant_CB_18, // rr b
      variant_CB_19, // rr c
      variant_CB_1A, // rr d
      variant_CB_1B, // rr e
      variant_CB_1C, // rr h
      variant_CB_1D, // rr l
      variant_CB_1E, // rr (hl)
      variant_CB_1F, // rr a
      variant_DD_CB_dd_1E, // rr (ix+dd)
      variant_FD_CB_dd_1E, // rr (iy+dd)
    ],
  ],
  [
    "rra",
    [
      variant_1F, // rra 
    ],
  ],
  [
    "rrc",
    [
      variant_CB_08, // rrc b
      variant_CB_09, // rrc c
      variant_CB_0A, // rrc d
      variant_CB_0B, // rrc e
      variant_CB_0C, // rrc h
      variant_CB_0D, // rrc l
      variant_CB_0E, // rrc (hl)
      variant_CB_0F, // rrc a
      variant_DD_CB_dd_0E, // rrc (ix+dd)
      variant_FD_CB_dd_0E, // rrc (iy+dd)
    ],
  ],
  [
    "rrca",
    [
      variant_0F, // rrca 
    ],
  ],
  [
    "rrd",
    [
      variant_ED_67, // rrd 
    ],
  ],
  [
    "rst",
    [
      variant_C7, // rst 0
      variant_CF, // rst 8
      variant_D7, // rst 16
      variant_DF, // rst 24
      variant_E7, // rst 32
      variant_EF, // rst 40
      variant_F7, // rst 48
      variant_FF, // rst 56
    ],
  ],
  [
    "sbc",
    [
      variant_98, // sbc a,b
      variant_98_pseudo, // sbc b
      variant_99, // sbc a,c
      variant_99_pseudo, // sbc c
      variant_9A, // sbc a,d
      variant_9A_pseudo, // sbc d
      variant_9B, // sbc a,e
      variant_9B_pseudo, // sbc e
      variant_9C, // sbc a,h
      variant_9C_pseudo, // sbc h
      variant_9D, // sbc a,l
      variant_9D_pseudo, // sbc l
      variant_9E, // sbc a,(hl)
      variant_9E_pseudo, // sbc (hl)
      variant_9F, // sbc a,a
      variant_9F_pseudo, // sbc a
      variant_DD_9C, // sbc a,ixh
      variant_DD_9C_pseudo, // sbc ixh
      variant_DD_9D, // sbc a,ixl
      variant_DD_9D_pseudo, // sbc ixl
      variant_DD_9E_dd, // sbc a,(ix+dd)
      variant_DD_9E_dd_pseudo, // sbc (ix+dd)
      variant_DE_nn, // sbc a,nn
      variant_DE_nn_pseudo, // sbc nn
      variant_ED_42, // sbc hl,bc
      variant_ED_52, // sbc hl,de
      variant_ED_62, // sbc hl,hl
      variant_ED_72, // sbc hl,sp
      variant_FD_9C, // sbc a,iyh
      variant_FD_9C_pseudo, // sbc iyh
      variant_FD_9D, // sbc a,iyl
      variant_FD_9D_pseudo, // sbc iyl
      variant_FD_9E_dd, // sbc a,(iy+dd)
      variant_FD_9E_dd_pseudo, // sbc (iy+dd)
    ],
  ],
  [
    "scf",
    [
      variant_37, // scf 
    ],
  ],
  [
    "set",
    [
      variant_CB_C0, // set 0,b
      variant_CB_C1, // set 0,c
      variant_CB_C2, // set 0,d
      variant_CB_C3, // set 0,e
      variant_CB_C4, // set 0,h
      variant_CB_C5, // set 0,l
      variant_CB_C6, // set 0,(hl)
      variant_CB_C7, // set 0,a
      variant_CB_C8, // set 1,b
      variant_CB_C9, // set 1,c
      variant_CB_CA, // set 1,d
      variant_CB_CB, // set 1,e
      variant_CB_CC, // set 1,h
      variant_CB_CD, // set 1,l
      variant_CB_CE, // set 1,(hl)
      variant_CB_CF, // set 1,a
      variant_CB_D0, // set 2,b
      variant_CB_D1, // set 2,c
      variant_CB_D2, // set 2,d
      variant_CB_D3, // set 2,e
      variant_CB_D4, // set 2,h
      variant_CB_D5, // set 2,l
      variant_CB_D6, // set 2,(hl)
      variant_CB_D7, // set 2,a
      variant_CB_D8, // set 3,b
      variant_CB_D9, // set 3,c
      variant_CB_DA, // set 3,d
      variant_CB_DB, // set 3,e
      variant_CB_DC, // set 3,h
      variant_CB_DD, // set 3,l
      variant_CB_DE, // set 3,(hl)
      variant_CB_DF, // set 3,a
      variant_CB_E0, // set 4,b
      variant_CB_E1, // set 4,c
      variant_CB_E2, // set 4,d
      variant_CB_E3, // set 4,e
      variant_CB_E4, // set 4,h
      variant_CB_E5, // set 4,l
      variant_CB_E6, // set 4,(hl)
      variant_CB_E7, // set 4,a
      variant_CB_E8, // set 5,b
      variant_CB_E9, // set 5,c
      variant_CB_EA, // set 5,d
      variant_CB_EB, // set 5,e
      variant_CB_EC, // set 5,h
      variant_CB_ED, // set 5,l
      variant_CB_EE, // set 5,(hl)
      variant_CB_EF, // set 5,a
      variant_CB_F0, // set 6,b
      variant_CB_F1, // set 6,c
      variant_CB_F2, // set 6,d
      variant_CB_F3, // set 6,e
      variant_CB_F4, // set 6,h
      variant_CB_F5, // set 6,l
      variant_CB_F6, // set 6,(hl)
      variant_CB_F7, // set 6,a
      variant_CB_F8, // set 7,b
      variant_CB_F9, // set 7,c
      variant_CB_FA, // set 7,d
      variant_CB_FB, // set 7,e
      variant_CB_FC, // set 7,h
      variant_CB_FD, // set 7,l
      variant_CB_FE, // set 7,(hl)
      variant_CB_FF, // set 7,a
      variant_DD_CB_dd_C6, // set 0,(ix+dd)
      variant_DD_CB_dd_CE, // set 1,(ix+dd)
      variant_DD_CB_dd_D6, // set 2,(ix+dd)
      variant_DD_CB_dd_DE, // set 3,(ix+dd)
      variant_DD_CB_dd_E6, // set 4,(ix+dd)
      variant_DD_CB_dd_EE, // set 5,(ix+dd)
      variant_DD_CB_dd_F6, // set 6,(ix+dd)
      variant_DD_CB_dd_FE, // set 7,(ix+dd)
      variant_FD_CB_dd_C6, // set 0,(iy+dd)
      variant_FD_CB_dd_CE, // set 1,(iy+dd)
      variant_FD_CB_dd_D6, // set 2,(iy+dd)
      variant_FD_CB_dd_DE, // set 3,(iy+dd)
      variant_FD_CB_dd_E6, // set 4,(iy+dd)
      variant_FD_CB_dd_EE, // set 5,(iy+dd)
      variant_FD_CB_dd_F6, // set 6,(iy+dd)
      variant_FD_CB_dd_FE, // set 7,(iy+dd)
    ],
  ],
  [
    "sla",
    [
      variant_CB_20, // sla b
      variant_CB_21, // sla c
      variant_CB_22, // sla d
      variant_CB_23, // sla e
      variant_CB_24, // sla h
      variant_CB_25, // sla l
      variant_CB_26, // sla (hl)
      variant_CB_27, // sla a
      variant_DD_CB_dd_26, // sla (ix+dd)
      variant_FD_CB_dd_26, // sla (iy+dd)
    ],
  ],
  [
    "sll",
    [
      variant_CB_30, // sll b
      variant_CB_31, // sll c
      variant_CB_32, // sll d
      variant_CB_33, // sll e
      variant_CB_34, // sll h
      variant_CB_35, // sll l
      variant_CB_36, // sll (hl)
      variant_CB_37, // sll a
      variant_DD_CB_dd_36, // sll (ix+dd)
      variant_FD_CB_dd_36, // sll (iy+dd)
    ],
  ],
  [
    "sra",
    [
      variant_CB_28, // sra b
      variant_CB_29, // sra c
      variant_CB_2A, // sra d
      variant_CB_2B, // sra e
      variant_CB_2C, // sra h
      variant_CB_2D, // sra l
      variant_CB_2E, // sra (hl)
      variant_CB_2F, // sra a
      variant_DD_CB_dd_2E, // sra (ix+dd)
      variant_FD_CB_dd_2E, // sra (iy+dd)
    ],
  ],
  [
    "srl",
    [
      variant_CB_38, // srl b
      variant_CB_39, // srl c
      variant_CB_3A, // srl d
      variant_CB_3B, // srl e
      variant_CB_3C, // srl h
      variant_CB_3D, // srl l
      variant_CB_3E, // srl (hl)
      variant_CB_3F, // srl a
      variant_DD_CB_dd_3E, // srl (ix+dd)
      variant_FD_CB_dd_3E, // srl (iy+dd)
    ],
  ],
  [
    "sub",
    [
      variant_90, // sub a,b
      variant_90_pseudo, // sub b
      variant_91, // sub a,c
      variant_91_pseudo, // sub c
      variant_92, // sub a,d
      variant_92_pseudo, // sub d
      variant_93, // sub a,e
      variant_93_pseudo, // sub e
      variant_94, // sub a,h
      variant_94_pseudo, // sub h
      variant_95, // sub a,l
      variant_95_pseudo, // sub l
      variant_96, // sub a,(hl)
      variant_96_pseudo, // sub (hl)
      variant_97, // sub a,a
      variant_97_pseudo, // sub a
      variant_D6_nn, // sub a,nn
      variant_D6_nn_pseudo, // sub nn
      variant_DD_94, // sub a,ixh
      variant_DD_94_pseudo, // sub ixh
      variant_DD_95, // sub a,ixl
      variant_DD_95_pseudo, // sub ixl
      variant_DD_96_dd, // sub a,(ix+dd)
      variant_DD_96_dd_pseudo, // sub (ix+dd)
      variant_FD_94, // sub a,iyh
      variant_FD_94_pseudo, // sub iyh
      variant_FD_95, // sub a,iyl
      variant_FD_95_pseudo, // sub iyl
      variant_FD_96_dd, // sub a,(iy+dd)
      variant_FD_96_dd_pseudo, // sub (iy+dd)
    ],
  ],
  [
    "xor",
    [
      variant_A8, // xor a,b
      variant_A8_pseudo, // xor b
      variant_A9, // xor a,c
      variant_A9_pseudo, // xor c
      variant_AA, // xor a,d
      variant_AA_pseudo, // xor d
      variant_AB, // xor a,e
      variant_AB_pseudo, // xor e
      variant_AC, // xor a,h
      variant_AC_pseudo, // xor h
      variant_AD, // xor a,l
      variant_AD_pseudo, // xor l
      variant_AE, // xor a,(hl)
      variant_AE_pseudo, // xor (hl)
      variant_AF, // xor a,a
      variant_AF_pseudo, // xor a
      variant_DD_AC, // xor a,ixh
      variant_DD_AC_pseudo, // xor ixh
      variant_DD_AD, // xor a,ixl
      variant_DD_AD_pseudo, // xor ixl
      variant_DD_AE_dd, // xor a,(ix+dd)
      variant_DD_AE_dd_pseudo, // xor (ix+dd)
      variant_EE_nn, // xor a,nn
      variant_EE_nn_pseudo, // xor nn
      variant_FD_AC, // xor a,iyh
      variant_FD_AC_pseudo, // xor iyh
      variant_FD_AD, // xor a,iyl
      variant_FD_AD_pseudo, // xor iyl
      variant_FD_AE_dd, // xor a,(iy+dd)
      variant_FD_AE_dd_pseudo, // xor (iy+dd)
    ],
  ],
]);

// Map from opcode to variant or sub-map.
export const opcodeMap = new Map<number,OpcodeVariant | OpcodeMap>([
  [ 0x00, variant_00 ], // nop 
  [ 0x01, variant_01_nnnn ], // ld bc,nnnn
  [ 0x02, variant_02 ], // ld (bc),a
  [ 0x03, variant_03 ], // inc bc
  [ 0x04, variant_04 ], // inc b
  [ 0x05, variant_05 ], // dec b
  [ 0x06, variant_06_nn ], // ld b,nn
  [ 0x07, variant_07 ], // rlca 
  [ 0x08, variant_08 ], // ex af,af'
  [ 0x09, variant_09 ], // add hl,bc
  [ 0x0A, variant_0A ], // ld a,(bc)
  [ 0x0B, variant_0B ], // dec bc
  [ 0x0C, variant_0C ], // inc c
  [ 0x0D, variant_0D ], // dec c
  [ 0x0E, variant_0E_nn ], // ld c,nn
  [ 0x0F, variant_0F ], // rrca 
  [ 0x10, variant_10_offset ], // djnz offset
  [ 0x11, variant_11_nnnn ], // ld de,nnnn
  [ 0x12, variant_12 ], // ld (de),a
  [ 0x13, variant_13 ], // inc de
  [ 0x14, variant_14 ], // inc d
  [ 0x15, variant_15 ], // dec d
  [ 0x16, variant_16_nn ], // ld d,nn
  [ 0x17, variant_17 ], // rla 
  [ 0x18, variant_18_offset ], // jr offset
  [ 0x19, variant_19 ], // add hl,de
  [ 0x1A, variant_1A ], // ld a,(de)
  [ 0x1B, variant_1B ], // dec de
  [ 0x1C, variant_1C ], // inc e
  [ 0x1D, variant_1D ], // dec e
  [ 0x1E, variant_1E_nn ], // ld e,nn
  [ 0x1F, variant_1F ], // rra 
  [ 0x20, variant_20_offset ], // jr nz,offset
  [ 0x21, variant_21_nnnn ], // ld hl,nnnn
  [ 0x22, variant_22_nnnn ], // ld (nnnn),hl
  [ 0x23, variant_23 ], // inc hl
  [ 0x24, variant_24 ], // inc h
  [ 0x25, variant_25 ], // dec h
  [ 0x26, variant_26_nn ], // ld h,nn
  [ 0x27, variant_27 ], // daa 
  [ 0x28, variant_28_offset ], // jr z,offset
  [ 0x29, variant_29 ], // add hl,hl
  [ 0x2A, variant_2A_nnnn ], // ld hl,(nnnn)
  [ 0x2B, variant_2B ], // dec hl
  [ 0x2C, variant_2C ], // inc l
  [ 0x2D, variant_2D ], // dec l
  [ 0x2E, variant_2E_nn ], // ld l,nn
  [ 0x2F, variant_2F ], // cpl 
  [ 0x30, variant_30_offset ], // jr nc,offset
  [ 0x31, variant_31_nnnn ], // ld sp,nnnn
  [ 0x32, variant_32_nnnn ], // ld (nnnn),a
  [ 0x33, variant_33 ], // inc sp
  [ 0x34, variant_34 ], // inc (hl)
  [ 0x35, variant_35 ], // dec (hl)
  [ 0x36, variant_36_nn ], // ld (hl),nn
  [ 0x37, variant_37 ], // scf 
  [ 0x38, variant_38_offset ], // jr c,offset
  [ 0x39, variant_39 ], // add hl,sp
  [ 0x3A, variant_3A_nnnn ], // ld a,(nnnn)
  [ 0x3B, variant_3B ], // dec sp
  [ 0x3C, variant_3C ], // inc a
  [ 0x3D, variant_3D ], // dec a
  [ 0x3E, variant_3E_nn ], // ld a,nn
  [ 0x3F, variant_3F ], // ccf 
  [ 0x40, variant_40 ], // ld b,b
  [ 0x41, variant_41 ], // ld b,c
  [ 0x42, variant_42 ], // ld b,d
  [ 0x43, variant_43 ], // ld b,e
  [ 0x44, variant_44 ], // ld b,h
  [ 0x45, variant_45 ], // ld b,l
  [ 0x46, variant_46 ], // ld b,(hl)
  [ 0x47, variant_47 ], // ld b,a
  [ 0x48, variant_48 ], // ld c,b
  [ 0x49, variant_49 ], // ld c,c
  [ 0x4A, variant_4A ], // ld c,d
  [ 0x4B, variant_4B ], // ld c,e
  [ 0x4C, variant_4C ], // ld c,h
  [ 0x4D, variant_4D ], // ld c,l
  [ 0x4E, variant_4E ], // ld c,(hl)
  [ 0x4F, variant_4F ], // ld c,a
  [ 0x50, variant_50 ], // ld d,b
  [ 0x51, variant_51 ], // ld d,c
  [ 0x52, variant_52 ], // ld d,d
  [ 0x53, variant_53 ], // ld d,e
  [ 0x54, variant_54 ], // ld d,h
  [ 0x55, variant_55 ], // ld d,l
  [ 0x56, variant_56 ], // ld d,(hl)
  [ 0x57, variant_57 ], // ld d,a
  [ 0x58, variant_58 ], // ld e,b
  [ 0x59, variant_59 ], // ld e,c
  [ 0x5A, variant_5A ], // ld e,d
  [ 0x5B, variant_5B ], // ld e,e
  [ 0x5C, variant_5C ], // ld e,h
  [ 0x5D, variant_5D ], // ld e,l
  [ 0x5E, variant_5E ], // ld e,(hl)
  [ 0x5F, variant_5F ], // ld e,a
  [ 0x60, variant_60 ], // ld h,b
  [ 0x61, variant_61 ], // ld h,c
  [ 0x62, variant_62 ], // ld h,d
  [ 0x63, variant_63 ], // ld h,e
  [ 0x64, variant_64 ], // ld h,h
  [ 0x65, variant_65 ], // ld h,l
  [ 0x66, variant_66 ], // ld h,(hl)
  [ 0x67, variant_67 ], // ld h,a
  [ 0x68, variant_68 ], // ld l,b
  [ 0x69, variant_69 ], // ld l,c
  [ 0x6A, variant_6A ], // ld l,d
  [ 0x6B, variant_6B ], // ld l,e
  [ 0x6C, variant_6C ], // ld l,h
  [ 0x6D, variant_6D ], // ld l,l
  [ 0x6E, variant_6E ], // ld l,(hl)
  [ 0x6F, variant_6F ], // ld l,a
  [ 0x70, variant_70 ], // ld (hl),b
  [ 0x71, variant_71 ], // ld (hl),c
  [ 0x72, variant_72 ], // ld (hl),d
  [ 0x73, variant_73 ], // ld (hl),e
  [ 0x74, variant_74 ], // ld (hl),h
  [ 0x75, variant_75 ], // ld (hl),l
  [ 0x76, variant_76 ], // halt 
  [ 0x77, variant_77 ], // ld (hl),a
  [ 0x78, variant_78 ], // ld a,b
  [ 0x79, variant_79 ], // ld a,c
  [ 0x7A, variant_7A ], // ld a,d
  [ 0x7B, variant_7B ], // ld a,e
  [ 0x7C, variant_7C ], // ld a,h
  [ 0x7D, variant_7D ], // ld a,l
  [ 0x7E, variant_7E ], // ld a,(hl)
  [ 0x7F, variant_7F ], // ld a,a
  [ 0x80, variant_80 ], // add a,b
  [ 0x81, variant_81 ], // add a,c
  [ 0x82, variant_82 ], // add a,d
  [ 0x83, variant_83 ], // add a,e
  [ 0x84, variant_84 ], // add a,h
  [ 0x85, variant_85 ], // add a,l
  [ 0x86, variant_86 ], // add a,(hl)
  [ 0x87, variant_87 ], // add a,a
  [ 0x88, variant_88 ], // adc a,b
  [ 0x89, variant_89 ], // adc a,c
  [ 0x8A, variant_8A ], // adc a,d
  [ 0x8B, variant_8B ], // adc a,e
  [ 0x8C, variant_8C ], // adc a,h
  [ 0x8D, variant_8D ], // adc a,l
  [ 0x8E, variant_8E ], // adc a,(hl)
  [ 0x8F, variant_8F ], // adc a,a
  [ 0x90, variant_90 ], // sub a,b
  [ 0x91, variant_91 ], // sub a,c
  [ 0x92, variant_92 ], // sub a,d
  [ 0x93, variant_93 ], // sub a,e
  [ 0x94, variant_94 ], // sub a,h
  [ 0x95, variant_95 ], // sub a,l
  [ 0x96, variant_96 ], // sub a,(hl)
  [ 0x97, variant_97 ], // sub a,a
  [ 0x98, variant_98 ], // sbc a,b
  [ 0x99, variant_99 ], // sbc a,c
  [ 0x9A, variant_9A ], // sbc a,d
  [ 0x9B, variant_9B ], // sbc a,e
  [ 0x9C, variant_9C ], // sbc a,h
  [ 0x9D, variant_9D ], // sbc a,l
  [ 0x9E, variant_9E ], // sbc a,(hl)
  [ 0x9F, variant_9F ], // sbc a,a
  [ 0xA0, variant_A0 ], // and a,b
  [ 0xA1, variant_A1 ], // and a,c
  [ 0xA2, variant_A2 ], // and a,d
  [ 0xA3, variant_A3 ], // and a,e
  [ 0xA4, variant_A4 ], // and a,h
  [ 0xA5, variant_A5 ], // and a,l
  [ 0xA6, variant_A6 ], // and a,(hl)
  [ 0xA7, variant_A7 ], // and a,a
  [ 0xA8, variant_A8 ], // xor a,b
  [ 0xA9, variant_A9 ], // xor a,c
  [ 0xAA, variant_AA ], // xor a,d
  [ 0xAB, variant_AB ], // xor a,e
  [ 0xAC, variant_AC ], // xor a,h
  [ 0xAD, variant_AD ], // xor a,l
  [ 0xAE, variant_AE ], // xor a,(hl)
  [ 0xAF, variant_AF ], // xor a,a
  [ 0xB0, variant_B0 ], // or a,b
  [ 0xB1, variant_B1 ], // or a,c
  [ 0xB2, variant_B2 ], // or a,d
  [ 0xB3, variant_B3 ], // or a,e
  [ 0xB4, variant_B4 ], // or a,h
  [ 0xB5, variant_B5 ], // or a,l
  [ 0xB6, variant_B6 ], // or a,(hl)
  [ 0xB7, variant_B7 ], // or a,a
  [ 0xB8, variant_B8 ], // cp a,b
  [ 0xB9, variant_B9 ], // cp a,c
  [ 0xBA, variant_BA ], // cp a,d
  [ 0xBB, variant_BB ], // cp a,e
  [ 0xBC, variant_BC ], // cp a,h
  [ 0xBD, variant_BD ], // cp a,l
  [ 0xBE, variant_BE ], // cp a,(hl)
  [ 0xBF, variant_BF ], // cp a,a
  [ 0xC0, variant_C0 ], // ret nz
  [ 0xC1, variant_C1 ], // pop bc
  [ 0xC2, variant_C2_nnnn ], // jp nz,nnnn
  [ 0xC3, variant_C3_nnnn ], // jp nnnn
  [ 0xC4, variant_C4_nnnn ], // call nz,nnnn
  [ 0xC5, variant_C5 ], // push bc
  [ 0xC6, variant_C6_nn ], // add a,nn
  [ 0xC7, variant_C7 ], // rst 0
  [ 0xC8, variant_C8 ], // ret z
  [ 0xC9, variant_C9 ], // ret 
  [ 0xCA, variant_CA_nnnn ], // jp z,nnnn
  [ 0xCB, new Map<number,OpcodeVariant | OpcodeMap>([
    [ 0x00, variant_CB_00 ], // rlc b
    [ 0x01, variant_CB_01 ], // rlc c
    [ 0x02, variant_CB_02 ], // rlc d
    [ 0x03, variant_CB_03 ], // rlc e
    [ 0x04, variant_CB_04 ], // rlc h
    [ 0x05, variant_CB_05 ], // rlc l
    [ 0x06, variant_CB_06 ], // rlc (hl)
    [ 0x07, variant_CB_07 ], // rlc a
    [ 0x08, variant_CB_08 ], // rrc b
    [ 0x09, variant_CB_09 ], // rrc c
    [ 0x0A, variant_CB_0A ], // rrc d
    [ 0x0B, variant_CB_0B ], // rrc e
    [ 0x0C, variant_CB_0C ], // rrc h
    [ 0x0D, variant_CB_0D ], // rrc l
    [ 0x0E, variant_CB_0E ], // rrc (hl)
    [ 0x0F, variant_CB_0F ], // rrc a
    [ 0x10, variant_CB_10 ], // rl b
    [ 0x11, variant_CB_11 ], // rl c
    [ 0x12, variant_CB_12 ], // rl d
    [ 0x13, variant_CB_13 ], // rl e
    [ 0x14, variant_CB_14 ], // rl h
    [ 0x15, variant_CB_15 ], // rl l
    [ 0x16, variant_CB_16 ], // rl (hl)
    [ 0x17, variant_CB_17 ], // rl a
    [ 0x18, variant_CB_18 ], // rr b
    [ 0x19, variant_CB_19 ], // rr c
    [ 0x1A, variant_CB_1A ], // rr d
    [ 0x1B, variant_CB_1B ], // rr e
    [ 0x1C, variant_CB_1C ], // rr h
    [ 0x1D, variant_CB_1D ], // rr l
    [ 0x1E, variant_CB_1E ], // rr (hl)
    [ 0x1F, variant_CB_1F ], // rr a
    [ 0x20, variant_CB_20 ], // sla b
    [ 0x21, variant_CB_21 ], // sla c
    [ 0x22, variant_CB_22 ], // sla d
    [ 0x23, variant_CB_23 ], // sla e
    [ 0x24, variant_CB_24 ], // sla h
    [ 0x25, variant_CB_25 ], // sla l
    [ 0x26, variant_CB_26 ], // sla (hl)
    [ 0x27, variant_CB_27 ], // sla a
    [ 0x28, variant_CB_28 ], // sra b
    [ 0x29, variant_CB_29 ], // sra c
    [ 0x2A, variant_CB_2A ], // sra d
    [ 0x2B, variant_CB_2B ], // sra e
    [ 0x2C, variant_CB_2C ], // sra h
    [ 0x2D, variant_CB_2D ], // sra l
    [ 0x2E, variant_CB_2E ], // sra (hl)
    [ 0x2F, variant_CB_2F ], // sra a
    [ 0x30, variant_CB_30 ], // sll b
    [ 0x31, variant_CB_31 ], // sll c
    [ 0x32, variant_CB_32 ], // sll d
    [ 0x33, variant_CB_33 ], // sll e
    [ 0x34, variant_CB_34 ], // sll h
    [ 0x35, variant_CB_35 ], // sll l
    [ 0x36, variant_CB_36 ], // sll (hl)
    [ 0x37, variant_CB_37 ], // sll a
    [ 0x38, variant_CB_38 ], // srl b
    [ 0x39, variant_CB_39 ], // srl c
    [ 0x3A, variant_CB_3A ], // srl d
    [ 0x3B, variant_CB_3B ], // srl e
    [ 0x3C, variant_CB_3C ], // srl h
    [ 0x3D, variant_CB_3D ], // srl l
    [ 0x3E, variant_CB_3E ], // srl (hl)
    [ 0x3F, variant_CB_3F ], // srl a
    [ 0x40, variant_CB_40 ], // bit 0,b
    [ 0x41, variant_CB_41 ], // bit 0,c
    [ 0x42, variant_CB_42 ], // bit 0,d
    [ 0x43, variant_CB_43 ], // bit 0,e
    [ 0x44, variant_CB_44 ], // bit 0,h
    [ 0x45, variant_CB_45 ], // bit 0,l
    [ 0x46, variant_CB_46 ], // bit 0,(hl)
    [ 0x47, variant_CB_47 ], // bit 0,a
    [ 0x48, variant_CB_48 ], // bit 1,b
    [ 0x49, variant_CB_49 ], // bit 1,c
    [ 0x4A, variant_CB_4A ], // bit 1,d
    [ 0x4B, variant_CB_4B ], // bit 1,e
    [ 0x4C, variant_CB_4C ], // bit 1,h
    [ 0x4D, variant_CB_4D ], // bit 1,l
    [ 0x4E, variant_CB_4E ], // bit 1,(hl)
    [ 0x4F, variant_CB_4F ], // bit 1,a
    [ 0x50, variant_CB_50 ], // bit 2,b
    [ 0x51, variant_CB_51 ], // bit 2,c
    [ 0x52, variant_CB_52 ], // bit 2,d
    [ 0x53, variant_CB_53 ], // bit 2,e
    [ 0x54, variant_CB_54 ], // bit 2,h
    [ 0x55, variant_CB_55 ], // bit 2,l
    [ 0x56, variant_CB_56 ], // bit 2,(hl)
    [ 0x57, variant_CB_57 ], // bit 2,a
    [ 0x58, variant_CB_58 ], // bit 3,b
    [ 0x59, variant_CB_59 ], // bit 3,c
    [ 0x5A, variant_CB_5A ], // bit 3,d
    [ 0x5B, variant_CB_5B ], // bit 3,e
    [ 0x5C, variant_CB_5C ], // bit 3,h
    [ 0x5D, variant_CB_5D ], // bit 3,l
    [ 0x5E, variant_CB_5E ], // bit 3,(hl)
    [ 0x5F, variant_CB_5F ], // bit 3,a
    [ 0x60, variant_CB_60 ], // bit 4,b
    [ 0x61, variant_CB_61 ], // bit 4,c
    [ 0x62, variant_CB_62 ], // bit 4,d
    [ 0x63, variant_CB_63 ], // bit 4,e
    [ 0x64, variant_CB_64 ], // bit 4,h
    [ 0x65, variant_CB_65 ], // bit 4,l
    [ 0x66, variant_CB_66 ], // bit 4,(hl)
    [ 0x67, variant_CB_67 ], // bit 4,a
    [ 0x68, variant_CB_68 ], // bit 5,b
    [ 0x69, variant_CB_69 ], // bit 5,c
    [ 0x6A, variant_CB_6A ], // bit 5,d
    [ 0x6B, variant_CB_6B ], // bit 5,e
    [ 0x6C, variant_CB_6C ], // bit 5,h
    [ 0x6D, variant_CB_6D ], // bit 5,l
    [ 0x6E, variant_CB_6E ], // bit 5,(hl)
    [ 0x6F, variant_CB_6F ], // bit 5,a
    [ 0x70, variant_CB_70 ], // bit 6,b
    [ 0x71, variant_CB_71 ], // bit 6,c
    [ 0x72, variant_CB_72 ], // bit 6,d
    [ 0x73, variant_CB_73 ], // bit 6,e
    [ 0x74, variant_CB_74 ], // bit 6,h
    [ 0x75, variant_CB_75 ], // bit 6,l
    [ 0x76, variant_CB_76 ], // bit 6,(hl)
    [ 0x77, variant_CB_77 ], // bit 6,a
    [ 0x78, variant_CB_78 ], // bit 7,b
    [ 0x79, variant_CB_79 ], // bit 7,c
    [ 0x7A, variant_CB_7A ], // bit 7,d
    [ 0x7B, variant_CB_7B ], // bit 7,e
    [ 0x7C, variant_CB_7C ], // bit 7,h
    [ 0x7D, variant_CB_7D ], // bit 7,l
    [ 0x7E, variant_CB_7E ], // bit 7,(hl)
    [ 0x7F, variant_CB_7F ], // bit 7,a
    [ 0x80, variant_CB_80 ], // res 0,b
    [ 0x81, variant_CB_81 ], // res 0,c
    [ 0x82, variant_CB_82 ], // res 0,d
    [ 0x83, variant_CB_83 ], // res 0,e
    [ 0x84, variant_CB_84 ], // res 0,h
    [ 0x85, variant_CB_85 ], // res 0,l
    [ 0x86, variant_CB_86 ], // res 0,(hl)
    [ 0x87, variant_CB_87 ], // res 0,a
    [ 0x88, variant_CB_88 ], // res 1,b
    [ 0x89, variant_CB_89 ], // res 1,c
    [ 0x8A, variant_CB_8A ], // res 1,d
    [ 0x8B, variant_CB_8B ], // res 1,e
    [ 0x8C, variant_CB_8C ], // res 1,h
    [ 0x8D, variant_CB_8D ], // res 1,l
    [ 0x8E, variant_CB_8E ], // res 1,(hl)
    [ 0x8F, variant_CB_8F ], // res 1,a
    [ 0x90, variant_CB_90 ], // res 2,b
    [ 0x91, variant_CB_91 ], // res 2,c
    [ 0x92, variant_CB_92 ], // res 2,d
    [ 0x93, variant_CB_93 ], // res 2,e
    [ 0x94, variant_CB_94 ], // res 2,h
    [ 0x95, variant_CB_95 ], // res 2,l
    [ 0x96, variant_CB_96 ], // res 2,(hl)
    [ 0x97, variant_CB_97 ], // res 2,a
    [ 0x98, variant_CB_98 ], // res 3,b
    [ 0x99, variant_CB_99 ], // res 3,c
    [ 0x9A, variant_CB_9A ], // res 3,d
    [ 0x9B, variant_CB_9B ], // res 3,e
    [ 0x9C, variant_CB_9C ], // res 3,h
    [ 0x9D, variant_CB_9D ], // res 3,l
    [ 0x9E, variant_CB_9E ], // res 3,(hl)
    [ 0x9F, variant_CB_9F ], // res 3,a
    [ 0xA0, variant_CB_A0 ], // res 4,b
    [ 0xA1, variant_CB_A1 ], // res 4,c
    [ 0xA2, variant_CB_A2 ], // res 4,d
    [ 0xA3, variant_CB_A3 ], // res 4,e
    [ 0xA4, variant_CB_A4 ], // res 4,h
    [ 0xA5, variant_CB_A5 ], // res 4,l
    [ 0xA6, variant_CB_A6 ], // res 4,(hl)
    [ 0xA7, variant_CB_A7 ], // res 4,a
    [ 0xA8, variant_CB_A8 ], // res 5,b
    [ 0xA9, variant_CB_A9 ], // res 5,c
    [ 0xAA, variant_CB_AA ], // res 5,d
    [ 0xAB, variant_CB_AB ], // res 5,e
    [ 0xAC, variant_CB_AC ], // res 5,h
    [ 0xAD, variant_CB_AD ], // res 5,l
    [ 0xAE, variant_CB_AE ], // res 5,(hl)
    [ 0xAF, variant_CB_AF ], // res 5,a
    [ 0xB0, variant_CB_B0 ], // res 6,b
    [ 0xB1, variant_CB_B1 ], // res 6,c
    [ 0xB2, variant_CB_B2 ], // res 6,d
    [ 0xB3, variant_CB_B3 ], // res 6,e
    [ 0xB4, variant_CB_B4 ], // res 6,h
    [ 0xB5, variant_CB_B5 ], // res 6,l
    [ 0xB6, variant_CB_B6 ], // res 6,(hl)
    [ 0xB7, variant_CB_B7 ], // res 6,a
    [ 0xB8, variant_CB_B8 ], // res 7,b
    [ 0xB9, variant_CB_B9 ], // res 7,c
    [ 0xBA, variant_CB_BA ], // res 7,d
    [ 0xBB, variant_CB_BB ], // res 7,e
    [ 0xBC, variant_CB_BC ], // res 7,h
    [ 0xBD, variant_CB_BD ], // res 7,l
    [ 0xBE, variant_CB_BE ], // res 7,(hl)
    [ 0xBF, variant_CB_BF ], // res 7,a
    [ 0xC0, variant_CB_C0 ], // set 0,b
    [ 0xC1, variant_CB_C1 ], // set 0,c
    [ 0xC2, variant_CB_C2 ], // set 0,d
    [ 0xC3, variant_CB_C3 ], // set 0,e
    [ 0xC4, variant_CB_C4 ], // set 0,h
    [ 0xC5, variant_CB_C5 ], // set 0,l
    [ 0xC6, variant_CB_C6 ], // set 0,(hl)
    [ 0xC7, variant_CB_C7 ], // set 0,a
    [ 0xC8, variant_CB_C8 ], // set 1,b
    [ 0xC9, variant_CB_C9 ], // set 1,c
    [ 0xCA, variant_CB_CA ], // set 1,d
    [ 0xCB, variant_CB_CB ], // set 1,e
    [ 0xCC, variant_CB_CC ], // set 1,h
    [ 0xCD, variant_CB_CD ], // set 1,l
    [ 0xCE, variant_CB_CE ], // set 1,(hl)
    [ 0xCF, variant_CB_CF ], // set 1,a
    [ 0xD0, variant_CB_D0 ], // set 2,b
    [ 0xD1, variant_CB_D1 ], // set 2,c
    [ 0xD2, variant_CB_D2 ], // set 2,d
    [ 0xD3, variant_CB_D3 ], // set 2,e
    [ 0xD4, variant_CB_D4 ], // set 2,h
    [ 0xD5, variant_CB_D5 ], // set 2,l
    [ 0xD6, variant_CB_D6 ], // set 2,(hl)
    [ 0xD7, variant_CB_D7 ], // set 2,a
    [ 0xD8, variant_CB_D8 ], // set 3,b
    [ 0xD9, variant_CB_D9 ], // set 3,c
    [ 0xDA, variant_CB_DA ], // set 3,d
    [ 0xDB, variant_CB_DB ], // set 3,e
    [ 0xDC, variant_CB_DC ], // set 3,h
    [ 0xDD, variant_CB_DD ], // set 3,l
    [ 0xDE, variant_CB_DE ], // set 3,(hl)
    [ 0xDF, variant_CB_DF ], // set 3,a
    [ 0xE0, variant_CB_E0 ], // set 4,b
    [ 0xE1, variant_CB_E1 ], // set 4,c
    [ 0xE2, variant_CB_E2 ], // set 4,d
    [ 0xE3, variant_CB_E3 ], // set 4,e
    [ 0xE4, variant_CB_E4 ], // set 4,h
    [ 0xE5, variant_CB_E5 ], // set 4,l
    [ 0xE6, variant_CB_E6 ], // set 4,(hl)
    [ 0xE7, variant_CB_E7 ], // set 4,a
    [ 0xE8, variant_CB_E8 ], // set 5,b
    [ 0xE9, variant_CB_E9 ], // set 5,c
    [ 0xEA, variant_CB_EA ], // set 5,d
    [ 0xEB, variant_CB_EB ], // set 5,e
    [ 0xEC, variant_CB_EC ], // set 5,h
    [ 0xED, variant_CB_ED ], // set 5,l
    [ 0xEE, variant_CB_EE ], // set 5,(hl)
    [ 0xEF, variant_CB_EF ], // set 5,a
    [ 0xF0, variant_CB_F0 ], // set 6,b
    [ 0xF1, variant_CB_F1 ], // set 6,c
    [ 0xF2, variant_CB_F2 ], // set 6,d
    [ 0xF3, variant_CB_F3 ], // set 6,e
    [ 0xF4, variant_CB_F4 ], // set 6,h
    [ 0xF5, variant_CB_F5 ], // set 6,l
    [ 0xF6, variant_CB_F6 ], // set 6,(hl)
    [ 0xF7, variant_CB_F7 ], // set 6,a
    [ 0xF8, variant_CB_F8 ], // set 7,b
    [ 0xF9, variant_CB_F9 ], // set 7,c
    [ 0xFA, variant_CB_FA ], // set 7,d
    [ 0xFB, variant_CB_FB ], // set 7,e
    [ 0xFC, variant_CB_FC ], // set 7,h
    [ 0xFD, variant_CB_FD ], // set 7,l
    [ 0xFE, variant_CB_FE ], // set 7,(hl)
    [ 0xFF, variant_CB_FF ], // set 7,a
  ])],
  [ 0xCC, variant_CC_nnnn ], // call z,nnnn
  [ 0xCD, variant_CD_nnnn ], // call nnnn
  [ 0xCE, variant_CE_nn ], // adc a,nn
  [ 0xCF, variant_CF ], // rst 8
  [ 0xD0, variant_D0 ], // ret nc
  [ 0xD1, variant_D1 ], // pop de
  [ 0xD2, variant_D2_nnnn ], // jp nc,nnnn
  [ 0xD3, variant_D3_nn ], // out (nn),a
  [ 0xD4, variant_D4_nnnn ], // call nc,nnnn
  [ 0xD5, variant_D5 ], // push de
  [ 0xD6, variant_D6_nn ], // sub a,nn
  [ 0xD7, variant_D7 ], // rst 16
  [ 0xD8, variant_D8 ], // ret c
  [ 0xD9, variant_D9 ], // exx 
  [ 0xDA, variant_DA_nnnn ], // jp c,nnnn
  [ 0xDB, variant_DB_nn ], // in a,(nn)
  [ 0xDC, variant_DC_nnnn ], // call c,nnnn
  [ 0xDD, new Map<number,OpcodeVariant | OpcodeMap>([
    [ 0x09, variant_DD_09 ], // add ix,bc
    [ 0x19, variant_DD_19 ], // add ix,de
    [ 0x21, variant_DD_21_nnnn ], // ld ix,nnnn
    [ 0x22, variant_DD_22_nnnn ], // ld (nnnn),ix
    [ 0x23, variant_DD_23 ], // inc ix
    [ 0x24, variant_DD_24 ], // inc ixh
    [ 0x25, variant_DD_25 ], // dec ixh
    [ 0x26, variant_DD_26_nn ], // ld ixh,nn
    [ 0x29, variant_DD_29 ], // add ix,ix
    [ 0x2A, variant_DD_2A_nnnn ], // ld ix,(nnnn)
    [ 0x2B, variant_DD_2B ], // dec ix
    [ 0x2C, variant_DD_2C ], // inc ixl
    [ 0x2D, variant_DD_2D ], // dec ixl
    [ 0x2E, variant_DD_2E_nn ], // ld ixl,nn
    [ 0x34, variant_DD_34_dd ], // inc (ix+dd)
    [ 0x35, variant_DD_35_dd ], // dec (ix+dd)
    [ 0x36, variant_DD_36_dd_nn ], // ld (ix+dd),nn
    [ 0x39, variant_DD_39 ], // add ix,sp
    [ 0x40, variant_DD_40 ], // ld b,b (alias of variant_40)
    [ 0x41, variant_DD_41 ], // ld b,c (alias of variant_41)
    [ 0x42, variant_DD_42 ], // ld b,d (alias of variant_42)
    [ 0x43, variant_DD_43 ], // ld b,e (alias of variant_43)
    [ 0x44, variant_DD_44 ], // ld b,ixh
    [ 0x45, variant_DD_45 ], // ld b,ixl
    [ 0x46, variant_DD_46_dd ], // ld b,(ix+dd)
    [ 0x47, variant_DD_47 ], // ld b,a (alias of variant_47)
    [ 0x48, variant_DD_48 ], // ld c,b (alias of variant_48)
    [ 0x49, variant_DD_49 ], // ld c,c (alias of variant_49)
    [ 0x4A, variant_DD_4A ], // ld c,d (alias of variant_4A)
    [ 0x4B, variant_DD_4B ], // ld c,e (alias of variant_4B)
    [ 0x4C, variant_DD_4C ], // ld c,ixh
    [ 0x4D, variant_DD_4D ], // ld c,ixl
    [ 0x4E, variant_DD_4E_dd ], // ld c,(ix+dd)
    [ 0x4F, variant_DD_4F ], // ld c,a (alias of variant_4F)
    [ 0x50, variant_DD_50 ], // ld d,b (alias of variant_50)
    [ 0x51, variant_DD_51 ], // ld d,c (alias of variant_51)
    [ 0x52, variant_DD_52 ], // ld d,d (alias of variant_52)
    [ 0x53, variant_DD_53 ], // ld d,e (alias of variant_53)
    [ 0x54, variant_DD_54 ], // ld d,ixh
    [ 0x55, variant_DD_55 ], // ld d,ixl
    [ 0x56, variant_DD_56_dd ], // ld d,(ix+dd)
    [ 0x57, variant_DD_57 ], // ld d,a (alias of variant_57)
    [ 0x58, variant_DD_58 ], // ld e,b (alias of variant_58)
    [ 0x59, variant_DD_59 ], // ld e,c (alias of variant_59)
    [ 0x5A, variant_DD_5A ], // ld e,d (alias of variant_5A)
    [ 0x5B, variant_DD_5B ], // ld e,e (alias of variant_5B)
    [ 0x5C, variant_DD_5C ], // ld e,ixh
    [ 0x5D, variant_DD_5D ], // ld e,ixl
    [ 0x5E, variant_DD_5E_dd ], // ld e,(ix+dd)
    [ 0x5F, variant_DD_5F ], // ld e,a (alias of variant_5F)
    [ 0x60, variant_DD_60 ], // ld ixh,b
    [ 0x61, variant_DD_61 ], // ld ixh,c
    [ 0x62, variant_DD_62 ], // ld ixh,d
    [ 0x63, variant_DD_63 ], // ld ixh,e
    [ 0x64, variant_DD_64 ], // ld ixh,ixh
    [ 0x65, variant_DD_65 ], // ld ixh,ixl
    [ 0x66, variant_DD_66_dd ], // ld h,(ix+dd)
    [ 0x67, variant_DD_67 ], // ld ixh,a
    [ 0x68, variant_DD_68 ], // ld ixl,b
    [ 0x69, variant_DD_69 ], // ld ixl,c
    [ 0x6A, variant_DD_6A ], // ld ixl,d
    [ 0x6B, variant_DD_6B ], // ld ixl,e
    [ 0x6C, variant_DD_6C ], // ld ixl,ixh
    [ 0x6D, variant_DD_6D ], // ld ixl,ixl
    [ 0x6E, variant_DD_6E_dd ], // ld l,(ix+dd)
    [ 0x6F, variant_DD_6F ], // ld ixl,a
    [ 0x70, variant_DD_70_dd ], // ld (ix+dd),b
    [ 0x71, variant_DD_71_dd ], // ld (ix+dd),c
    [ 0x72, variant_DD_72_dd ], // ld (ix+dd),d
    [ 0x73, variant_DD_73_dd ], // ld (ix+dd),e
    [ 0x74, variant_DD_74_dd ], // ld (ix+dd),h
    [ 0x75, variant_DD_75_dd ], // ld (ix+dd),l
    [ 0x77, variant_DD_77_dd ], // ld (ix+dd),a
    [ 0x78, variant_DD_78 ], // ld a,b (alias of variant_78)
    [ 0x79, variant_DD_79 ], // ld a,c (alias of variant_79)
    [ 0x7A, variant_DD_7A ], // ld a,d (alias of variant_7A)
    [ 0x7B, variant_DD_7B ], // ld a,e (alias of variant_7B)
    [ 0x7C, variant_DD_7C ], // ld a,ixh
    [ 0x7D, variant_DD_7D ], // ld a,ixl
    [ 0x7E, variant_DD_7E_dd ], // ld a,(ix+dd)
    [ 0x7F, variant_DD_7F ], // ld a,a (alias of variant_7F)
    [ 0x84, variant_DD_84 ], // add a,ixh
    [ 0x85, variant_DD_85 ], // add a,ixl
    [ 0x86, variant_DD_86_dd ], // add a,(ix+dd)
    [ 0x8C, variant_DD_8C ], // adc a,ixh
    [ 0x8D, variant_DD_8D ], // adc a,ixl
    [ 0x8E, variant_DD_8E_dd ], // adc a,(ix+dd)
    [ 0x94, variant_DD_94 ], // sub a,ixh
    [ 0x95, variant_DD_95 ], // sub a,ixl
    [ 0x96, variant_DD_96_dd ], // sub a,(ix+dd)
    [ 0x9C, variant_DD_9C ], // sbc a,ixh
    [ 0x9D, variant_DD_9D ], // sbc a,ixl
    [ 0x9E, variant_DD_9E_dd ], // sbc a,(ix+dd)
    [ 0xA4, variant_DD_A4 ], // and a,ixh
    [ 0xA5, variant_DD_A5 ], // and a,ixl
    [ 0xA6, variant_DD_A6_dd ], // and a,(ix+dd)
    [ 0xAC, variant_DD_AC ], // xor a,ixh
    [ 0xAD, variant_DD_AD ], // xor a,ixl
    [ 0xAE, variant_DD_AE_dd ], // xor a,(ix+dd)
    [ 0xB4, variant_DD_B4 ], // or a,ixh
    [ 0xB5, variant_DD_B5 ], // or a,ixl
    [ 0xB6, variant_DD_B6_dd ], // or a,(ix+dd)
    [ 0xBC, variant_DD_BC ], // cp a,ixh
    [ 0xBD, variant_DD_BD ], // cp a,ixl
    [ 0xBE, variant_DD_BE_dd ], // cp a,(ix+dd)
    [ 0xCB, new Map<number,OpcodeVariant | OpcodeMap>([
      [ 0x00, variant_DD_CB_dd_00 ], // ld b,rlc(ix+dd)
      [ 0x01, variant_DD_CB_dd_01 ], // ld c,rlc(ix+dd)
      [ 0x02, variant_DD_CB_dd_02 ], // ld d,rlc(ix+dd)
      [ 0x03, variant_DD_CB_dd_03 ], // ld e,rlc(ix+dd)
      [ 0x04, variant_DD_CB_dd_04 ], // ld h,rlc(ix+dd)
      [ 0x05, variant_DD_CB_dd_05 ], // ld l,rlc(ix+dd)
      [ 0x06, variant_DD_CB_dd_06 ], // rlc (ix+dd)
      [ 0x07, variant_DD_CB_dd_07 ], // ld a,rlc(ix+dd)
      [ 0x08, variant_DD_CB_dd_08 ], // ld b,rrc(ix+dd)
      [ 0x09, variant_DD_CB_dd_09 ], // ld c,rrc(ix+dd)
      [ 0x0A, variant_DD_CB_dd_0A ], // ld d,rrc(ix+dd)
      [ 0x0B, variant_DD_CB_dd_0B ], // ld e,rrc(ix+dd)
      [ 0x0C, variant_DD_CB_dd_0C ], // ld h,rrc(ix+dd)
      [ 0x0D, variant_DD_CB_dd_0D ], // ld l,rrc(ix+dd)
      [ 0x0E, variant_DD_CB_dd_0E ], // rrc (ix+dd)
      [ 0x0F, variant_DD_CB_dd_0F ], // ld a,rrc(ix+dd)
      [ 0x10, variant_DD_CB_dd_10 ], // ld b,rl(ix+dd)
      [ 0x11, variant_DD_CB_dd_11 ], // ld c,rl(ix+dd)
      [ 0x12, variant_DD_CB_dd_12 ], // ld d,rl(ix+dd)
      [ 0x13, variant_DD_CB_dd_13 ], // ld e,rl(ix+dd)
      [ 0x14, variant_DD_CB_dd_14 ], // ld h,rl(ix+dd)
      [ 0x15, variant_DD_CB_dd_15 ], // ld l,rl(ix+dd)
      [ 0x16, variant_DD_CB_dd_16 ], // rl (ix+dd)
      [ 0x17, variant_DD_CB_dd_17 ], // ld a,rl(ix+dd)
      [ 0x18, variant_DD_CB_dd_18 ], // ld b,rr(ix+dd)
      [ 0x19, variant_DD_CB_dd_19 ], // ld c,rr(ix+dd)
      [ 0x1A, variant_DD_CB_dd_1A ], // ld d,rr(ix+dd)
      [ 0x1B, variant_DD_CB_dd_1B ], // ld e,rr(ix+dd)
      [ 0x1C, variant_DD_CB_dd_1C ], // ld h,rr(ix+dd)
      [ 0x1D, variant_DD_CB_dd_1D ], // ld l,rr(ix+dd)
      [ 0x1E, variant_DD_CB_dd_1E ], // rr (ix+dd)
      [ 0x1F, variant_DD_CB_dd_1F ], // ld a,rr(ix+dd)
      [ 0x20, variant_DD_CB_dd_20 ], // ld b,sla(ix+dd)
      [ 0x21, variant_DD_CB_dd_21 ], // ld c,sla(ix+dd)
      [ 0x22, variant_DD_CB_dd_22 ], // ld d,sla(ix+dd)
      [ 0x23, variant_DD_CB_dd_23 ], // ld e,sla(ix+dd)
      [ 0x24, variant_DD_CB_dd_24 ], // ld h,sla(ix+dd)
      [ 0x25, variant_DD_CB_dd_25 ], // ld l,sla(ix+dd)
      [ 0x26, variant_DD_CB_dd_26 ], // sla (ix+dd)
      [ 0x27, variant_DD_CB_dd_27 ], // ld a,sla(ix+dd)
      [ 0x28, variant_DD_CB_dd_28 ], // ld b,sra(ix+dd)
      [ 0x29, variant_DD_CB_dd_29 ], // ld c,sra(ix+dd)
      [ 0x2A, variant_DD_CB_dd_2A ], // ld d,sra(ix+dd)
      [ 0x2B, variant_DD_CB_dd_2B ], // ld e,sra(ix+dd)
      [ 0x2C, variant_DD_CB_dd_2C ], // ld h,sra(ix+dd)
      [ 0x2D, variant_DD_CB_dd_2D ], // ld l,sra(ix+dd)
      [ 0x2E, variant_DD_CB_dd_2E ], // sra (ix+dd)
      [ 0x2F, variant_DD_CB_dd_2F ], // ld a,sra(ix+dd)
      [ 0x30, variant_DD_CB_dd_30 ], // ld b,sll(ix+dd)
      [ 0x31, variant_DD_CB_dd_31 ], // ld c,sll(ix+dd)
      [ 0x32, variant_DD_CB_dd_32 ], // ld d,sll(ix+dd)
      [ 0x33, variant_DD_CB_dd_33 ], // ld e,sll(ix+dd)
      [ 0x34, variant_DD_CB_dd_34 ], // ld h,sll(ix+dd)
      [ 0x35, variant_DD_CB_dd_35 ], // ld l,sll(ix+dd)
      [ 0x36, variant_DD_CB_dd_36 ], // sll (ix+dd)
      [ 0x37, variant_DD_CB_dd_37 ], // ld a,sll(ix+dd)
      [ 0x38, variant_DD_CB_dd_38 ], // ld b,srl(ix+dd)
      [ 0x39, variant_DD_CB_dd_39 ], // ld c,srl(ix+dd)
      [ 0x3A, variant_DD_CB_dd_3A ], // ld d,srl(ix+dd)
      [ 0x3B, variant_DD_CB_dd_3B ], // ld e,srl(ix+dd)
      [ 0x3C, variant_DD_CB_dd_3C ], // ld h,srl(ix+dd)
      [ 0x3D, variant_DD_CB_dd_3D ], // ld l,srl(ix+dd)
      [ 0x3E, variant_DD_CB_dd_3E ], // srl (ix+dd)
      [ 0x3F, variant_DD_CB_dd_3F ], // ld a,srl(ix+dd)
      [ 0x40, variant_DD_CB_dd_40 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x41, variant_DD_CB_dd_41 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x42, variant_DD_CB_dd_42 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x43, variant_DD_CB_dd_43 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x44, variant_DD_CB_dd_44 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x45, variant_DD_CB_dd_45 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x46, variant_DD_CB_dd_46 ], // bit 0,(ix+dd)
      [ 0x47, variant_DD_CB_dd_47 ], // bit 0,(ix+dd) (alias of variant_DD_CB_dd_46)
      [ 0x48, variant_DD_CB_dd_48 ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x49, variant_DD_CB_dd_49 ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x4A, variant_DD_CB_dd_4A ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x4B, variant_DD_CB_dd_4B ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x4C, variant_DD_CB_dd_4C ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x4D, variant_DD_CB_dd_4D ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x4E, variant_DD_CB_dd_4E ], // bit 1,(ix+dd)
      [ 0x4F, variant_DD_CB_dd_4F ], // bit 1,(ix+dd) (alias of variant_DD_CB_dd_4E)
      [ 0x50, variant_DD_CB_dd_50 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x51, variant_DD_CB_dd_51 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x52, variant_DD_CB_dd_52 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x53, variant_DD_CB_dd_53 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x54, variant_DD_CB_dd_54 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x55, variant_DD_CB_dd_55 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x56, variant_DD_CB_dd_56 ], // bit 2,(ix+dd)
      [ 0x57, variant_DD_CB_dd_57 ], // bit 2,(ix+dd) (alias of variant_DD_CB_dd_56)
      [ 0x58, variant_DD_CB_dd_58 ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x59, variant_DD_CB_dd_59 ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x5A, variant_DD_CB_dd_5A ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x5B, variant_DD_CB_dd_5B ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x5C, variant_DD_CB_dd_5C ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x5D, variant_DD_CB_dd_5D ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x5E, variant_DD_CB_dd_5E ], // bit 3,(ix+dd)
      [ 0x5F, variant_DD_CB_dd_5F ], // bit 3,(ix+dd) (alias of variant_DD_CB_dd_5E)
      [ 0x60, variant_DD_CB_dd_60 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x61, variant_DD_CB_dd_61 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x62, variant_DD_CB_dd_62 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x63, variant_DD_CB_dd_63 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x64, variant_DD_CB_dd_64 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x65, variant_DD_CB_dd_65 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x66, variant_DD_CB_dd_66 ], // bit 4,(ix+dd)
      [ 0x67, variant_DD_CB_dd_67 ], // bit 4,(ix+dd) (alias of variant_DD_CB_dd_66)
      [ 0x68, variant_DD_CB_dd_68 ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x69, variant_DD_CB_dd_69 ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x6A, variant_DD_CB_dd_6A ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x6B, variant_DD_CB_dd_6B ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x6C, variant_DD_CB_dd_6C ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x6D, variant_DD_CB_dd_6D ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x6E, variant_DD_CB_dd_6E ], // bit 5,(ix+dd)
      [ 0x6F, variant_DD_CB_dd_6F ], // bit 5,(ix+dd) (alias of variant_DD_CB_dd_6E)
      [ 0x70, variant_DD_CB_dd_70 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x71, variant_DD_CB_dd_71 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x72, variant_DD_CB_dd_72 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x73, variant_DD_CB_dd_73 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x74, variant_DD_CB_dd_74 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x75, variant_DD_CB_dd_75 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x76, variant_DD_CB_dd_76 ], // bit 6,(ix+dd)
      [ 0x77, variant_DD_CB_dd_77 ], // bit 6,(ix+dd) (alias of variant_DD_CB_dd_76)
      [ 0x78, variant_DD_CB_dd_78 ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x79, variant_DD_CB_dd_79 ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x7A, variant_DD_CB_dd_7A ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x7B, variant_DD_CB_dd_7B ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x7C, variant_DD_CB_dd_7C ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x7D, variant_DD_CB_dd_7D ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x7E, variant_DD_CB_dd_7E ], // bit 7,(ix+dd)
      [ 0x7F, variant_DD_CB_dd_7F ], // bit 7,(ix+dd) (alias of variant_DD_CB_dd_7E)
      [ 0x80, variant_DD_CB_dd_80 ], // ld b,res 0,(ix+dd)
      [ 0x81, variant_DD_CB_dd_81 ], // ld c,res 0,(ix+dd)
      [ 0x82, variant_DD_CB_dd_82 ], // ld d,res 0,(ix+dd)
      [ 0x83, variant_DD_CB_dd_83 ], // ld e,res 0,(ix+dd)
      [ 0x84, variant_DD_CB_dd_84 ], // ld h,res 0,(ix+dd)
      [ 0x85, variant_DD_CB_dd_85 ], // ld l,res 0,(ix+dd)
      [ 0x86, variant_DD_CB_dd_86 ], // res 0,(ix+dd)
      [ 0x87, variant_DD_CB_dd_87 ], // ld a,res 0,(ix+dd)
      [ 0x88, variant_DD_CB_dd_88 ], // ld b,res 1,(ix+dd)
      [ 0x89, variant_DD_CB_dd_89 ], // ld c,res 1,(ix+dd)
      [ 0x8A, variant_DD_CB_dd_8A ], // ld d,res 1,(ix+dd)
      [ 0x8B, variant_DD_CB_dd_8B ], // ld e,res 1,(ix+dd)
      [ 0x8C, variant_DD_CB_dd_8C ], // ld h,res 1,(ix+dd)
      [ 0x8D, variant_DD_CB_dd_8D ], // ld l,res 1,(ix+dd)
      [ 0x8E, variant_DD_CB_dd_8E ], // res 1,(ix+dd)
      [ 0x8F, variant_DD_CB_dd_8F ], // ld a,res 1,(ix+dd)
      [ 0x90, variant_DD_CB_dd_90 ], // ld b,res 2,(ix+dd)
      [ 0x91, variant_DD_CB_dd_91 ], // ld c,res 2,(ix+dd)
      [ 0x92, variant_DD_CB_dd_92 ], // ld d,res 2,(ix+dd)
      [ 0x93, variant_DD_CB_dd_93 ], // ld e,res 2,(ix+dd)
      [ 0x94, variant_DD_CB_dd_94 ], // ld h,res 2,(ix+dd)
      [ 0x95, variant_DD_CB_dd_95 ], // ld l,res 2,(ix+dd)
      [ 0x96, variant_DD_CB_dd_96 ], // res 2,(ix+dd)
      [ 0x97, variant_DD_CB_dd_97 ], // ld a,res 2,(ix+dd)
      [ 0x98, variant_DD_CB_dd_98 ], // ld b,res 3,(ix+dd)
      [ 0x99, variant_DD_CB_dd_99 ], // ld c,res 3,(ix+dd)
      [ 0x9A, variant_DD_CB_dd_9A ], // ld d,res 3,(ix+dd)
      [ 0x9B, variant_DD_CB_dd_9B ], // ld e,res 3,(ix+dd)
      [ 0x9C, variant_DD_CB_dd_9C ], // ld h,res 3,(ix+dd)
      [ 0x9D, variant_DD_CB_dd_9D ], // ld l,res 3,(ix+dd)
      [ 0x9E, variant_DD_CB_dd_9E ], // res 3,(ix+dd)
      [ 0x9F, variant_DD_CB_dd_9F ], // ld a,res 3,(ix+dd)
      [ 0xA0, variant_DD_CB_dd_A0 ], // ld b,res 4,(ix+dd)
      [ 0xA1, variant_DD_CB_dd_A1 ], // ld c,res 4,(ix+dd)
      [ 0xA2, variant_DD_CB_dd_A2 ], // ld d,res 4,(ix+dd)
      [ 0xA3, variant_DD_CB_dd_A3 ], // ld e,res 4,(ix+dd)
      [ 0xA4, variant_DD_CB_dd_A4 ], // ld h,res 4,(ix+dd)
      [ 0xA5, variant_DD_CB_dd_A5 ], // ld l,res 4,(ix+dd)
      [ 0xA6, variant_DD_CB_dd_A6 ], // res 4,(ix+dd)
      [ 0xA7, variant_DD_CB_dd_A7 ], // ld a,res 4,(ix+dd)
      [ 0xA8, variant_DD_CB_dd_A8 ], // ld b,res 5,(ix+dd)
      [ 0xA9, variant_DD_CB_dd_A9 ], // ld c,res 5,(ix+dd)
      [ 0xAA, variant_DD_CB_dd_AA ], // ld d,res 5,(ix+dd)
      [ 0xAB, variant_DD_CB_dd_AB ], // ld e,res 5,(ix+dd)
      [ 0xAC, variant_DD_CB_dd_AC ], // ld h,res 5,(ix+dd)
      [ 0xAD, variant_DD_CB_dd_AD ], // ld l,res 5,(ix+dd)
      [ 0xAE, variant_DD_CB_dd_AE ], // res 5,(ix+dd)
      [ 0xAF, variant_DD_CB_dd_AF ], // ld a,res 5,(ix+dd)
      [ 0xB0, variant_DD_CB_dd_B0 ], // ld b,res 6,(ix+dd)
      [ 0xB1, variant_DD_CB_dd_B1 ], // ld c,res 6,(ix+dd)
      [ 0xB2, variant_DD_CB_dd_B2 ], // ld d,res 6,(ix+dd)
      [ 0xB3, variant_DD_CB_dd_B3 ], // ld e,res 6,(ix+dd)
      [ 0xB4, variant_DD_CB_dd_B4 ], // ld h,res 6,(ix+dd)
      [ 0xB5, variant_DD_CB_dd_B5 ], // ld l,res 6,(ix+dd)
      [ 0xB6, variant_DD_CB_dd_B6 ], // res 6,(ix+dd)
      [ 0xB7, variant_DD_CB_dd_B7 ], // ld a,res 6,(ix+dd)
      [ 0xB8, variant_DD_CB_dd_B8 ], // ld b,res 7,(ix+dd)
      [ 0xB9, variant_DD_CB_dd_B9 ], // ld c,res 7,(ix+dd)
      [ 0xBA, variant_DD_CB_dd_BA ], // ld d,res 7,(ix+dd)
      [ 0xBB, variant_DD_CB_dd_BB ], // ld e,res 7,(ix+dd)
      [ 0xBC, variant_DD_CB_dd_BC ], // ld h,res 7,(ix+dd)
      [ 0xBD, variant_DD_CB_dd_BD ], // ld l,res 7,(ix+dd)
      [ 0xBE, variant_DD_CB_dd_BE ], // res 7,(ix+dd)
      [ 0xBF, variant_DD_CB_dd_BF ], // ld a,res 7,(ix+dd)
      [ 0xC0, variant_DD_CB_dd_C0 ], // ld b,set 0,(ix+dd)
      [ 0xC1, variant_DD_CB_dd_C1 ], // ld c,set 0,(ix+dd)
      [ 0xC2, variant_DD_CB_dd_C2 ], // ld d,set 0,(ix+dd)
      [ 0xC3, variant_DD_CB_dd_C3 ], // ld e,set 0,(ix+dd)
      [ 0xC4, variant_DD_CB_dd_C4 ], // ld h,set 0,(ix+dd)
      [ 0xC5, variant_DD_CB_dd_C5 ], // ld l,set 0,(ix+dd)
      [ 0xC6, variant_DD_CB_dd_C6 ], // set 0,(ix+dd)
      [ 0xC7, variant_DD_CB_dd_C7 ], // ld a,set 0,(ix+dd)
      [ 0xC8, variant_DD_CB_dd_C8 ], // ld b,set 1,(ix+dd)
      [ 0xC9, variant_DD_CB_dd_C9 ], // ld c,set 1,(ix+dd)
      [ 0xCA, variant_DD_CB_dd_CA ], // ld d,set 1,(ix+dd)
      [ 0xCB, variant_DD_CB_dd_CB ], // ld e,set 1,(ix+dd)
      [ 0xCC, variant_DD_CB_dd_CC ], // ld h,set 1,(ix+dd)
      [ 0xCD, variant_DD_CB_dd_CD ], // ld l,set 1,(ix+dd)
      [ 0xCE, variant_DD_CB_dd_CE ], // set 1,(ix+dd)
      [ 0xCF, variant_DD_CB_dd_CF ], // ld a,set 1,(ix+dd)
      [ 0xD0, variant_DD_CB_dd_D0 ], // ld b,set 2,(ix+dd)
      [ 0xD1, variant_DD_CB_dd_D1 ], // ld c,set 2,(ix+dd)
      [ 0xD2, variant_DD_CB_dd_D2 ], // ld d,set 2,(ix+dd)
      [ 0xD3, variant_DD_CB_dd_D3 ], // ld e,set 2,(ix+dd)
      [ 0xD4, variant_DD_CB_dd_D4 ], // ld h,set 2,(ix+dd)
      [ 0xD5, variant_DD_CB_dd_D5 ], // ld l,set 2,(ix+dd)
      [ 0xD6, variant_DD_CB_dd_D6 ], // set 2,(ix+dd)
      [ 0xD7, variant_DD_CB_dd_D7 ], // ld a,set 2,(ix+dd)
      [ 0xD8, variant_DD_CB_dd_D8 ], // ld b,set 3,(ix+dd)
      [ 0xD9, variant_DD_CB_dd_D9 ], // ld c,set 3,(ix+dd)
      [ 0xDA, variant_DD_CB_dd_DA ], // ld d,set 3,(ix+dd)
      [ 0xDB, variant_DD_CB_dd_DB ], // ld e,set 3,(ix+dd)
      [ 0xDC, variant_DD_CB_dd_DC ], // ld h,set 3,(ix+dd)
      [ 0xDD, variant_DD_CB_dd_DD ], // ld l,set 3,(ix+dd)
      [ 0xDE, variant_DD_CB_dd_DE ], // set 3,(ix+dd)
      [ 0xDF, variant_DD_CB_dd_DF ], // ld a,set 3,(ix+dd)
      [ 0xE0, variant_DD_CB_dd_E0 ], // ld b,set 4,(ix+dd)
      [ 0xE1, variant_DD_CB_dd_E1 ], // ld c,set 4,(ix+dd)
      [ 0xE2, variant_DD_CB_dd_E2 ], // ld d,set 4,(ix+dd)
      [ 0xE3, variant_DD_CB_dd_E3 ], // ld e,set 4,(ix+dd)
      [ 0xE4, variant_DD_CB_dd_E4 ], // ld h,set 4,(ix+dd)
      [ 0xE5, variant_DD_CB_dd_E5 ], // ld l,set 4,(ix+dd)
      [ 0xE6, variant_DD_CB_dd_E6 ], // set 4,(ix+dd)
      [ 0xE7, variant_DD_CB_dd_E7 ], // ld a,set 4,(ix+dd)
      [ 0xE8, variant_DD_CB_dd_E8 ], // ld b,set 5,(ix+dd)
      [ 0xE9, variant_DD_CB_dd_E9 ], // ld c,set 5,(ix+dd)
      [ 0xEA, variant_DD_CB_dd_EA ], // ld d,set 5,(ix+dd)
      [ 0xEB, variant_DD_CB_dd_EB ], // ld e,set 5,(ix+dd)
      [ 0xEC, variant_DD_CB_dd_EC ], // ld h,set 5,(ix+dd)
      [ 0xED, variant_DD_CB_dd_ED ], // ld l,set 5,(ix+dd)
      [ 0xEE, variant_DD_CB_dd_EE ], // set 5,(ix+dd)
      [ 0xEF, variant_DD_CB_dd_EF ], // ld a,set 5,(ix+dd)
      [ 0xF0, variant_DD_CB_dd_F0 ], // ld b,set 6,(ix+dd)
      [ 0xF1, variant_DD_CB_dd_F1 ], // ld c,set 6,(ix+dd)
      [ 0xF2, variant_DD_CB_dd_F2 ], // ld d,set 6,(ix+dd)
      [ 0xF3, variant_DD_CB_dd_F3 ], // ld e,set 6,(ix+dd)
      [ 0xF4, variant_DD_CB_dd_F4 ], // ld h,set 6,(ix+dd)
      [ 0xF5, variant_DD_CB_dd_F5 ], // ld l,set 6,(ix+dd)
      [ 0xF6, variant_DD_CB_dd_F6 ], // set 6,(ix+dd)
      [ 0xF7, variant_DD_CB_dd_F7 ], // ld a,set 6,(ix+dd)
      [ 0xF8, variant_DD_CB_dd_F8 ], // ld b,set 7,(ix+dd)
      [ 0xF9, variant_DD_CB_dd_F9 ], // ld c,set 7,(ix+dd)
      [ 0xFA, variant_DD_CB_dd_FA ], // ld d,set 7,(ix+dd)
      [ 0xFB, variant_DD_CB_dd_FB ], // ld e,set 7,(ix+dd)
      [ 0xFC, variant_DD_CB_dd_FC ], // ld h,set 7,(ix+dd)
      [ 0xFD, variant_DD_CB_dd_FD ], // ld l,set 7,(ix+dd)
      [ 0xFE, variant_DD_CB_dd_FE ], // set 7,(ix+dd)
      [ 0xFF, variant_DD_CB_dd_FF ], // ld a,set 7,(ix+dd)
    ])],
    [ 0xE1, variant_DD_E1 ], // pop ix
    [ 0xE3, variant_DD_E3 ], // ex (sp),ix
    [ 0xE5, variant_DD_E5 ], // push ix
    [ 0xE9, variant_DD_E9 ], // jp ix
    [ 0xF9, variant_DD_F9 ], // ld sp,ix
  ])],
  [ 0xDE, variant_DE_nn ], // sbc a,nn
  [ 0xDF, variant_DF ], // rst 24
  [ 0xE0, variant_E0 ], // ret po
  [ 0xE1, variant_E1 ], // pop hl
  [ 0xE2, variant_E2_nnnn ], // jp po,nnnn
  [ 0xE3, variant_E3 ], // ex (sp),hl
  [ 0xE4, variant_E4_nnnn ], // call po,nnnn
  [ 0xE5, variant_E5 ], // push hl
  [ 0xE6, variant_E6_nn ], // and a,nn
  [ 0xE7, variant_E7 ], // rst 32
  [ 0xE8, variant_E8 ], // ret pe
  [ 0xE9, variant_E9 ], // jp hl
  [ 0xEA, variant_EA_nnnn ], // jp pe,nnnn
  [ 0xEB, variant_EB ], // ex de,hl
  [ 0xEC, variant_EC_nnnn ], // call pe,nnnn
  [ 0xED, new Map<number,OpcodeVariant | OpcodeMap>([
    [ 0x40, variant_ED_40 ], // in b,(c)
    [ 0x41, variant_ED_41 ], // out (c),b
    [ 0x42, variant_ED_42 ], // sbc hl,bc
    [ 0x43, variant_ED_43_nnnn ], // ld (nnnn),bc
    [ 0x44, variant_ED_44 ], // neg 
    [ 0x45, variant_ED_45 ], // retn 
    [ 0x46, variant_ED_46 ], // im 0
    [ 0x47, variant_ED_47 ], // ld i,a
    [ 0x48, variant_ED_48 ], // in c,(c)
    [ 0x49, variant_ED_49 ], // out (c),c
    [ 0x4A, variant_ED_4A ], // adc hl,bc
    [ 0x4B, variant_ED_4B_nnnn ], // ld bc,(nnnn)
    [ 0x4C, variant_ED_4C ], // neg  (alias of variant_ED_44)
    [ 0x4D, variant_ED_4D ], // reti 
    [ 0x4E, variant_ED_4E ], // im 0 (alias of variant_ED_46)
    [ 0x4F, variant_ED_4F ], // ld r,a
    [ 0x50, variant_ED_50 ], // in d,(c)
    [ 0x51, variant_ED_51 ], // out (c),d
    [ 0x52, variant_ED_52 ], // sbc hl,de
    [ 0x53, variant_ED_53_nnnn ], // ld (nnnn),de
    [ 0x54, variant_ED_54 ], // neg  (alias of variant_ED_44)
    [ 0x55, variant_ED_55 ], // retn  (alias of variant_ED_45)
    [ 0x56, variant_ED_56 ], // im 1
    [ 0x57, variant_ED_57 ], // ld a,i
    [ 0x58, variant_ED_58 ], // in e,(c)
    [ 0x59, variant_ED_59 ], // out (c),e
    [ 0x5A, variant_ED_5A ], // adc hl,de
    [ 0x5B, variant_ED_5B_nnnn ], // ld de,(nnnn)
    [ 0x5C, variant_ED_5C ], // neg  (alias of variant_ED_44)
    [ 0x5D, variant_ED_5D ], // retn  (alias of variant_ED_45)
    [ 0x5E, variant_ED_5E ], // im 2
    [ 0x5F, variant_ED_5F ], // ld a,r
    [ 0x60, variant_ED_60 ], // in h,(c)
    [ 0x61, variant_ED_61 ], // out (c),h
    [ 0x62, variant_ED_62 ], // sbc hl,hl
    [ 0x63, variant_ED_63_nnnn ], // ld (nnnn),hl (alias of variant_22_nnnn)
    [ 0x64, variant_ED_64 ], // neg  (alias of variant_ED_44)
    [ 0x65, variant_ED_65 ], // retn  (alias of variant_ED_45)
    [ 0x66, variant_ED_66 ], // im 0 (alias of variant_ED_46)
    [ 0x67, variant_ED_67 ], // rrd 
    [ 0x68, variant_ED_68 ], // in l,(c)
    [ 0x69, variant_ED_69 ], // out (c),l
    [ 0x6A, variant_ED_6A ], // adc hl,hl
    [ 0x6B, variant_ED_6B_nnnn ], // ld hl,(nnnn) (alias of variant_2A_nnnn)
    [ 0x6C, variant_ED_6C ], // neg  (alias of variant_ED_44)
    [ 0x6D, variant_ED_6D ], // retn  (alias of variant_ED_45)
    [ 0x6E, variant_ED_6E ], // im 0 (alias of variant_ED_46)
    [ 0x6F, variant_ED_6F ], // rld 
    [ 0x70, variant_ED_70 ], // in f,(c)
    [ 0x71, variant_ED_71 ], // out (c),0
    [ 0x72, variant_ED_72 ], // sbc hl,sp
    [ 0x73, variant_ED_73_nnnn ], // ld (nnnn),sp
    [ 0x74, variant_ED_74 ], // neg  (alias of variant_ED_44)
    [ 0x75, variant_ED_75 ], // retn  (alias of variant_ED_45)
    [ 0x76, variant_ED_76 ], // im 1 (alias of variant_ED_56)
    [ 0x78, variant_ED_78 ], // in a,(c)
    [ 0x79, variant_ED_79 ], // out (c),a
    [ 0x7A, variant_ED_7A ], // adc hl,sp
    [ 0x7B, variant_ED_7B_nnnn ], // ld sp,(nnnn)
    [ 0x7C, variant_ED_7C ], // neg  (alias of variant_ED_44)
    [ 0x7D, variant_ED_7D ], // retn  (alias of variant_ED_45)
    [ 0x7E, variant_ED_7E ], // im 2 (alias of variant_ED_5E)
    [ 0xA0, variant_ED_A0 ], // ldi 
    [ 0xA1, variant_ED_A1 ], // cpi 
    [ 0xA2, variant_ED_A2 ], // ini 
    [ 0xA3, variant_ED_A3 ], // outi 
    [ 0xA8, variant_ED_A8 ], // ldd 
    [ 0xA9, variant_ED_A9 ], // cpd 
    [ 0xAA, variant_ED_AA ], // ind 
    [ 0xAB, variant_ED_AB ], // outd 
    [ 0xB0, variant_ED_B0 ], // ldir 
    [ 0xB1, variant_ED_B1 ], // cpir 
    [ 0xB2, variant_ED_B2 ], // inir 
    [ 0xB3, variant_ED_B3 ], // otir 
    [ 0xB8, variant_ED_B8 ], // lddr 
    [ 0xB9, variant_ED_B9 ], // cpdr 
    [ 0xBA, variant_ED_BA ], // indr 
    [ 0xBB, variant_ED_BB ], // otdr 
  ])],
  [ 0xEE, variant_EE_nn ], // xor a,nn
  [ 0xEF, variant_EF ], // rst 40
  [ 0xF0, variant_F0 ], // ret p
  [ 0xF1, variant_F1 ], // pop af
  [ 0xF2, variant_F2_nnnn ], // jp p,nnnn
  [ 0xF3, variant_F3 ], // di 
  [ 0xF4, variant_F4_nnnn ], // call p,nnnn
  [ 0xF5, variant_F5 ], // push af
  [ 0xF6, variant_F6_nn ], // or a,nn
  [ 0xF7, variant_F7 ], // rst 48
  [ 0xF8, variant_F8 ], // ret m
  [ 0xF9, variant_F9 ], // ld sp,hl
  [ 0xFA, variant_FA_nnnn ], // jp m,nnnn
  [ 0xFB, variant_FB ], // ei 
  [ 0xFC, variant_FC_nnnn ], // call m,nnnn
  [ 0xFD, new Map<number,OpcodeVariant | OpcodeMap>([
    [ 0x09, variant_FD_09 ], // add iy,bc
    [ 0x19, variant_FD_19 ], // add iy,de
    [ 0x21, variant_FD_21_nnnn ], // ld iy,nnnn
    [ 0x22, variant_FD_22_nnnn ], // ld (nnnn),iy
    [ 0x23, variant_FD_23 ], // inc iy
    [ 0x24, variant_FD_24 ], // inc iyh
    [ 0x25, variant_FD_25 ], // dec iyh
    [ 0x26, variant_FD_26_nn ], // ld iyh,nn
    [ 0x29, variant_FD_29 ], // add iy,iy
    [ 0x2A, variant_FD_2A_nnnn ], // ld iy,(nnnn)
    [ 0x2B, variant_FD_2B ], // dec iy
    [ 0x2C, variant_FD_2C ], // inc iyl
    [ 0x2D, variant_FD_2D ], // dec iyl
    [ 0x2E, variant_FD_2E_nn ], // ld iyl,nn
    [ 0x34, variant_FD_34_dd ], // inc (iy+dd)
    [ 0x35, variant_FD_35_dd ], // dec (iy+dd)
    [ 0x36, variant_FD_36_dd_nn ], // ld (iy+dd),nn
    [ 0x39, variant_FD_39 ], // add iy,sp
    [ 0x40, variant_FD_40 ], // ld b,b (alias of variant_40)
    [ 0x41, variant_FD_41 ], // ld b,c (alias of variant_41)
    [ 0x42, variant_FD_42 ], // ld b,d (alias of variant_42)
    [ 0x43, variant_FD_43 ], // ld b,e (alias of variant_43)
    [ 0x44, variant_FD_44 ], // ld b,iyh
    [ 0x45, variant_FD_45 ], // ld b,iyl
    [ 0x46, variant_FD_46_dd ], // ld b,(iy+dd)
    [ 0x47, variant_FD_47 ], // ld b,a (alias of variant_47)
    [ 0x48, variant_FD_48 ], // ld c,b (alias of variant_48)
    [ 0x49, variant_FD_49 ], // ld c,c (alias of variant_49)
    [ 0x4A, variant_FD_4A ], // ld c,d (alias of variant_4A)
    [ 0x4B, variant_FD_4B ], // ld c,e (alias of variant_4B)
    [ 0x4C, variant_FD_4C ], // ld c,iyh
    [ 0x4D, variant_FD_4D ], // ld c,iyl
    [ 0x4E, variant_FD_4E_dd ], // ld c,(iy+dd)
    [ 0x4F, variant_FD_4F ], // ld c,a (alias of variant_4F)
    [ 0x50, variant_FD_50 ], // ld d,b (alias of variant_50)
    [ 0x51, variant_FD_51 ], // ld d,c (alias of variant_51)
    [ 0x52, variant_FD_52 ], // ld d,d (alias of variant_52)
    [ 0x53, variant_FD_53 ], // ld d,e (alias of variant_53)
    [ 0x54, variant_FD_54 ], // ld d,iyh
    [ 0x55, variant_FD_55 ], // ld d,iyl
    [ 0x56, variant_FD_56_dd ], // ld d,(iy+dd)
    [ 0x57, variant_FD_57 ], // ld d,a (alias of variant_57)
    [ 0x58, variant_FD_58 ], // ld e,b (alias of variant_58)
    [ 0x59, variant_FD_59 ], // ld e,c (alias of variant_59)
    [ 0x5A, variant_FD_5A ], // ld e,d (alias of variant_5A)
    [ 0x5B, variant_FD_5B ], // ld e,e (alias of variant_5B)
    [ 0x5C, variant_FD_5C ], // ld e,iyh
    [ 0x5D, variant_FD_5D ], // ld e,iyl
    [ 0x5E, variant_FD_5E_dd ], // ld e,(iy+dd)
    [ 0x5F, variant_FD_5F ], // ld e,a (alias of variant_5F)
    [ 0x60, variant_FD_60 ], // ld iyh,b
    [ 0x61, variant_FD_61 ], // ld iyh,c
    [ 0x62, variant_FD_62 ], // ld iyh,d
    [ 0x63, variant_FD_63 ], // ld iyh,e
    [ 0x64, variant_FD_64 ], // ld iyh,iyh
    [ 0x65, variant_FD_65 ], // ld iyh,iyl
    [ 0x66, variant_FD_66_dd ], // ld h,(iy+dd)
    [ 0x67, variant_FD_67 ], // ld iyh,a
    [ 0x68, variant_FD_68 ], // ld iyl,b
    [ 0x69, variant_FD_69 ], // ld iyl,c
    [ 0x6A, variant_FD_6A ], // ld iyl,d
    [ 0x6B, variant_FD_6B ], // ld iyl,e
    [ 0x6C, variant_FD_6C ], // ld iyl,iyh
    [ 0x6D, variant_FD_6D ], // ld iyl,iyl
    [ 0x6E, variant_FD_6E_dd ], // ld l,(iy+dd)
    [ 0x6F, variant_FD_6F ], // ld iyl,a
    [ 0x70, variant_FD_70_dd ], // ld (iy+dd),b
    [ 0x71, variant_FD_71_dd ], // ld (iy+dd),c
    [ 0x72, variant_FD_72_dd ], // ld (iy+dd),d
    [ 0x73, variant_FD_73_dd ], // ld (iy+dd),e
    [ 0x74, variant_FD_74_dd ], // ld (iy+dd),h
    [ 0x75, variant_FD_75_dd ], // ld (iy+dd),l
    [ 0x77, variant_FD_77_dd ], // ld (iy+dd),a
    [ 0x78, variant_FD_78 ], // ld a,b (alias of variant_78)
    [ 0x79, variant_FD_79 ], // ld a,c (alias of variant_79)
    [ 0x7A, variant_FD_7A ], // ld a,d (alias of variant_7A)
    [ 0x7B, variant_FD_7B ], // ld a,e (alias of variant_7B)
    [ 0x7C, variant_FD_7C ], // ld a,iyh
    [ 0x7D, variant_FD_7D ], // ld a,iyl
    [ 0x7E, variant_FD_7E_dd ], // ld a,(iy+dd)
    [ 0x7F, variant_FD_7F ], // ld a,a (alias of variant_7F)
    [ 0x84, variant_FD_84 ], // add a,iyh
    [ 0x85, variant_FD_85 ], // add a,iyl
    [ 0x86, variant_FD_86_dd ], // add a,(iy+dd)
    [ 0x8C, variant_FD_8C ], // adc a,iyh
    [ 0x8D, variant_FD_8D ], // adc a,iyl
    [ 0x8E, variant_FD_8E_dd ], // adc a,(iy+dd)
    [ 0x94, variant_FD_94 ], // sub a,iyh
    [ 0x95, variant_FD_95 ], // sub a,iyl
    [ 0x96, variant_FD_96_dd ], // sub a,(iy+dd)
    [ 0x9C, variant_FD_9C ], // sbc a,iyh
    [ 0x9D, variant_FD_9D ], // sbc a,iyl
    [ 0x9E, variant_FD_9E_dd ], // sbc a,(iy+dd)
    [ 0xA4, variant_FD_A4 ], // and a,iyh
    [ 0xA5, variant_FD_A5 ], // and a,iyl
    [ 0xA6, variant_FD_A6_dd ], // and a,(iy+dd)
    [ 0xAC, variant_FD_AC ], // xor a,iyh
    [ 0xAD, variant_FD_AD ], // xor a,iyl
    [ 0xAE, variant_FD_AE_dd ], // xor a,(iy+dd)
    [ 0xB4, variant_FD_B4 ], // or a,iyh
    [ 0xB5, variant_FD_B5 ], // or a,iyl
    [ 0xB6, variant_FD_B6_dd ], // or a,(iy+dd)
    [ 0xBC, variant_FD_BC ], // cp a,iyh
    [ 0xBD, variant_FD_BD ], // cp a,iyl
    [ 0xBE, variant_FD_BE_dd ], // cp a,(iy+dd)
    [ 0xCB, new Map<number,OpcodeVariant | OpcodeMap>([
      [ 0x00, variant_FD_CB_dd_00 ], // ld b,rlc(iy+dd)
      [ 0x01, variant_FD_CB_dd_01 ], // ld c,rlc(iy+dd)
      [ 0x02, variant_FD_CB_dd_02 ], // ld d,rlc(iy+dd)
      [ 0x03, variant_FD_CB_dd_03 ], // ld e,rlc(iy+dd)
      [ 0x04, variant_FD_CB_dd_04 ], // ld h,rlc(iy+dd)
      [ 0x05, variant_FD_CB_dd_05 ], // ld l,rlc(iy+dd)
      [ 0x06, variant_FD_CB_dd_06 ], // rlc (iy+dd)
      [ 0x07, variant_FD_CB_dd_07 ], // ld a,rlc(iy+dd)
      [ 0x08, variant_FD_CB_dd_08 ], // ld b,rrc(iy+dd)
      [ 0x09, variant_FD_CB_dd_09 ], // ld c,rrc(iy+dd)
      [ 0x0A, variant_FD_CB_dd_0A ], // ld d,rrc(iy+dd)
      [ 0x0B, variant_FD_CB_dd_0B ], // ld e,rrc(iy+dd)
      [ 0x0C, variant_FD_CB_dd_0C ], // ld h,rrc(iy+dd)
      [ 0x0D, variant_FD_CB_dd_0D ], // ld l,rrc(iy+dd)
      [ 0x0E, variant_FD_CB_dd_0E ], // rrc (iy+dd)
      [ 0x0F, variant_FD_CB_dd_0F ], // ld a,rrc(iy+dd)
      [ 0x10, variant_FD_CB_dd_10 ], // ld b,rl(iy+dd)
      [ 0x11, variant_FD_CB_dd_11 ], // ld c,rl(iy+dd)
      [ 0x12, variant_FD_CB_dd_12 ], // ld d,rl(iy+dd)
      [ 0x13, variant_FD_CB_dd_13 ], // ld e,rl(iy+dd)
      [ 0x14, variant_FD_CB_dd_14 ], // ld h,rl(iy+dd)
      [ 0x15, variant_FD_CB_dd_15 ], // ld l,rl(iy+dd)
      [ 0x16, variant_FD_CB_dd_16 ], // rl (iy+dd)
      [ 0x17, variant_FD_CB_dd_17 ], // ld a,rl(iy+dd)
      [ 0x18, variant_FD_CB_dd_18 ], // ld b,rr(iy+dd)
      [ 0x19, variant_FD_CB_dd_19 ], // ld c,rr(iy+dd)
      [ 0x1A, variant_FD_CB_dd_1A ], // ld d,rr(iy+dd)
      [ 0x1B, variant_FD_CB_dd_1B ], // ld e,rr(iy+dd)
      [ 0x1C, variant_FD_CB_dd_1C ], // ld h,rr(iy+dd)
      [ 0x1D, variant_FD_CB_dd_1D ], // ld l,rr(iy+dd)
      [ 0x1E, variant_FD_CB_dd_1E ], // rr (iy+dd)
      [ 0x1F, variant_FD_CB_dd_1F ], // ld a,rr(iy+dd)
      [ 0x20, variant_FD_CB_dd_20 ], // ld b,sla(iy+dd)
      [ 0x21, variant_FD_CB_dd_21 ], // ld c,sla(iy+dd)
      [ 0x22, variant_FD_CB_dd_22 ], // ld d,sla(iy+dd)
      [ 0x23, variant_FD_CB_dd_23 ], // ld e,sla(iy+dd)
      [ 0x24, variant_FD_CB_dd_24 ], // ld h,sla(iy+dd)
      [ 0x25, variant_FD_CB_dd_25 ], // ld l,sla(iy+dd)
      [ 0x26, variant_FD_CB_dd_26 ], // sla (iy+dd)
      [ 0x27, variant_FD_CB_dd_27 ], // ld a,sla(iy+dd)
      [ 0x28, variant_FD_CB_dd_28 ], // ld b,sra(iy+dd)
      [ 0x29, variant_FD_CB_dd_29 ], // ld c,sra(iy+dd)
      [ 0x2A, variant_FD_CB_dd_2A ], // ld d,sra(iy+dd)
      [ 0x2B, variant_FD_CB_dd_2B ], // ld e,sra(iy+dd)
      [ 0x2C, variant_FD_CB_dd_2C ], // ld h,sra(iy+dd)
      [ 0x2D, variant_FD_CB_dd_2D ], // ld l,sra(iy+dd)
      [ 0x2E, variant_FD_CB_dd_2E ], // sra (iy+dd)
      [ 0x2F, variant_FD_CB_dd_2F ], // ld a,sra(iy+dd)
      [ 0x30, variant_FD_CB_dd_30 ], // ld b,sll(iy+dd)
      [ 0x31, variant_FD_CB_dd_31 ], // ld c,sll(iy+dd)
      [ 0x32, variant_FD_CB_dd_32 ], // ld d,sll(iy+dd)
      [ 0x33, variant_FD_CB_dd_33 ], // ld e,sll(iy+dd)
      [ 0x34, variant_FD_CB_dd_34 ], // ld h,sll(iy+dd)
      [ 0x35, variant_FD_CB_dd_35 ], // ld l,sll(iy+dd)
      [ 0x36, variant_FD_CB_dd_36 ], // sll (iy+dd)
      [ 0x37, variant_FD_CB_dd_37 ], // ld a,sll(iy+dd)
      [ 0x38, variant_FD_CB_dd_38 ], // ld b,srl(iy+dd)
      [ 0x39, variant_FD_CB_dd_39 ], // ld c,srl(iy+dd)
      [ 0x3A, variant_FD_CB_dd_3A ], // ld d,srl(iy+dd)
      [ 0x3B, variant_FD_CB_dd_3B ], // ld e,srl(iy+dd)
      [ 0x3C, variant_FD_CB_dd_3C ], // ld h,srl(iy+dd)
      [ 0x3D, variant_FD_CB_dd_3D ], // ld l,srl(iy+dd)
      [ 0x3E, variant_FD_CB_dd_3E ], // srl (iy+dd)
      [ 0x3F, variant_FD_CB_dd_3F ], // ld a,srl(iy+dd)
      [ 0x40, variant_FD_CB_dd_40 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x41, variant_FD_CB_dd_41 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x42, variant_FD_CB_dd_42 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x43, variant_FD_CB_dd_43 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x44, variant_FD_CB_dd_44 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x45, variant_FD_CB_dd_45 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x46, variant_FD_CB_dd_46 ], // bit 0,(iy+dd)
      [ 0x47, variant_FD_CB_dd_47 ], // bit 0,(iy+dd) (alias of variant_FD_CB_dd_46)
      [ 0x48, variant_FD_CB_dd_48 ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x49, variant_FD_CB_dd_49 ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x4A, variant_FD_CB_dd_4A ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x4B, variant_FD_CB_dd_4B ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x4C, variant_FD_CB_dd_4C ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x4D, variant_FD_CB_dd_4D ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x4E, variant_FD_CB_dd_4E ], // bit 1,(iy+dd)
      [ 0x4F, variant_FD_CB_dd_4F ], // bit 1,(iy+dd) (alias of variant_FD_CB_dd_4E)
      [ 0x50, variant_FD_CB_dd_50 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x51, variant_FD_CB_dd_51 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x52, variant_FD_CB_dd_52 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x53, variant_FD_CB_dd_53 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x54, variant_FD_CB_dd_54 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x55, variant_FD_CB_dd_55 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x56, variant_FD_CB_dd_56 ], // bit 2,(iy+dd)
      [ 0x57, variant_FD_CB_dd_57 ], // bit 2,(iy+dd) (alias of variant_FD_CB_dd_56)
      [ 0x58, variant_FD_CB_dd_58 ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x59, variant_FD_CB_dd_59 ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x5A, variant_FD_CB_dd_5A ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x5B, variant_FD_CB_dd_5B ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x5C, variant_FD_CB_dd_5C ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x5D, variant_FD_CB_dd_5D ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x5E, variant_FD_CB_dd_5E ], // bit 3,(iy+dd)
      [ 0x5F, variant_FD_CB_dd_5F ], // bit 3,(iy+dd) (alias of variant_FD_CB_dd_5E)
      [ 0x60, variant_FD_CB_dd_60 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x61, variant_FD_CB_dd_61 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x62, variant_FD_CB_dd_62 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x63, variant_FD_CB_dd_63 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x64, variant_FD_CB_dd_64 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x65, variant_FD_CB_dd_65 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x66, variant_FD_CB_dd_66 ], // bit 4,(iy+dd)
      [ 0x67, variant_FD_CB_dd_67 ], // bit 4,(iy+dd) (alias of variant_FD_CB_dd_66)
      [ 0x68, variant_FD_CB_dd_68 ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x69, variant_FD_CB_dd_69 ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x6A, variant_FD_CB_dd_6A ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x6B, variant_FD_CB_dd_6B ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x6C, variant_FD_CB_dd_6C ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x6D, variant_FD_CB_dd_6D ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x6E, variant_FD_CB_dd_6E ], // bit 5,(iy+dd)
      [ 0x6F, variant_FD_CB_dd_6F ], // bit 5,(iy+dd) (alias of variant_FD_CB_dd_6E)
      [ 0x70, variant_FD_CB_dd_70 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x71, variant_FD_CB_dd_71 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x72, variant_FD_CB_dd_72 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x73, variant_FD_CB_dd_73 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x74, variant_FD_CB_dd_74 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x75, variant_FD_CB_dd_75 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x76, variant_FD_CB_dd_76 ], // bit 6,(iy+dd)
      [ 0x77, variant_FD_CB_dd_77 ], // bit 6,(iy+dd) (alias of variant_FD_CB_dd_76)
      [ 0x78, variant_FD_CB_dd_78 ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x79, variant_FD_CB_dd_79 ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x7A, variant_FD_CB_dd_7A ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x7B, variant_FD_CB_dd_7B ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x7C, variant_FD_CB_dd_7C ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x7D, variant_FD_CB_dd_7D ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x7E, variant_FD_CB_dd_7E ], // bit 7,(iy+dd)
      [ 0x7F, variant_FD_CB_dd_7F ], // bit 7,(iy+dd) (alias of variant_FD_CB_dd_7E)
      [ 0x80, variant_FD_CB_dd_80 ], // ld b,res 0,(iy+dd)
      [ 0x81, variant_FD_CB_dd_81 ], // ld c,res 0,(iy+dd)
      [ 0x82, variant_FD_CB_dd_82 ], // ld d,res 0,(iy+dd)
      [ 0x83, variant_FD_CB_dd_83 ], // ld e,res 0,(iy+dd)
      [ 0x84, variant_FD_CB_dd_84 ], // ld h,res 0,(iy+dd)
      [ 0x85, variant_FD_CB_dd_85 ], // ld l,res 0,(iy+dd)
      [ 0x86, variant_FD_CB_dd_86 ], // res 0,(iy+dd)
      [ 0x87, variant_FD_CB_dd_87 ], // ld a,res 0,(iy+dd)
      [ 0x88, variant_FD_CB_dd_88 ], // ld b,res 1,(iy+dd)
      [ 0x89, variant_FD_CB_dd_89 ], // ld c,res 1,(iy+dd)
      [ 0x8A, variant_FD_CB_dd_8A ], // ld d,res 1,(iy+dd)
      [ 0x8B, variant_FD_CB_dd_8B ], // ld e,res 1,(iy+dd)
      [ 0x8C, variant_FD_CB_dd_8C ], // ld h,res 1,(iy+dd)
      [ 0x8D, variant_FD_CB_dd_8D ], // ld l,res 1,(iy+dd)
      [ 0x8E, variant_FD_CB_dd_8E ], // res 1,(iy+dd)
      [ 0x8F, variant_FD_CB_dd_8F ], // ld a,res 1,(iy+dd)
      [ 0x90, variant_FD_CB_dd_90 ], // ld b,res 2,(iy+dd)
      [ 0x91, variant_FD_CB_dd_91 ], // ld c,res 2,(iy+dd)
      [ 0x92, variant_FD_CB_dd_92 ], // ld d,res 2,(iy+dd)
      [ 0x93, variant_FD_CB_dd_93 ], // ld e,res 2,(iy+dd)
      [ 0x94, variant_FD_CB_dd_94 ], // ld h,res 2,(iy+dd)
      [ 0x95, variant_FD_CB_dd_95 ], // ld l,res 2,(iy+dd)
      [ 0x96, variant_FD_CB_dd_96 ], // res 2,(iy+dd)
      [ 0x97, variant_FD_CB_dd_97 ], // ld a,res 2,(iy+dd)
      [ 0x98, variant_FD_CB_dd_98 ], // ld b,res 3,(iy+dd)
      [ 0x99, variant_FD_CB_dd_99 ], // ld c,res 3,(iy+dd)
      [ 0x9A, variant_FD_CB_dd_9A ], // ld d,res 3,(iy+dd)
      [ 0x9B, variant_FD_CB_dd_9B ], // ld e,res 3,(iy+dd)
      [ 0x9C, variant_FD_CB_dd_9C ], // ld h,res 3,(iy+dd)
      [ 0x9D, variant_FD_CB_dd_9D ], // ld l,res 3,(iy+dd)
      [ 0x9E, variant_FD_CB_dd_9E ], // res 3,(iy+dd)
      [ 0x9F, variant_FD_CB_dd_9F ], // ld a,res 3,(iy+dd)
      [ 0xA0, variant_FD_CB_dd_A0 ], // ld b,res 4,(iy+dd)
      [ 0xA1, variant_FD_CB_dd_A1 ], // ld c,res 4,(iy+dd)
      [ 0xA2, variant_FD_CB_dd_A2 ], // ld d,res 4,(iy+dd)
      [ 0xA3, variant_FD_CB_dd_A3 ], // ld e,res 4,(iy+dd)
      [ 0xA4, variant_FD_CB_dd_A4 ], // ld h,res 4,(iy+dd)
      [ 0xA5, variant_FD_CB_dd_A5 ], // ld l,res 4,(iy+dd)
      [ 0xA6, variant_FD_CB_dd_A6 ], // res 4,(iy+dd)
      [ 0xA7, variant_FD_CB_dd_A7 ], // ld a,res 4,(iy+dd)
      [ 0xA8, variant_FD_CB_dd_A8 ], // ld b,res 5,(iy+dd)
      [ 0xA9, variant_FD_CB_dd_A9 ], // ld c,res 5,(iy+dd)
      [ 0xAA, variant_FD_CB_dd_AA ], // ld d,res 5,(iy+dd)
      [ 0xAB, variant_FD_CB_dd_AB ], // ld e,res 5,(iy+dd)
      [ 0xAC, variant_FD_CB_dd_AC ], // ld h,res 5,(iy+dd)
      [ 0xAD, variant_FD_CB_dd_AD ], // ld l,res 5,(iy+dd)
      [ 0xAE, variant_FD_CB_dd_AE ], // res 5,(iy+dd)
      [ 0xAF, variant_FD_CB_dd_AF ], // ld a,res 5,(iy+dd)
      [ 0xB0, variant_FD_CB_dd_B0 ], // ld b,res 6,(iy+dd)
      [ 0xB1, variant_FD_CB_dd_B1 ], // ld c,res 6,(iy+dd)
      [ 0xB2, variant_FD_CB_dd_B2 ], // ld d,res 6,(iy+dd)
      [ 0xB3, variant_FD_CB_dd_B3 ], // ld e,res 6,(iy+dd)
      [ 0xB4, variant_FD_CB_dd_B4 ], // ld h,res 6,(iy+dd)
      [ 0xB5, variant_FD_CB_dd_B5 ], // ld l,res 6,(iy+dd)
      [ 0xB6, variant_FD_CB_dd_B6 ], // res 6,(iy+dd)
      [ 0xB7, variant_FD_CB_dd_B7 ], // ld a,res 6,(iy+dd)
      [ 0xB8, variant_FD_CB_dd_B8 ], // ld b,res 7,(iy+dd)
      [ 0xB9, variant_FD_CB_dd_B9 ], // ld c,res 7,(iy+dd)
      [ 0xBA, variant_FD_CB_dd_BA ], // ld d,res 7,(iy+dd)
      [ 0xBB, variant_FD_CB_dd_BB ], // ld e,res 7,(iy+dd)
      [ 0xBC, variant_FD_CB_dd_BC ], // ld h,res 7,(iy+dd)
      [ 0xBD, variant_FD_CB_dd_BD ], // ld l,res 7,(iy+dd)
      [ 0xBE, variant_FD_CB_dd_BE ], // res 7,(iy+dd)
      [ 0xBF, variant_FD_CB_dd_BF ], // ld a,res 7,(iy+dd)
      [ 0xC0, variant_FD_CB_dd_C0 ], // ld b,set 0,(iy+dd)
      [ 0xC1, variant_FD_CB_dd_C1 ], // ld c,set 0,(iy+dd)
      [ 0xC2, variant_FD_CB_dd_C2 ], // ld d,set 0,(iy+dd)
      [ 0xC3, variant_FD_CB_dd_C3 ], // ld e,set 0,(iy+dd)
      [ 0xC4, variant_FD_CB_dd_C4 ], // ld h,set 0,(iy+dd)
      [ 0xC5, variant_FD_CB_dd_C5 ], // ld l,set 0,(iy+dd)
      [ 0xC6, variant_FD_CB_dd_C6 ], // set 0,(iy+dd)
      [ 0xC7, variant_FD_CB_dd_C7 ], // ld a,set 0,(iy+dd)
      [ 0xC8, variant_FD_CB_dd_C8 ], // ld b,set 1,(iy+dd)
      [ 0xC9, variant_FD_CB_dd_C9 ], // ld c,set 1,(iy+dd)
      [ 0xCA, variant_FD_CB_dd_CA ], // ld d,set 1,(iy+dd)
      [ 0xCB, variant_FD_CB_dd_CB ], // ld e,set 1,(iy+dd)
      [ 0xCC, variant_FD_CB_dd_CC ], // ld h,set 1,(iy+dd)
      [ 0xCD, variant_FD_CB_dd_CD ], // ld l,set 1,(iy+dd)
      [ 0xCE, variant_FD_CB_dd_CE ], // set 1,(iy+dd)
      [ 0xCF, variant_FD_CB_dd_CF ], // ld a,set 1,(iy+dd)
      [ 0xD0, variant_FD_CB_dd_D0 ], // ld b,set 2,(iy+dd)
      [ 0xD1, variant_FD_CB_dd_D1 ], // ld c,set 2,(iy+dd)
      [ 0xD2, variant_FD_CB_dd_D2 ], // ld d,set 2,(iy+dd)
      [ 0xD3, variant_FD_CB_dd_D3 ], // ld e,set 2,(iy+dd)
      [ 0xD4, variant_FD_CB_dd_D4 ], // ld h,set 2,(iy+dd)
      [ 0xD5, variant_FD_CB_dd_D5 ], // ld l,set 2,(iy+dd)
      [ 0xD6, variant_FD_CB_dd_D6 ], // set 2,(iy+dd)
      [ 0xD7, variant_FD_CB_dd_D7 ], // ld a,set 2,(iy+dd)
      [ 0xD8, variant_FD_CB_dd_D8 ], // ld b,set 3,(iy+dd)
      [ 0xD9, variant_FD_CB_dd_D9 ], // ld c,set 3,(iy+dd)
      [ 0xDA, variant_FD_CB_dd_DA ], // ld d,set 3,(iy+dd)
      [ 0xDB, variant_FD_CB_dd_DB ], // ld e,set 3,(iy+dd)
      [ 0xDC, variant_FD_CB_dd_DC ], // ld h,set 3,(iy+dd)
      [ 0xDD, variant_FD_CB_dd_DD ], // ld l,set 3,(iy+dd)
      [ 0xDE, variant_FD_CB_dd_DE ], // set 3,(iy+dd)
      [ 0xDF, variant_FD_CB_dd_DF ], // ld a,set 3,(iy+dd)
      [ 0xE0, variant_FD_CB_dd_E0 ], // ld b,set 4,(iy+dd)
      [ 0xE1, variant_FD_CB_dd_E1 ], // ld c,set 4,(iy+dd)
      [ 0xE2, variant_FD_CB_dd_E2 ], // ld d,set 4,(iy+dd)
      [ 0xE3, variant_FD_CB_dd_E3 ], // ld e,set 4,(iy+dd)
      [ 0xE4, variant_FD_CB_dd_E4 ], // ld h,set 4,(iy+dd)
      [ 0xE5, variant_FD_CB_dd_E5 ], // ld l,set 4,(iy+dd)
      [ 0xE6, variant_FD_CB_dd_E6 ], // set 4,(iy+dd)
      [ 0xE7, variant_FD_CB_dd_E7 ], // ld a,set 4,(iy+dd)
      [ 0xE8, variant_FD_CB_dd_E8 ], // ld b,set 5,(iy+dd)
      [ 0xE9, variant_FD_CB_dd_E9 ], // ld c,set 5,(iy+dd)
      [ 0xEA, variant_FD_CB_dd_EA ], // ld d,set 5,(iy+dd)
      [ 0xEB, variant_FD_CB_dd_EB ], // ld e,set 5,(iy+dd)
      [ 0xEC, variant_FD_CB_dd_EC ], // ld h,set 5,(iy+dd)
      [ 0xED, variant_FD_CB_dd_ED ], // ld l,set 5,(iy+dd)
      [ 0xEE, variant_FD_CB_dd_EE ], // set 5,(iy+dd)
      [ 0xEF, variant_FD_CB_dd_EF ], // ld a,set 5,(iy+dd)
      [ 0xF0, variant_FD_CB_dd_F0 ], // ld b,set 6,(iy+dd)
      [ 0xF1, variant_FD_CB_dd_F1 ], // ld c,set 6,(iy+dd)
      [ 0xF2, variant_FD_CB_dd_F2 ], // ld d,set 6,(iy+dd)
      [ 0xF3, variant_FD_CB_dd_F3 ], // ld e,set 6,(iy+dd)
      [ 0xF4, variant_FD_CB_dd_F4 ], // ld h,set 6,(iy+dd)
      [ 0xF5, variant_FD_CB_dd_F5 ], // ld l,set 6,(iy+dd)
      [ 0xF6, variant_FD_CB_dd_F6 ], // set 6,(iy+dd)
      [ 0xF7, variant_FD_CB_dd_F7 ], // ld a,set 6,(iy+dd)
      [ 0xF8, variant_FD_CB_dd_F8 ], // ld b,set 7,(iy+dd)
      [ 0xF9, variant_FD_CB_dd_F9 ], // ld c,set 7,(iy+dd)
      [ 0xFA, variant_FD_CB_dd_FA ], // ld d,set 7,(iy+dd)
      [ 0xFB, variant_FD_CB_dd_FB ], // ld e,set 7,(iy+dd)
      [ 0xFC, variant_FD_CB_dd_FC ], // ld h,set 7,(iy+dd)
      [ 0xFD, variant_FD_CB_dd_FD ], // ld l,set 7,(iy+dd)
      [ 0xFE, variant_FD_CB_dd_FE ], // set 7,(iy+dd)
      [ 0xFF, variant_FD_CB_dd_FF ], // ld a,set 7,(iy+dd)
    ])],
    [ 0xE1, variant_FD_E1 ], // pop iy
    [ 0xE3, variant_FD_E3 ], // ex (sp),iy
    [ 0xE5, variant_FD_E5 ], // push iy
    [ 0xE9, variant_FD_E9 ], // jp iy
    [ 0xF9, variant_FD_F9 ], // ld sp,iy
  ])],
  [ 0xFE, variant_FE_nn ], // cp a,nn
  [ 0xFF, variant_FF ], // rst 56
]);
