#!/usr/bin/env python3

# Generates TypeScript with a string that contains the raw binary.
#
# Run from the top directory:
#
#     % tools/convert_roms
#

def convertRom(romFilename, tsFilename, variableName):
    rom = open(romFilename, "rb").read()

    # Convert from the hex files. These are copy/pasted from the rom.cpp files in trs80gp.
    if romFilename.endswith(".hex"):
        rom = bytes(int(b, 16) for b in rom.decode("utf-8").split(","))

    f = open(tsFilename, "w")
    f.write("// Generated by convert_roms. Do not modify.\n")
    f.write("\n")
    f.write("export const " + variableName + " = \"");
    for b in rom:
        if b == 92: # Backslash
            f.write("\\\\")
        elif b == 34: # Double quote
            f.write("\\\"")
        elif b >= 32 and b < 127:
            f.write(chr(b))
        else:
            f.write("\\x%02x" % b)
    f.write("\";\n")
    f.close()

    print("Converted " + romFilename + " to " + tsFilename);

convertRom("roms/model1-level1.rom", "src/Model1Level1Rom.ts", "model1Level1Rom")
convertRom("roms/model1-level2.rom", "src/Model1Level2Rom.ts", "model1Level2Rom")
convertRom("roms/model3.rom", "src/Model3Rom.ts", "model3Rom")
convertRom("roms/model4.hex", "src/Model4Rom.ts", "model4Rom")

